{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"LSTM.ipynb의 사본","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"GODiobNZUnZo","executionInfo":{"status":"ok","timestamp":1652337175841,"user_tz":-540,"elapsed":389,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["# 한글폰트 사용 in colab\n","%matplotlib inline  \n","\n","import matplotlib as mpl \n","import matplotlib.pyplot as plt \n","import matplotlib.font_manager as fm  \n","\n","!apt-get update -qq\n","!apt-get install fonts-nanum* -qq\n","\n","path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wf-N5pQ-9wwx","executionInfo":{"status":"ok","timestamp":1652337193207,"user_tz":-540,"elapsed":6532,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"569f07a8-9324-45f4-d0b1-06aa32798c08"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["NanumBarunGothic\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_haNy6NFVMXD","executionInfo":{"status":"ok","timestamp":1652337199974,"user_tz":-540,"elapsed":2776,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"a63b9e2a-602b-4824-f19c-9ccd798f5e18"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["rtn_df=pd.read_csv(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/최종데이터셋.csv\")"],"metadata":{"id":"H-V5SmX7xz8d","executionInfo":{"status":"ok","timestamp":1652337202112,"user_tz":-540,"elapsed":372,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df3=rtn_df[['Date','코스피']]\n","df3.Date=pd.to_datetime(df3.Date)\n","df3=df3.set_index('Date')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IWW8kAr3C5KT","executionInfo":{"status":"ok","timestamp":1652337204820,"user_tz":-540,"elapsed":452,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"2b820c04-bc9e-4aa6-a872-a26782c7ccc5"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py:5516: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  self[name] = value\n"]}]},{"cell_type":"code","source":["rtn_df['Date']=pd.to_datetime(rtn_df['Date'])"],"metadata":{"id":"mVgtVlFnyHFQ","executionInfo":{"status":"ok","timestamp":1652337207028,"user_tz":-540,"elapsed":344,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["rtn_df=rtn_df.set_index('Date')"],"metadata":{"id":"HGFHltWNygTi","executionInfo":{"status":"ok","timestamp":1652337208487,"user_tz":-540,"elapsed":3,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["rtn_df2=rtn_df.copy()\n","rtn_df2 = rtn_df2[['단기채로그', '중기채로그', 'ksp로그', 'iau로그', 'dbc로그', 'vnq로그', 'nsd로그']]"],"metadata":{"id":"6X730LLUQcAG","executionInfo":{"status":"ok","timestamp":1652337212814,"user_tz":-540,"elapsed":355,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["rtn_df=rtn_df[rtn_df['상승']==1]"],"metadata":{"id":"zY0hdQYSymD6","executionInfo":{"status":"ok","timestamp":1652337214272,"user_tz":-540,"elapsed":4,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["rtn_df=rtn_df[['단기채로그', '중기채로그', 'ksp로그', 'iau로그', 'dbc로그', 'vnq로그', 'nsd로그']]"],"metadata":{"id":"0yhZ0Ey14x9Y","executionInfo":{"status":"ok","timestamp":1652337215606,"user_tz":-540,"elapsed":6,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["rtn_df_test=rtn_df.loc['2020-07-01':'2021-08-31']"],"metadata":{"id":"8bN2yuF54i4D","executionInfo":{"status":"ok","timestamp":1652337234441,"user_tz":-540,"elapsed":404,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["rtn_df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"ot-fhlirRo82","executionInfo":{"status":"ok","timestamp":1652337238488,"user_tz":-540,"elapsed":370,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"7781eae5-ff95-44cc-e5b1-351ff5e3b43c"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               단기채로그     중기채로그     ksp로그     iau로그     dbc로그     vnq로그  \\\n","Date                                                                     \n","2020-07-01  0.000048  0.000124 -0.000773 -0.004129  0.008091  0.022787   \n","2020-07-02  0.000080  0.000543  0.013517  0.002361  0.004021 -0.002867   \n","2020-07-03  0.000105 -0.000133  0.007948  0.000000  0.000000  0.000000   \n","2020-07-06  0.000069 -0.000404  0.016368  0.005879  0.007994 -0.000499   \n","2020-07-07  0.000041  0.000413 -0.010919  0.006427  0.000796 -0.020057   \n","...              ...       ...       ...       ...       ...       ...   \n","2021-08-25 -0.000062  0.000378  0.002708 -0.006724  0.008936 -0.000661   \n","2021-08-26  0.000008  0.000898 -0.005826  0.001173 -0.007880  0.000378   \n","2021-08-27  0.000047 -0.000193  0.001715  0.014255  0.012579  0.010428   \n","2021-08-30  0.000131  0.000472  0.003278 -0.004632  0.003639  0.009950   \n","2021-08-31  0.000078  0.000125  0.017366  0.002029 -0.004681  0.004708   \n","\n","               nsd로그  \n","Date                  \n","2020-07-01  0.010740  \n","2020-07-02 -0.005813  \n","2020-07-03  0.000000  \n","2020-07-06  0.008460  \n","2020-07-07 -0.005051  \n","...              ...  \n","2021-08-25  0.004026  \n","2021-08-26 -0.002404  \n","2021-08-27  0.012011  \n","2021-08-30  0.003199  \n","2021-08-31  0.008618  \n","\n","[303 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-eac3087c-f48b-4743-9015-2dd12fb3167e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>ksp로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>0.000048</td>\n","      <td>0.000124</td>\n","      <td>-0.000773</td>\n","      <td>-0.004129</td>\n","      <td>0.008091</td>\n","      <td>0.022787</td>\n","      <td>0.010740</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-02</th>\n","      <td>0.000080</td>\n","      <td>0.000543</td>\n","      <td>0.013517</td>\n","      <td>0.002361</td>\n","      <td>0.004021</td>\n","      <td>-0.002867</td>\n","      <td>-0.005813</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-03</th>\n","      <td>0.000105</td>\n","      <td>-0.000133</td>\n","      <td>0.007948</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-06</th>\n","      <td>0.000069</td>\n","      <td>-0.000404</td>\n","      <td>0.016368</td>\n","      <td>0.005879</td>\n","      <td>0.007994</td>\n","      <td>-0.000499</td>\n","      <td>0.008460</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-07</th>\n","      <td>0.000041</td>\n","      <td>0.000413</td>\n","      <td>-0.010919</td>\n","      <td>0.006427</td>\n","      <td>0.000796</td>\n","      <td>-0.020057</td>\n","      <td>-0.005051</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-25</th>\n","      <td>-0.000062</td>\n","      <td>0.000378</td>\n","      <td>0.002708</td>\n","      <td>-0.006724</td>\n","      <td>0.008936</td>\n","      <td>-0.000661</td>\n","      <td>0.004026</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-26</th>\n","      <td>0.000008</td>\n","      <td>0.000898</td>\n","      <td>-0.005826</td>\n","      <td>0.001173</td>\n","      <td>-0.007880</td>\n","      <td>0.000378</td>\n","      <td>-0.002404</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-27</th>\n","      <td>0.000047</td>\n","      <td>-0.000193</td>\n","      <td>0.001715</td>\n","      <td>0.014255</td>\n","      <td>0.012579</td>\n","      <td>0.010428</td>\n","      <td>0.012011</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-30</th>\n","      <td>0.000131</td>\n","      <td>0.000472</td>\n","      <td>0.003278</td>\n","      <td>-0.004632</td>\n","      <td>0.003639</td>\n","      <td>0.009950</td>\n","      <td>0.003199</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-31</th>\n","      <td>0.000078</td>\n","      <td>0.000125</td>\n","      <td>0.017366</td>\n","      <td>0.002029</td>\n","      <td>-0.004681</td>\n","      <td>0.004708</td>\n","      <td>0.008618</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>303 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eac3087c-f48b-4743-9015-2dd12fb3167e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eac3087c-f48b-4743-9015-2dd12fb3167e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eac3087c-f48b-4743-9015-2dd12fb3167e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# rtn_df_train=pd.concat([rtn_df.loc[:'2019-11-30'],rtn_df.loc['2020-04-01':]],axis=0)"],"metadata":{"id":"H27mgSyu5ftP","executionInfo":{"status":"ok","timestamp":1652336864973,"user_tz":-540,"elapsed":371,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["#rtn_df_train=rtn_df.loc[:'2020-06-30']\n","rtn_df_train=rtn_df2.loc[:'2020-06-30']"],"metadata":{"id":"UX6HQHUaT3NH","executionInfo":{"status":"ok","timestamp":1652337243670,"user_tz":-540,"elapsed":415,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["rtn_df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"jWEC8odD8riY","executionInfo":{"status":"ok","timestamp":1652337246801,"user_tz":-540,"elapsed":357,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"6267c6bd-7aeb-4c5c-d2b6-eff1624ac4bf"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               단기채로그     중기채로그     ksp로그     iau로그     dbc로그     vnq로그  \\\n","Date                                                                     \n","2006-03-01  0.000000  0.000000  0.000000  0.001961 -0.002149  0.005808   \n","2006-03-02  0.000263 -0.000102 -0.002840  0.011332  0.017911 -0.001220   \n","2006-03-03  0.000105  0.000438 -0.028741 -0.007067  0.009256 -0.005508   \n","2006-03-06  0.000326 -0.000830  0.011826 -0.018973 -0.016041  0.017942   \n","2006-03-07  0.000094 -0.000840 -0.021110 -0.005072 -0.017601 -0.012129   \n","...              ...       ...       ...       ...       ...       ...   \n","2020-06-24  0.000044  0.000002  0.014103 -0.002368 -0.025318 -0.028902   \n","2020-06-25  0.000025  0.000145 -0.022996 -0.001186  0.009057  0.012691   \n","2020-06-26  0.000017  0.000046  0.010492  0.004737 -0.012371 -0.019380   \n","2020-06-29  0.000081 -0.000325 -0.019475  0.000000  0.016461  0.019123   \n","2020-06-30  0.000043 -0.000137  0.007068  0.003538  0.004886  0.011784   \n","\n","               nsd로그  \n","Date                  \n","2006-03-01 -0.000493  \n","2006-03-02 -0.012176  \n","2006-03-03  0.017103  \n","2006-03-06 -0.018103  \n","2006-03-07 -0.043212  \n","...              ...  \n","2020-06-24 -0.028392  \n","2020-06-25  0.029151  \n","2020-06-26 -0.024478  \n","2020-06-29  0.014826  \n","2020-06-30  0.016202  \n","\n","[3714 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-940c7a57-98e2-429e-a164-8431087b46af\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>ksp로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2006-03-01</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.001961</td>\n","      <td>-0.002149</td>\n","      <td>0.005808</td>\n","      <td>-0.000493</td>\n","    </tr>\n","    <tr>\n","      <th>2006-03-02</th>\n","      <td>0.000263</td>\n","      <td>-0.000102</td>\n","      <td>-0.002840</td>\n","      <td>0.011332</td>\n","      <td>0.017911</td>\n","      <td>-0.001220</td>\n","      <td>-0.012176</td>\n","    </tr>\n","    <tr>\n","      <th>2006-03-03</th>\n","      <td>0.000105</td>\n","      <td>0.000438</td>\n","      <td>-0.028741</td>\n","      <td>-0.007067</td>\n","      <td>0.009256</td>\n","      <td>-0.005508</td>\n","      <td>0.017103</td>\n","    </tr>\n","    <tr>\n","      <th>2006-03-06</th>\n","      <td>0.000326</td>\n","      <td>-0.000830</td>\n","      <td>0.011826</td>\n","      <td>-0.018973</td>\n","      <td>-0.016041</td>\n","      <td>0.017942</td>\n","      <td>-0.018103</td>\n","    </tr>\n","    <tr>\n","      <th>2006-03-07</th>\n","      <td>0.000094</td>\n","      <td>-0.000840</td>\n","      <td>-0.021110</td>\n","      <td>-0.005072</td>\n","      <td>-0.017601</td>\n","      <td>-0.012129</td>\n","      <td>-0.043212</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-24</th>\n","      <td>0.000044</td>\n","      <td>0.000002</td>\n","      <td>0.014103</td>\n","      <td>-0.002368</td>\n","      <td>-0.025318</td>\n","      <td>-0.028902</td>\n","      <td>-0.028392</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-25</th>\n","      <td>0.000025</td>\n","      <td>0.000145</td>\n","      <td>-0.022996</td>\n","      <td>-0.001186</td>\n","      <td>0.009057</td>\n","      <td>0.012691</td>\n","      <td>0.029151</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-26</th>\n","      <td>0.000017</td>\n","      <td>0.000046</td>\n","      <td>0.010492</td>\n","      <td>0.004737</td>\n","      <td>-0.012371</td>\n","      <td>-0.019380</td>\n","      <td>-0.024478</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-29</th>\n","      <td>0.000081</td>\n","      <td>-0.000325</td>\n","      <td>-0.019475</td>\n","      <td>0.000000</td>\n","      <td>0.016461</td>\n","      <td>0.019123</td>\n","      <td>0.014826</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-30</th>\n","      <td>0.000043</td>\n","      <td>-0.000137</td>\n","      <td>0.007068</td>\n","      <td>0.003538</td>\n","      <td>0.004886</td>\n","      <td>0.011784</td>\n","      <td>0.016202</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3714 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-940c7a57-98e2-429e-a164-8431087b46af')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-940c7a57-98e2-429e-a164-8431087b46af button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-940c7a57-98e2-429e-a164-8431087b46af');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["rtn_df_test.sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J2DvWoiR3Xqt","executionInfo":{"status":"ok","timestamp":1652337072937,"user_tz":-540,"elapsed":404,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"7b49cc79-754a-4f4d-8989-185ea99b5fd6"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["단기채로그    0.008814\n","중기채로그    0.007526\n","ksp로그    0.417026\n","iau로그    0.016056\n","dbc로그    0.443456\n","vnq로그    0.360610\n","nsd로그    0.508115\n","dtype: float64"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["import os\n","os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n","import numpy as np\n","import pickle\n","import tensorflow as tf\n","import tensorflow_probability as tfp\n","import matplotlib.pyplot as plt\n","from tensorflow.keras.layers import Input, LSTM, Dense, Activation\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.optimizers import Adam\n","from sklearn.utils import shuffle\n","from keras.models import Sequential\n","from keras.layers import Dense, LSTM\n","from keras import optimizers\n","from keras.callbacks import EarlyStopping, ModelCheckpoint"],"metadata":{"id":"eP3-orgFsG_a","executionInfo":{"status":"ok","timestamp":1652337265601,"user_tz":-540,"elapsed":3664,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Markowitz's Portfolio Network (MPN)을 이용해서 최적 포트폴리오를 구축한다.\n","#\n","# 1. 학습 데이터와 평가 데이터 생성 모듈.\n","#\n","# 참고 : https://blog.naver.com/chunjein/222492404960\n","#        https://blog.naver.com/chunjein/222494724278\n","#        https://blog.naver.com/chunjein/222496640766\n","#\n","# 2021.08.27   blog.naver.com/chunjein (조성현)\n","# ------------------------------------------------------------------------\n","import pandas as pd\n","import numpy as np\n","import pickle\n","\n","\n","N_STOCKS = 7  # 포트폴리오를 구성할 주식 종목 개수\n","N_TIME = 20    # look back window size\n","N_FUTURE = 20  # 미래 20 기간의 최적 포트폴리오를 추정할 예정이다.\n","\n","\n","# 1. 학습과 performance-test에 사용할 데이터를 생성한다.\n","# --------------------------------------------------\n","# 수익률 sequence 데이터를 생성한다.\n","def make_sequence(x):\n","    T = N_TIME + N_FUTURE\n","    x_seq = np.expand_dims(np.array(x.iloc[0:T, :]), 0)\n","    \n","    for i in range(1, len(x) - T + 1):\n","        d = np.expand_dims(np.array(x.iloc[i:(i+T), :]), 0)\n","        x_seq = np.concatenate((x_seq, d))\n","        \n","    return x_seq\n","\n","# 학습 데이터와 시험 데이터를 생성한다. 시험 데이터는 향후 performance test용으로\n","# 사용한다. 학습 데이터 80%, 시험 데이터 20%\n","n = int(rtn_df.shape[0] * 0.9)\n","rtn_train = make_sequence(rtn_df_train)\n","rtn_test = make_sequence(rtn_df_test)   # 이 데이터는 학습에 사용하지 않는다.\n"," \n","print(\"# 수익률 sequence 데이터를 생성했습니다.\")\n","\n","# 2. 학습에 사용할 데이터를 생성한다.\n","# -------------------------------\n","# 다음 기간 (N_FUTURE 기간)을 학습/예측하도록 데이터를 구성한다.\n","xc_train = np.array([x[:N_TIME] for x in rtn_train])\n","xf_train = np.array([x[-N_FUTURE:] for x in rtn_train])\n","                     \n","xc_test = np.array([x[:N_TIME] for x in rtn_test])\n","xf_test = np.array([x[-N_FUTURE:] for x in rtn_test])\n","\n","# 4.performace_test.py에서 성과 차트를 그릴 때 x축 인덱스로 사용하기 위해\n","# xf_test[0][0] 위치부터 끝까지 날짜를 기록해 둔다.\n","test_date = rtn_df_test[N_TIME:].index\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y1khF2tqruF4","executionInfo":{"status":"ok","timestamp":1652337312941,"user_tz":-540,"elapsed":5310,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"ac8d217f-2821-4638-c03f-d49d9f3349c7"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["# 수익률 sequence 데이터를 생성했습니다.\n"]}]},{"cell_type":"code","source":["# random seed 값 고정\n","np.random.seed(3)\n","tf.random.set_seed(3)"],"metadata":{"id":"YxmTk4eri2Ul","executionInfo":{"status":"ok","timestamp":1652337270560,"user_tz":-540,"elapsed":6,"user":{"displayName":"우승우","userId":"11434178518191692095"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["# 월간 수익률 정도의 스케일로 변환한다\n","xc_train = xc_train.astype('float32') *100\n","xf_train = xf_train.astype('float32') *100\n","xc_test = xc_test.astype('float32') *100\n","xf_test = xf_test.astype('float32') *100\n","\n","N_TIME = xc_train.shape[1]\n","N_FUTURE = xf_train.shape[1]\n","N_STOCKS = xf_train.shape[2]\n","\n","# 학습 데이터는 shuffling 한다.\n","#xc_train, xf_train = shuffle(xc_train, xf_train)\n","\n","# Markowitz Network를 생성한다.\n","# over confidence를 제어할 조절 변수 정의\n","GAMMA_CONST = 0.05\n","REG_CONST = 0.0\n","SAVE_MODEL = 'data/3-1.MPN_LSTM.h5'\n","\n","# 최적 포트폴리오를 구축할 목표 함수를 정의한다.\n","# Markowitz Network에서는 이 함수를 loss로 이용한다. max(objective) = min(-objective)\n","# y_pred = 마코비츠 네트워크의 출력이 전달된다. (keras 내부 기능)\n","# y_true = model.fit()에서 전달된 N_FUTURE일 후의 수익률 (xf_train)이 들어온다.\n","def markowitz_objective(y_true, y_pred):\n","    W = y_pred      # 마코비츠 네트워크의 출력\n","    xf_rtn = y_true\n","    W = tf.expand_dims(W, axis = 1)   # W = (None, 1, 50)\n","    R = tf.expand_dims(tf.reduce_mean(xf_rtn, axis = 1), axis = 2) # R = (None, 50, 1)\n","    C = tfp.stats.covariance(xf_rtn, sample_axis=1)\n","\n","    rtn = tf.matmul(W, R)  \n","    vol = tf.matmul(W, tf.matmul(C, tf.transpose(W, perm = [0, 2, 1]))) * GAMMA_CONST\n","    reg = tf.reduce_sum(tf.square(W), axis = -1) * REG_CONST\n","    objective = rtn - vol - reg\n","    \n","    return -tf.reduce_sum(objective, axis=0)\n","\n","\n","lstm = LSTM( units = 7,\n","             input_shape=(N_TIME, N_STOCKS),  #(4980, 20, 5)  --> (20,5),    \n","             dropout=0.0,\n","             recurrent_dropout=0.0,\n","             return_sequences=False\n","      )\n","model = Sequential()\n","model.add( lstm )\n","model.add( Dense(N_STOCKS, activation='tanh') )\n","model.add(Activation('softmax'))\n","\n","\n","# 마코비츠의 최적 weights\n","with tf.device(\"/device:GPU:0\"):\n","    #y_output = Activation('softmax')(y_output)\n","\n","\n","    model.compile(loss = markowitz_objective, \n","                optimizer = Adam(learning_rate = 1e-5)\n","                )\n","    stop = EarlyStopping(patience=10, monitor='val_loss')\n","\n","    \n","\n","    \n","\n","\n","\n","    model.summary()\n","\n","    # MPN을 학습하고 결과를 저장한다.\n","    hist = model.fit(xc_train, xf_train, epochs=500, batch_size = 64, \n","                    validation_data = (xc_test, xf_test),\n","                     callbacks=[stop])\n","    #model.save(SAVE_MODEL)\n","\n","# loss trajectory를 확인한다.\n","plt.figure(figsize=(8, 5))\n","plt.plot(hist.history['loss'], label='Train loss')\n","plt.plot(hist.history['val_loss'], label='Test loss')\n","plt.legend()\n","plt.show()\n","\n","plt.figure(figsize=(8, 5))\n","plt.plot(np.negative(hist.history['loss']), label='Train loss')\n","plt.plot(np.negative(hist.history['val_loss']), label='Test loss')\n","plt.legend()\n","plt.show()\n","\n","# 최적 포트폴리오 결과 확인용 코드\n","def check_w(n = 0):\n","    plt.figure(figsize=(8, 4))\n","    y_pred = model.predict(xc_test[n].reshape(1, N_TIME, N_STOCKS))[0]\n","    plt.bar(np.arange(N_STOCKS), y_pred, alpha = 0.7)\n","    plt.show()\n","    \n","check_w(0)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Yqg7w_M3Yr2Q","executionInfo":{"status":"ok","timestamp":1652337328071,"user_tz":-540,"elapsed":13900,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"c7e9edd8-08f3-4f1d-e79b-ad6cbefac82f"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," lstm_1 (LSTM)               (None, 7)                 420       \n","                                                                 \n"," dense_1 (Dense)             (None, 7)                 56        \n","                                                                 \n"," activation_1 (Activation)   (None, 7)                 0         \n","                                                                 \n","=================================================================\n","Total params: 476\n","Trainable params: 476\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/500\n","58/58 [==============================] - 3s 20ms/step - loss: 0.6213 - val_loss: -3.7200\n","Epoch 2/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5956 - val_loss: -3.7178\n","Epoch 3/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.6052 - val_loss: -3.7155\n","Epoch 4/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.6085 - val_loss: -3.7132\n","Epoch 5/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5981 - val_loss: -3.7108\n","Epoch 6/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5942 - val_loss: -3.7085\n","Epoch 7/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5869 - val_loss: -3.7063\n","Epoch 8/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5742 - val_loss: -3.7040\n","Epoch 9/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5757 - val_loss: -3.7017\n","Epoch 10/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5634 - val_loss: -3.6994\n","Epoch 11/500\n","58/58 [==============================] - 1s 10ms/step - loss: 0.5900 - val_loss: -3.6971\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x360 with 1 Axes>"],"image/png":"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+OOP64knntD69eu1c+dObdq0Sddff72eeuopXX311ZKkDRs26JFHHtEvfvELnXPOOVVvE2e+AIAylZ6hTpSWlhaddtppknK/j3zdddepra1Ns2bN0t69e4f0nzZtmjo6OiRJJ554onbu3DnsuNu2bdMXvvAFSVI6ndaZZ56pl156SWvXrtW6deu0cuVKXXzxxWpra9OTTz6pNWvW6IMPPtCKFSuq3ibCFwBwSEskBi7SrlmzRhdeeKEWL16sJ554Ytj+qVR5tLn7sP1OPfVUbd68WWeccYb6+vr0/PPPa/ny5Xrrrbd01VVXKZvN6uSTT9aLL76odDqtG2+8Ua+++qoWL16sLVu2VLVNhC8AoGFcdNFFWrFihdatW6ePfexjVY311a9+VcuXL9dDDz2k3t5eXXrppZozZ45WrlypX//613J3LVq0SP39/ers7NSePXt04MABLVu2rOrtsIMdEdRae3u7d3V1hawLADA+r7zyiubOnVvvMhrWcPvPzF5w9/bh+nPDFQAAwQhfAACCEb4AAAQjfAEACEb4AgAQjPAFACAY4QsAQDDCFwBQdwsXLlRHR4fmzJmj1tZWdXR0qKOjQ7t27RrzGFu3btWmTZuGtHd0dGjHjh21LLdqfMIVAKDuqv2TglIufHfs2KEFCxbUuryaI3wBAOU2XCP1bKvtmNNPlT49/kCVpHvuuUe33nqrUqmUZs+erTvuuEObNm3SV77yFR199NGaPn26vvSlL2n16tXau3evXnzxRW3YsGHIOH19fVq1apVeeeUVZbNZLViwQNddd50effTRsrHuu+8+rV69Wj/+8Y915JFH6vzzz9e1115b7R4oQ/gCAA5Zr732mtasWaPNmzerublZV199te6//35t375dS5Ys0apVq/Tmm2+qtbVV11xzzYhnzbfffrumTJmiJ598Uu6uz33uc3rsscf09NNPl40lST/72c90xx136PTTT9cbb7xR8+0ifAEA5So8Q50IW7duVU9Pjz71qU9Jyv1t3xkzZuj666/X+vXrtXLlSp199tmaNWvWqGNt27ZNCxculCSZmebPn6+tW7cOO9ZDDz2kW2+9VevXr9cll1yitra2mm4X4QsAOGTNmzdPc+fO1YYNG5RIJLRnzx719fXp9ddfV2dnpyRp/vz5mjdvnsxsxLEKf0Lw4osvlrvrmWee0RVXXDHs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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x360 with 1 Axes>"],"image/png":"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dXZ26vHHH9cNN9yg7u5uvffee1qxYoU6Ojp06623aubMmbruuut0wgknqKOjQ9u3b9ehQ4f0+OOPa9asWUPG3b9/v1auXKnu7m719fVp2bJlWr58ue6//35997vf1fTp07VgwQJ973vf0/XXX6/t27erpaVFV199ta655pqa5oP3ZAEA48IHH3ygjo4OvfzyyzrxxBN12223adOmTVq3bp2+853vDOm/f/9+LV26VM8//7w+85nP6Ec/+lHFcW+//Xadf/752rJli5599llt2LBBe/bs0ebNm3XLLbfoF7/4hW688UZJ0saNG/XUU0/pl7/8pS688MKaHxNnsgAwSY32jNNLa2urzjrrLEm5/8978803q62tTXPmzNHBgweH9J8xY4ba29slSSeffLL27NlTcdydO3fqC1/4giQpnU7r3HPP1W9+8xutW7dO69ev16pVq3TZZZepra1Nzz33nNauXasDBw5o5cqVNT8mQhYAMC4kEsWLq2vXrtUll1yiK664Qs8++2zF/qlUeYSFECr2W7BggbZu3apzzjlH/f39euWVV7RixQrt3btXN9xwg6Io0mmnnabXXntN6XRat912m958801dccUV2r59e02PiZAFAIw7l156qVauXKn169frYx/7WE1jffWrX9WKFSv0xBNPqK+vT1dddZXmzZunVatW6de//rVCCFq6dKkGBgbU0dGh999/X4cPH9Z1111X8+OwIyX/aC1cuDB0dnbWdUwAQH288cYbOvPMMxtdRtOqNH9m9moIYWGl/nzwCQAAJ4QsAABOCFkAAJwQsgAAOCFkAQBwQsgCAOCEkAUAwAkhCwAYM0uWLFF7e7vmzZunU045Re3t7Wpvb1dPT0/VY+zYsUObN28e0t7e3q7du3fXs9ya8Y1PAIAxU+ufupNyIbt7924tXry43uXVHSELAJPVxpuk7p31HXPmAunTIw9OSXrwwQd11113KZVKae7cubr33nu1efNmfeUrX9Gxxx6rmTNn6ktf+pLWrFmjgwcP6rXXXtPGjRuHjNPf36/Vq1frjTfeUBRFWrx4sW6++WY9/fTTZWM9/PDDWrNmjR577DEdc8wxuvjii/W1r32t1hkoQ8gCABrurbfe0tq1a7V161ZlMhndeOONeuSRR7Rr1y4tW7ZMq1ev1jvvvKNTTjlFN91001HPgu+55x5NnTpVzz33nEII+tznPqdnnnlG27ZtKxtLkn72s5/p3nvv1dlnn62333677o+LkAWAyWqUZ5weduzYoe7ubn3qU5+SlPvbsrNmzdItt9yiDRs2aNWqVbrgggs0Z86cYcfauXOnlixZIkkyMy1atEg7duyoONYTTzyhu+66Sxs2bNCVV16ptra2uj4uQhYA0HDz58/XmWeeqY0bNyqRSOj9999Xf3+/fv/736ujo0OStGjRIs2fP19mdtSx8n/a7rLLLlMIQS+88IKuvfbaimNlMhl9/etf1wcffKB58+apq6urro+LkAUANNz8+fP12c9+Vp/4xCfU0tKiKVOmaP369frxj3+sJ598UqlUSrNnz9bpp5+uKIr0rW99S7t27dL69ev14Q9/uGys5cuXa/Xq1Wpvb1c2m9XixYt10UUX6Y477hgy1pVXXqk//elP6uvr04oVK+r+uPhTdwAwifCn7mrDn7oDAGCcIGQBAHBCyAIA4ISQBYBJpt6fxZksRjNvhCwATCKZTEb79u0jaEcohKB9+/Ypk8mMaDv+Cw8ATCKzZ89WV1fXiL6QHzmZTEazZ88e0TaELABMIul0WnPnzm10GZMGl4sBAHBCyAIA4ISQBQDACSELAIATQhYAACeELAAATghZAACcELIAADghZAEAcELIAgDgZNiQNbMzzOxFM3toLAoCAGCiqOZM9jxJa70LAQBgohk2ZEMID0jqHoNaAACYUOrynqyZdZhZp5l18ueTAADIqUvIhhDuDiEsDCEsbG1trceQAAA0PT5dDACAE0IWAAAnqWo6hRCel/S8ayUAAEwwnMkCAOCEkAUAwAkhCwCAE0IWAAAnhCwAAE4IWQAAnBCyAAA4IWQBAHBCyAIA4ISQBQDACSELAIATQhYAACeELAAATghZAACcELIAADghZAEAcELIAgDghJAFAMAJIQsAgBNCFgAAJ4QsAABOCFkAAJwQsgAAOCFkAQBwQsgCAOCEkAUAwAkhCwCAE0IWAAAnhCwAAE4IWQAAnBCyAAA4IWQBAHBCyAIA4ISQBQDACSELAIATQhYAACeELAAATghZAACcELIAADghZAEAcELIAgDghJAFAMAJIQsAgBNCFgAAJ4QsAABOCFkAAJwQsgAAOCFkAQBwQsgCAOCkqpA1s+vN7CUze9nMPu9dFAAAE0FquA5mdpqkaySdL6lF0nYz2xRC+It3cQAANLNqzmQvlPSTEEJfCOGvkrZK+rhvWQAANL9qQrZV0rsly+/GbQVm1mFmnWbW2dPTU8/6AABoWtWE7AFJx5csHy+p7FJxCOHuEMLCEMLC1tay/AUAYNKqJmS3SFpqZkkzmyqpXdKvXKsCAGACGPaDTyGE183sp5JelBQkfTuE0O1eGQAATW7YkJWkEMIdku5wrgUAgAmFL6MAAMAJIQsAgBNCFgAAJ4QsAABOCFkAAJwQsgAAOCFkAQBwQsgCAOCEkAUAwAkhCwCAE0IWAAAnhCwAAE4IWQAAnBCyAAA4IWQBAHBCyAIA4ISQBQDACSELAIATQhYAACeELAAATghZAACcELIAADghZAEAcELIAgDghJAFAMAJIQsAgJNUowsAANQmhKBsFDQQ/8tmg/qjqNiWjeKfQQNxe3823iZel2sr2SaK4v75MaPC7fJtgrJRcfxsCJqSTCiTTmpqOqlMOqGpU5LKpJPlbeliW3556pSkMqmkEglr9JTWDSELoLCTjoIUFW4HRVG8HIrL2RAU5dcHFfvG24W4LRtCPK7ibcOQnXn/oADIRlFh598fRXFY5PqU7tD7BwdJtnzM0nFKxy/tXxYi2dyYURQKc2Lxft5UuFH6Y8h6G7LeypaHbl/ddjZogBCGBt1ASd1jKWFSKpFQKmlKJkzpZEIJk/oGIvX2R+rLRqMad0oqoUyqGM5T00m1pJOami6Gd7FtUGhPSRa2rRTk+e0/NG1KnWejskkVsiEEHR6IdLg/Uu9AVof6suodyKq3P1Jvf7bkX8nyQFTod7ik/VBJvxCkZCL3JEskTKmEKWG5n8mSf/m2fJ9CW/Io60rHzK+zoW2l91fWFo9tlnuJFm9b8cUdLycSxXZT/sVtSljuhW8lfc3i25XaFbeX3lZJ/wrtkjQQle+Iy5cjZSMVjsKzJX2OtDwQRYpCfucdj1eynM0f/Wfzt6Oj1hCFIMUhFCRFIfecyjXnfkYh/1OSQrFPhf5RVNyu0Bb3iXJ3JRVu5/sPGqNsTBUeeygEoxTFjzUaFKIhqDAH413+uZ1O5nboqYQplUjEbeXrkomE0nH/qemkki2pQp9UMr8uUbZdbl3utWWW+31I8e9ApcvlK4rrw6B+lbcLg6a6sN0w/Us3M6ms5lSi5DGXzE1uXaIwd4XlpJXNZ3EOc31Lx0yVbhePn47nPb//OZpsFEr2l8X9a345t2+N1BvvYw/1la8v3fZQvL/9vwN95fvgeNv+bPXP4+ktKe38xsVV96/FuA7Zve8d0ut791cIv2JIHh4UkqXhd3ggKvslHR6IhjzJq5U/shp8yaMlnVQikXsyHR7IKhvv1Io756hwtF8aBLmd/aB1TbLDm6gGH+SUHSSZyax4IJKocMCQKDsAyfcp9lehz9CDnURCSlgid7twhlOhf8mBydA2U9KkRP5ALD4YS5gKB20JMyUTKl9XuJ17rBa35W4XxxyyfWn/kjlKxuMWxoznLX8gmEqW78yLYVkSoPk+iWIdaD7JhGlaS0rTWvyjpj8bDTlJOtQ/NLTzJ0ZjZVyH7LY3e/Tvj+2suC6dNGVS8aWBdCJ3Ow6+6ZmUWqe35JbjYJwaX0JoqXDpIL996aWH0ksMLamkkmP0HkH+LGYgigqX5rLxmVa+rWxdyRleYV18ia60LT6xGnpGpPzRcvEMrHB2peKRdv4MrbS9/KyqeDZW1ieU38/gM7F8m6RB4ZZQMqHC0XRp+CWteMSeX86fweTDofTqQDJRHpqpREKJhAo793wosCMHmlc6mVA6mdD0TKMrKTeuQ/ai+TP1kVnHVwjFsQu9sZY/c0gmko0uBQBQo3EdsidOm6ITx+jNaQAA6o3/JwsAgBNCFgAAJ4QsAABOCFkAAJwQsgAAOCFkAQBwQsgCAOCEkAUAwAkhCwCAE0IWAAAnFur85wjMrEfSO3Uc8iRJ79ZxvMmKeawdc1g75rB2zGHt6j2Hc0IIrZVW1D1k683MOkMICxtdR7NjHmvHHNaOOawdc1i7sZxDLhcDAOCEkAUAwEkzhOzdjS5ggmAea8cc1o45rB1zWLsxm8Nx/54sAADNqhnOZAEAaErjOmTN7Hoze8nMXjazzze6nmZjZtPM7E4z225mr5jZ7Y2uqVlZzjNmdl+ja2lGZjbHzLaY2Ytmts3MMo2uqZmY2VQz+6GZvRC/lv+z0TU1EzM7I37uPVTS9s247SUza/e673EbsmZ2mqRrJH1S0kWSbjWzDzW2qqZzgqQfhhA+Kuk8SZeb2cwG19SsVkp6vdFFNCMzS0p6WNL1IYSPS/pkCKG3wWU1m6sk/SWEsEjS+ZIuNrO/bWxJTeU8SWvzC2Z2oaRz4ufj5ZLWmVnK447HbchKulDST0IIfSGEv0raKunjDa6pqYQQ9oYQtsWL0yT1SXqvgSU1JTNrk7RUJS9SjMinJe2R9E0ze0HSigbX04y6JZ0QH7AcIykl6S+NLal5hBAeUG4O8/5B0qPxuj8q9wVKZ3jc93gO2VaVfyPHu3EbRih+YT4g6cucQYyMmZly4fovkviU4OjMk3SmpGWSlki62szOamxJzSWE8LikXkn/I+ktSfeHEN5uaFHNbczyZTyH7AFJx5csHy+O3EbMzNKSHpT0UAjh542upwldJ+npEMLvGl1IE8sqd1XqryGEA5I2Szq7wTU1FTO7Vrl94qmS5kj6ezNb0tiqmtqY5ct4DtktkpaaWdLMpkpql/SrxpbUXMxsiqSHlNvBPdzoeprUuZIuiD8wsU7SJ83sPxpcU7PZJqk9fi2nJC2StLPBNTWbMyT9IYSQja9Gdcvp8uYksUXSP0qSmZ2k3Fzu8bgjlzd66yGE8LqZ/VTSi8pdpvt2CKF7mM1QbrlyBycz4iNhSfq3EMKrjSupuYQQrsnfjj+BeFUIgU92jkAI4RUze0ZSp6TDyl1V2dHgsprNf0n6vpn9k3L77bclfb+hFTW3pyQtMbMXlTvZXO31VhpfRgEAgJPxfLkYAICmRsgCAOCEkAUAwAkhCwCAE0IWAAAnhCwAAE4IWQAAnBCyAAA4IWQBAHDy/xXs8Qzu6/BnAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import os\n","os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n","\n","# Markowitz's Portfolio Network (MPN)을 이용해서 최적 포트폴리오를 구축한다.\n","import numpy as np\n","import pandas as pd\n","import pickle\n","import matplotlib.pyplot as plt\n","from tensorflow.keras.models import load_model\n","\n","\n","N_TIME = xc_test.shape[1]\n","N_FUTURE = xf_test.shape[1]\n","N_STOCKS = xf_test.shape[2]\n","\n","# 저장된 모델을 가져온다.\n","lstm_model = model\n","\n","# MPN을 이용해서 백 테스트를 수행한다.\n","# --------------------------------\n","lstm_value = [10000]   # portfolio의 초기 value\n","crp_value = [10000]   # CRP의 초기 value\n","w_crp = np.ones(N_STOCKS) / N_STOCKS   # CRP 비율 (균등 비율)\n","\n","w_hist_lstm = []\n","for i in range(0, xc_test.shape[0], N_FUTURE):\n","    # LSTM으로 W를 추정한다.\n","    x = xc_test[i][np.newaxis,:, :]\n","    w_lstm = lstm_model.predict(x)[0]\n","    w_hist_lstm.append(w_lstm)\n","    \n","    # 다음 기의 누적 수익률\n","    m_rtn = np.sum(xf_test[i]/100, axis = 0)\n","    \n","    # 누적 수익률과 w_prt (W)로 포트폴리오의 수익률을 계산한다.\n","    lstm_value.append(lstm_value[-1] * np.exp(np.dot(w_lstm, m_rtn)))\n","    crp_value.append(crp_value[-1] * np.exp(np.dot(w_crp, m_rtn)))\n","\n","print('\\nBack test를 완료했습니다.')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_NiqJc5xut8o","executionInfo":{"status":"ok","timestamp":1652337330490,"user_tz":-540,"elapsed":939,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"e9d988f0-c2f2-4662-e72e-042a0300c707"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Back test를 완료했습니다.\n"]}]},{"cell_type":"code","source":["# 평가 시점의 날짜를 발췌한다.\n","idx = np.arange(0, len(test_date), N_FUTURE)\n","\n","# Markowitz 성과와 CRP 성과를 데이터 프레임에 기록해 둔다.\n","perf_df = pd.DataFrame({'crp':crp_value, \n","                        'lstm_markowitz':lstm_value\n","                        }, \n","                       index=test_date[idx])\n","\n","# S&P500 index와 포트폴리오 성과를 비교해 본다.\n","sp500 = pd.DataFrame(df3['코스피'])\n","\n","# 수익률을 계산해서 perf_df와 시작 위치를 맞춘다 (초기 value를 맞춘다).\n","sp500 = sp500[test_date[0]:]\n","sp_trans = lstm_value[0] / sp500['코스피'][0]\n","perf_df['kospi'] = sp500['코스피'] * sp_trans\n","\n","# S&P500 index (시장), CRP, 그리고 MPN의 성과를 비교한다.\n","p = perf_df.plot(figsize=(12, 7), style = '-o', fontsize=12)\n","p.legend(fontsize=12)\n","plt.show()\n","\n","# weights history를 확인한다.\n","w_hist_lstm = np.array(w_hist_lstm)\n","\n","# 종목 이름을 읽어온다.\n","symbol = rtn_df.columns\n","\n","n = 7\n","plt.figure(figsize=(12, 4))\n","for i in range(n):\n","    plt.plot(w_hist_lstm[:, i], label=symbol[i])\n","plt.legend(loc='upper left')\n","plt.title('W history by LSTM')\n","plt.xticks(np.arange(0, 20), list(perf_df.index[1:]), rotation='vertical')\n","plt.show()\n","\n","# 포트폴리오 수익률, 위험, SR을 측정한다.\n","rp_df = perf_df.copy()\n","rp_df['crp_rtn'] = np.log(rp_df['crp']) - np.log(rp_df['crp'].shift(1))\n","rp_df['lstm_rtn'] = np.log(rp_df['lstm_markowitz']) - np.log(rp_df['lstm_markowitz'].shift(1))\n","rp_df['sp500_rtn'] = np.log(rp_df['kospi']) - np.log(rp_df['kospi'].shift(1))\n","rp_df = rp_df.dropna()\n","\n","# 포트폴리오 수익률 (연간)\n","rp = rp_df[['crp_rtn', 'lstm_rtn', 'sp500_rtn']].mean()\n","# 20일 = 약 1개월, 1년 = 12개월\n","rp*=12\n","print('\\n포트폴리오 수익률 (연간):')\n","print(rp)\n","\n","# 포트폴리오 위험 (연간 표준편차)\n","sp = rp_df[['crp_rtn', 'lstm_rtn', 'sp500_rtn']].std()\n","print('\\n포트폴리오 위험 (연간):')\n","print(sp)\n","\n","# Sharp ratio\n","print('\\nSharp Ratio :')\n","print(rp / sp)\n","\n","# 최적 포트폴리오 결과 확인용 코드 (참고용)\n","def check_w(n = 0):\n","    plt.figure(figsize=(14,5))\n","    x = xc_test[n][np.newaxis,:,:] * 20.0\n","    w_lstm = lstm_model.predict(x)[0]\n","    plt.bar(np.arange(N_STOCKS), w_lstm, alpha = 0.7)\n","    plt.xticks(np.arange(7), list(symbol), rotation='vertical')\n","    plt.title('W by LSTM')\n","    plt.show()\n","    \n","check_w(0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"naVGBd18uuh5","executionInfo":{"status":"ok","timestamp":1652337333643,"user_tz":-540,"elapsed":1626,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"90c58cdf-f442-45f6-f82c-f3431e49b4ee"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","포트폴리오 수익률 (연간):\n","crp_rtn      0.165705\n","lstm_rtn     0.169072\n","sp500_rtn    0.279014\n","dtype: float64\n","\n","포트폴리오 위험 (연간):\n","crp_rtn      0.016439\n","lstm_rtn     0.016679\n","sp500_rtn    0.040725\n","dtype: float64\n","\n","Sharp Ratio :\n","crp_rtn      10.080051\n","lstm_rtn     10.136804\n","sp500_rtn     6.851110\n","dtype: float64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1008x360 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# 필요없음 "],"metadata":{"id":"FXO0LNzEl1HJ"}},{"cell_type":"code","source":["for i in range(1,4803):\n","    df3.iloc[i,5]=df3.iloc[i-1,5]*df3.iloc[i,0]+df3.iloc[i-1,5]"],"metadata":{"id":"GXQDtHR63Q6Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(1,4803):\n","    df3.iloc[i,6]=df3.iloc[i-1,6]*df3.iloc[i,1]+df3.iloc[i-1,6]"],"metadata":{"id":"jmo4ju636Z2n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(1,4803):\n","    df3.iloc[i,7]=df3.iloc[i-1,7]*df3.iloc[i,2]+df3.iloc[i-1,7]"],"metadata":{"id":"5ZUbTQbh6aYQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(1,4803):\n","    df3.iloc[i,8]=df3.iloc[i-1,8]*df3.iloc[i,3]+df3.iloc[i-1,8]"],"metadata":{"id":"5-n_vpye7L0t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"086TXv8C4qs4","executionInfo":{"status":"ok","timestamp":1652017264399,"user_tz":-540,"elapsed":333,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"387b3576-6f2c-49c6-fbae-04f0e7f8b3f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4803, 6)"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["df3['코스피누적']=10000"],"metadata":{"id":"kBVbJZJw7JTI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3['중기채']=10000\n","df3['장기채']=10000"],"metadata":{"id":"RKpN2skB6UOX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3['단기채로그']=pd.DataFrame(np.log(df3['단기채']) - np.log(df3['단기채'].shift(1)))\n","df3['중기채로그']=pd.DataFrame(np.log(df3['중기채']) - np.log(df3['중기채'].shift(1)))\n","df3['장기채로그']=pd.DataFrame(np.log(df3['장기채']) - np.log(df3['장기채'].shift(1)))"],"metadata":{"id":"NJDOvwbv4Cpf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uepLV3Wh7jt4","executionInfo":{"status":"ok","timestamp":1652017754768,"user_tz":-540,"elapsed":247,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"38f16732-f9cb-42aa-98b6-b87ed2269391"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['단기채수익률', '중기채수익률', '장기채수익률', '코스피수익률', '코스피', '단기채', '중기채', '장기채',\n","       '코스피누적', '단기채로그', '중기채로그', '장기채로그'],\n","      dtype='object')"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["rtn_df=df3[['단기채로그', '중기채로그', '장기채로그','코스피수익률']]"],"metadata":{"id":"OiXwbh_g7ogF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rtn_df.to_csv('/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/로그수익률데이터.csv')"],"metadata":{"id":"FC5dqHWA7uUI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rtn_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"yLSENcoq7_2h","executionInfo":{"status":"ok","timestamp":1652074205293,"user_tz":-540,"elapsed":506,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"7010397f-2a95-4c57-cca6-fa3e3cb1aa9f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             단기채로그        중기채로그        장기채로그       코스피수익률        ywo로그  \\\n","count  4209.000000  4209.000000  4209.000000  4209.000000  4209.000000   \n","mean      0.000111     0.000149     0.000162     0.000160     0.000218   \n","std       0.000130     0.001050     0.001706     0.012108     0.018272   \n","min      -0.000475    -0.007265    -0.011585    -0.111720    -0.134423   \n","25%       0.000041    -0.000251    -0.000567    -0.004693    -0.008511   \n","50%       0.000079     0.000125     0.000122     0.000117     0.000096   \n","75%       0.000148     0.000579     0.000917     0.006025     0.009136   \n","max       0.002673     0.012362     0.018176     0.112844     0.122338   \n","\n","             iau로그        dbc로그        vnq로그        nsd로그  \n","count  4209.000000  4209.000000  4209.000000  4209.000000  \n","mean      0.000340     0.000128     0.000338     0.000411  \n","std       0.013966     0.014252     0.020442     0.023106  \n","min      -0.142702    -0.143306    -0.233916    -0.154454  \n","25%      -0.006501    -0.007309    -0.007525    -0.009325  \n","50%       0.000231     0.000000     0.000000     0.000000  \n","75%       0.007477     0.007897     0.008398     0.010626  \n","max       0.078143     0.096966     0.171690     0.191866  "],"text/html":["\n","  <div id=\"df-4127009b-88d2-493c-baa7-8bcfaf3e686c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>장기채로그</th>\n","      <th>코스피수익률</th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","      <td>4209.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.000111</td>\n","      <td>0.000149</td>\n","      <td>0.000162</td>\n","      <td>0.000160</td>\n","      <td>0.000218</td>\n","      <td>0.000340</td>\n","      <td>0.000128</td>\n","      <td>0.000338</td>\n","      <td>0.000411</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.000130</td>\n","      <td>0.001050</td>\n","      <td>0.001706</td>\n","      <td>0.012108</td>\n","      <td>0.018272</td>\n","      <td>0.013966</td>\n","      <td>0.014252</td>\n","      <td>0.020442</td>\n","      <td>0.023106</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-0.000475</td>\n","      <td>-0.007265</td>\n","      <td>-0.011585</td>\n","      <td>-0.111720</td>\n","      <td>-0.134423</td>\n","      <td>-0.142702</td>\n","      <td>-0.143306</td>\n","      <td>-0.233916</td>\n","      <td>-0.154454</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000041</td>\n","      <td>-0.000251</td>\n","      <td>-0.000567</td>\n","      <td>-0.004693</td>\n","      <td>-0.008511</td>\n","      <td>-0.006501</td>\n","      <td>-0.007309</td>\n","      <td>-0.007525</td>\n","      <td>-0.009325</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000079</td>\n","      <td>0.000125</td>\n","      <td>0.000122</td>\n","      <td>0.000117</td>\n","      <td>0.000096</td>\n","      <td>0.000231</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000148</td>\n","      <td>0.000579</td>\n","      <td>0.000917</td>\n","      <td>0.006025</td>\n","      <td>0.009136</td>\n","      <td>0.007477</td>\n","      <td>0.007897</td>\n","      <td>0.008398</td>\n","      <td>0.010626</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>0.002673</td>\n","      <td>0.012362</td>\n","      <td>0.018176</td>\n","      <td>0.112844</td>\n","      <td>0.122338</td>\n","      <td>0.078143</td>\n","      <td>0.096966</td>\n","      <td>0.171690</td>\n","      <td>0.191866</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4127009b-88d2-493c-baa7-8bcfaf3e686c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4127009b-88d2-493c-baa7-8bcfaf3e686c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4127009b-88d2-493c-baa7-8bcfaf3e686c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["rtn_df=rtn_df.drop('장기채로그',axis=1)"],"metadata":{"id":"RzIltU0o8E3x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3['단기채']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"quqffLkC4YaA","executionInfo":{"status":"ok","timestamp":1652016915943,"user_tz":-540,"elapsed":251,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"2bbf2239-2f34-4bfe-8ee1-043127b5c69f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      NaN\n","1      NaN\n","2      NaN\n","3      NaN\n","4      NaN\n","        ..\n","4798   NaN\n","4799   NaN\n","4800   NaN\n","4801   NaN\n","4802   NaN\n","Name: 단기채, Length: 4803, dtype: float64"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["rtn_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"RQK2cMDO29hx","executionInfo":{"status":"ok","timestamp":1652017891969,"user_tz":-540,"elapsed":271,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"a87d54a2-c57e-494b-a272-fb333d3afba2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               단기채로그     중기채로그     장기채로그    코스피수익률\n","거래일                                               \n","2003-01-03  0.000131 -0.000606 -0.000262  0.040012\n","2003-01-06  0.000540  0.000694  0.000645  0.008450\n","2003-01-07  0.000259  0.001336  0.001335 -0.022004\n","2003-01-08  0.000211  0.001148  0.001523 -0.000736\n","2003-01-09  0.000253  0.000896  0.000667 -0.033260\n","...              ...       ...       ...       ...\n","2022-04-28  0.000076 -0.000947 -0.000710  0.010715\n","2022-04-29  0.000057 -0.000908 -0.001725  0.010279\n","2022-05-02  0.000143 -0.003332 -0.005720 -0.002824\n","2022-05-03  0.000032 -0.000973 -0.000892 -0.002604\n","2022-05-04  0.000084 -0.000864 -0.001120 -0.001079\n","\n","[4802 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-0511d9ec-ba60-4c45-b8a0-b895fcdd08d0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>장기채로그</th>\n","      <th>코스피수익률</th>\n","    </tr>\n","    <tr>\n","      <th>거래일</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2003-01-03</th>\n","      <td>0.000131</td>\n","      <td>-0.000606</td>\n","      <td>-0.000262</td>\n","      <td>0.040012</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-06</th>\n","      <td>0.000540</td>\n","      <td>0.000694</td>\n","      <td>0.000645</td>\n","      <td>0.008450</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-07</th>\n","      <td>0.000259</td>\n","      <td>0.001336</td>\n","      <td>0.001335</td>\n","      <td>-0.022004</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-08</th>\n","      <td>0.000211</td>\n","      <td>0.001148</td>\n","      <td>0.001523</td>\n","      <td>-0.000736</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-09</th>\n","      <td>0.000253</td>\n","      <td>0.000896</td>\n","      <td>0.000667</td>\n","      <td>-0.033260</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-28</th>\n","      <td>0.000076</td>\n","      <td>-0.000947</td>\n","      <td>-0.000710</td>\n","      <td>0.010715</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-29</th>\n","      <td>0.000057</td>\n","      <td>-0.000908</td>\n","      <td>-0.001725</td>\n","      <td>0.010279</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-02</th>\n","      <td>0.000143</td>\n","      <td>-0.003332</td>\n","      <td>-0.005720</td>\n","      <td>-0.002824</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-03</th>\n","      <td>0.000032</td>\n","      <td>-0.000973</td>\n","      <td>-0.000892</td>\n","      <td>-0.002604</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-04</th>\n","      <td>0.000084</td>\n","      <td>-0.000864</td>\n","      <td>-0.001120</td>\n","      <td>-0.001079</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4802 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0511d9ec-ba60-4c45-b8a0-b895fcdd08d0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0511d9ec-ba60-4c45-b8a0-b895fcdd08d0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0511d9ec-ba60-4c45-b8a0-b895fcdd08d0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["(2745.06-2224.44)/2224.44"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MAygtO593Fig","executionInfo":{"status":"ok","timestamp":1652016580614,"user_tz":-540,"elapsed":233,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"35d04ae0-372a-4877-aaaf-84675534acc5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.2340454226681771"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["perf_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"xlfjb2222oZY","executionInfo":{"status":"ok","timestamp":1652016451249,"user_tz":-540,"elapsed":243,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"3086b739-21c3-48bb-a312-d7d7ce04155c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      crp  lstm_markowitz         kospi\n","거래일                                                    \n","2019-04-11   10000.000000    10000.000000  10000.000000\n","2019-09-04    7048.168492     5669.305921   8939.463416\n","2020-02-03   10936.279594     9716.012294   9525.453597\n","2020-06-26   13403.736137    12317.004581   9596.347845\n","2020-11-20   36954.894506    40080.378015  11479.293665\n","2021-04-16  116903.689628   188781.334079  14379.439320\n","2021-09-08  116944.959900   188574.754125  14219.264174\n","2022-02-07   47168.453014    72944.765218  12340.454227"],"text/html":["\n","  <div id=\"df-edc74d1d-9b22-46db-8fd7-fc9a294b1094\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crp</th>\n","      <th>lstm_markowitz</th>\n","      <th>kospi</th>\n","    </tr>\n","    <tr>\n","      <th>거래일</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-04-11</th>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-04</th>\n","      <td>7048.168492</td>\n","      <td>5669.305921</td>\n","      <td>8939.463416</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-03</th>\n","      <td>10936.279594</td>\n","      <td>9716.012294</td>\n","      <td>9525.453597</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-26</th>\n","      <td>13403.736137</td>\n","      <td>12317.004581</td>\n","      <td>9596.347845</td>\n","    </tr>\n","    <tr>\n","      <th>2020-11-20</th>\n","      <td>36954.894506</td>\n","      <td>40080.378015</td>\n","      <td>11479.293665</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-16</th>\n","      <td>116903.689628</td>\n","      <td>188781.334079</td>\n","      <td>14379.439320</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-08</th>\n","      <td>116944.959900</td>\n","      <td>188574.754125</td>\n","      <td>14219.264174</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-07</th>\n","      <td>47168.453014</td>\n","      <td>72944.765218</td>\n","      <td>12340.454227</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-edc74d1d-9b22-46db-8fd7-fc9a294b1094')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-edc74d1d-9b22-46db-8fd7-fc9a294b1094 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-edc74d1d-9b22-46db-8fd7-fc9a294b1094');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["pip install yfinance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":690},"id":"ckKqgvzS4Gs5","executionInfo":{"status":"ok","timestamp":1652236201792,"user_tz":-540,"elapsed":5455,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"6c59ef2d-5726-466b-841c-cc269f6d0e38"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting yfinance\n","  Downloading yfinance-0.1.70-py2.py3-none-any.whl (26 kB)\n","Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.21.6)\n","Collecting lxml>=4.5.1\n","  Downloading lxml-4.8.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.4 MB)\n","\u001b[K     |████████████████████████████████| 6.4 MB 6.0 MB/s \n","\u001b[?25hRequirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from yfinance) (0.0.10)\n","Collecting requests>=2.26\n","  Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n","\u001b[K     |████████████████████████████████| 63 kB 2.1 MB/s \n","\u001b[?25hRequirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.3.5)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->yfinance) (2022.1)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->yfinance) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.24.0->yfinance) (1.15.0)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2.0.12)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2021.10.8)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2.10)\n","Installing collected packages: requests, lxml, yfinance\n","  Attempting uninstall: requests\n","    Found existing installation: requests 2.23.0\n","    Uninstalling requests-2.23.0:\n","      Successfully uninstalled requests-2.23.0\n","  Attempting uninstall: lxml\n","    Found existing installation: lxml 4.2.6\n","    Uninstalling lxml-4.2.6:\n","      Successfully uninstalled lxml-4.2.6\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.27.1 which is incompatible.\n","datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\u001b[0m\n","Successfully installed lxml-4.8.0 requests-2.27.1 yfinance-0.1.70\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["lxml","requests"]}}},"metadata":{}}]},{"cell_type":"code","source":["import yfinance as yf"],"metadata":{"id":"X9JL1kclzEQs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ywo = yf.download('VWO', start='2002-01-01')\n","iau = yf.download('IAU', start='2002-01-01')\n","dbc = yf.download('DBC', start='2002-01-01')\n","vnq = yf.download('VNQ', start='2002-01-01')\n","nsd = yf.download('NDAQ', start='2002-01-01')\n","usdkr= yf.download('USDKRW=X', start='2002-01-01')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GfeXvzIFzUFB","executionInfo":{"status":"ok","timestamp":1652236215436,"user_tz":-540,"elapsed":4213,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"51ac91dc-0b7c-41aa-a048-bc4a57271aee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n"]}]},{"cell_type":"code","source":["ywo.columns=['Open', 'High', 'Low', 'Close', 'ywo종가', 'Volume']\n","iau.columns=['Open', 'High', 'Low', 'Close', 'iau종가', 'Volume']\n","dbc.columns=['Open', 'High', 'Low', 'Close', 'dbc종가', 'Volume']\n","vnq.columns=['Open', 'High', 'Low', 'Close', 'vnq종가', 'Volume']\n","nsd.columns=['Open', 'High', 'Low', 'Close', 'nsd종가', 'Volume']"],"metadata":{"id":"EzsuzmKR2Mnq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ywo=ywo.reset_index()\n","iau=iau.reset_index()\n","dbc=dbc.reset_index()\n","vnq=vnq.reset_index()\n","nsd=nsd.reset_index()"],"metadata":{"id":"fMztg4ER2tv6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=pd.merge(vnq,ywo,on='Date',how='outer')\n","df=pd.merge(df,dbc,on='Date',how='outer')\n","df=pd.merge(df,iau,on='Date',how='outer')\n","df=pd.merge(df,nsd,on='Date',how='outer')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":732},"id":"C8HcPc_z202w","executionInfo":{"status":"ok","timestamp":1652236236504,"user_tz":-540,"elapsed":578,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"5cb61b4a-ce1b-4461-d60a-17e72183c667"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Low_x', 'High_x', 'Close_x', 'Open_x', 'Volume_x'} in the result is deprecated and will raise a MergeError in a future version.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"output_type":"execute_result","data":{"text/plain":["           Date     Open_x     High_x      Low_x    Close_x      vnq종가  \\\n","0    2004-09-29  49.849998  49.990002  49.840000  49.849998  23.135706   \n","1    2004-09-30  50.000000  50.330002  49.990002  50.250000  23.321354   \n","2    2004-10-01  50.349998  51.250000  50.250000  51.180000  23.752954   \n","3    2004-10-04  51.389999  51.549999  51.389999  51.400002  23.855076   \n","4    2004-10-05  51.400002  51.500000  51.349998  51.389999  23.850426   \n","...         ...        ...        ...        ...        ...        ...   \n","4996 2004-09-22        NaN        NaN        NaN        NaN        NaN   \n","4997 2004-09-23        NaN        NaN        NaN        NaN        NaN   \n","4998 2004-09-24        NaN        NaN        NaN        NaN        NaN   \n","4999 2004-09-27        NaN        NaN        NaN        NaN        NaN   \n","5000 2004-09-28        NaN        NaN        NaN        NaN        NaN   \n","\n","      Volume_x  Open_y  High_y  Low_y  ...  Low_y  Close_y  iau종가  Volume_y  \\\n","0     205800.0     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","1      27900.0     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","2     129800.0     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","3       8100.0     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","4      11900.0     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","...        ...     ...     ...    ...  ...    ...      ...    ...       ...   \n","4996       NaN     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","4997       NaN     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","4998       NaN     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","4999       NaN     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","5000       NaN     NaN     NaN    NaN  ...    NaN      NaN    NaN       NaN   \n","\n","      Open  High   Low  Close     nsd종가  Volume  \n","0     6.07  6.75  6.07   6.75  5.717226   21100  \n","1     6.70  7.00  6.70   6.90  5.844275    9900  \n","2     7.00  7.50  7.00   7.40  6.267774    8200  \n","3     7.30  7.95  7.20   7.85  6.648922   32800  \n","4     7.95  7.95  7.55   7.60  6.437173   39200  \n","...    ...   ...   ...    ...       ...     ...  \n","4996  5.60  5.60  5.57   5.58  4.726241   22600  \n","4997  5.65  5.70  5.65   5.65  4.785531   27500  \n","4998  5.80  5.90  5.80   5.90  4.997279    2700  \n","4999  5.90  6.18  5.90   6.05  5.124330   22800  \n","5000  6.05  6.05  6.05   6.05  5.124330     300  \n","\n","[5001 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-391934b9-b23f-4731-a065-14f5738f51fa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open_x</th>\n","      <th>High_x</th>\n","      <th>Low_x</th>\n","      <th>Close_x</th>\n","      <th>vnq종가</th>\n","      <th>Volume_x</th>\n","      <th>Open_y</th>\n","      <th>High_y</th>\n","      <th>Low_y</th>\n","      <th>...</th>\n","      <th>Low_y</th>\n","      <th>Close_y</th>\n","      <th>iau종가</th>\n","      <th>Volume_y</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>nsd종가</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2004-09-29</td>\n","      <td>49.849998</td>\n","      <td>49.990002</td>\n","      <td>49.840000</td>\n","      <td>49.849998</td>\n","      <td>23.135706</td>\n","      <td>205800.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.07</td>\n","      <td>6.75</td>\n","      <td>6.07</td>\n","      <td>6.75</td>\n","      <td>5.717226</td>\n","      <td>21100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2004-09-30</td>\n","      <td>50.000000</td>\n","      <td>50.330002</td>\n","      <td>49.990002</td>\n","      <td>50.250000</td>\n","      <td>23.321354</td>\n","      <td>27900.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.70</td>\n","      <td>7.00</td>\n","      <td>6.70</td>\n","      <td>6.90</td>\n","      <td>5.844275</td>\n","      <td>9900</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2004-10-01</td>\n","      <td>50.349998</td>\n","      <td>51.250000</td>\n","      <td>50.250000</td>\n","      <td>51.180000</td>\n","      <td>23.752954</td>\n","      <td>129800.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.00</td>\n","      <td>7.50</td>\n","      <td>7.00</td>\n","      <td>7.40</td>\n","      <td>6.267774</td>\n","      <td>8200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2004-10-04</td>\n","      <td>51.389999</td>\n","      <td>51.549999</td>\n","      <td>51.389999</td>\n","      <td>51.400002</td>\n","      <td>23.855076</td>\n","      <td>8100.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.30</td>\n","      <td>7.95</td>\n","      <td>7.20</td>\n","      <td>7.85</td>\n","      <td>6.648922</td>\n","      <td>32800</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2004-10-05</td>\n","      <td>51.400002</td>\n","      <td>51.500000</td>\n","      <td>51.349998</td>\n","      <td>51.389999</td>\n","      <td>23.850426</td>\n","      <td>11900.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.95</td>\n","      <td>7.95</td>\n","      <td>7.55</td>\n","      <td>7.60</td>\n","      <td>6.437173</td>\n","      <td>39200</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>2004-09-22</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.60</td>\n","      <td>5.60</td>\n","      <td>5.57</td>\n","      <td>5.58</td>\n","      <td>4.726241</td>\n","      <td>22600</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>2004-09-23</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.65</td>\n","      <td>5.70</td>\n","      <td>5.65</td>\n","      <td>5.65</td>\n","      <td>4.785531</td>\n","      <td>27500</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>2004-09-24</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.80</td>\n","      <td>5.90</td>\n","      <td>5.80</td>\n","      <td>5.90</td>\n","      <td>4.997279</td>\n","      <td>2700</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>2004-09-27</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.90</td>\n","      <td>6.18</td>\n","      <td>5.90</td>\n","      <td>6.05</td>\n","      <td>5.124330</td>\n","      <td>22800</td>\n","    </tr>\n","    <tr>\n","      <th>5000</th>\n","      <td>2004-09-28</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.05</td>\n","      <td>6.05</td>\n","      <td>6.05</td>\n","      <td>6.05</td>\n","      <td>5.124330</td>\n","      <td>300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5001 rows × 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-391934b9-b23f-4731-a065-14f5738f51fa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-391934b9-b23f-4731-a065-14f5738f51fa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-391934b9-b23f-4731-a065-14f5738f51fa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["df2=df[['Date','ywo종가','iau종가','dbc종가','vnq종가','nsd종가']]\n","df2=df2.dropna()\n","df2=df2.set_index('Date')\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"adNSsu-A4oQI","executionInfo":{"status":"ok","timestamp":1652236247892,"user_tz":-540,"elapsed":6,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"d05c8926-8d7b-4981-e321-ed10015f5bbe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                ywo종가      iau종가      dbc종가       vnq종가       nsd종가\n","Date                                                               \n","2006-02-06  22.309414  11.370000  22.048340   32.068119   35.938065\n","2006-02-07  21.854599  10.932000  21.410580   31.815920   34.565918\n","2006-02-08  21.877840  10.982000  21.319469   31.674707   34.667557\n","2006-02-09  21.884478  11.250000  21.519909   31.826023   34.108543\n","2006-02-10  21.914358  10.976000  21.128141   31.856283   34.057735\n","...               ...        ...        ...         ...         ...\n","2022-05-04  44.110001  35.820000  28.420000  103.870003  160.100006\n","2022-05-05  42.509998  35.669998  28.270000  101.099998  154.899994\n","2022-05-06  41.930000  35.740002  28.299999   99.900002  152.289993\n","2022-05-09  40.799999  35.209999  27.020000   95.500000  146.179993\n","2022-05-10  40.970001  34.910000  26.860001   93.760002  145.779999\n","\n","[4094 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-ec23479c-e490-4ccb-9264-665251a98c70\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ywo종가</th>\n","      <th>iau종가</th>\n","      <th>dbc종가</th>\n","      <th>vnq종가</th>\n","      <th>nsd종가</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2006-02-06</th>\n","      <td>22.309414</td>\n","      <td>11.370000</td>\n","      <td>22.048340</td>\n","      <td>32.068119</td>\n","      <td>35.938065</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-07</th>\n","      <td>21.854599</td>\n","      <td>10.932000</td>\n","      <td>21.410580</td>\n","      <td>31.815920</td>\n","      <td>34.565918</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-08</th>\n","      <td>21.877840</td>\n","      <td>10.982000</td>\n","      <td>21.319469</td>\n","      <td>31.674707</td>\n","      <td>34.667557</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-09</th>\n","      <td>21.884478</td>\n","      <td>11.250000</td>\n","      <td>21.519909</td>\n","      <td>31.826023</td>\n","      <td>34.108543</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-10</th>\n","      <td>21.914358</td>\n","      <td>10.976000</td>\n","      <td>21.128141</td>\n","      <td>31.856283</td>\n","      <td>34.057735</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-04</th>\n","      <td>44.110001</td>\n","      <td>35.820000</td>\n","      <td>28.420000</td>\n","      <td>103.870003</td>\n","      <td>160.100006</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-05</th>\n","      <td>42.509998</td>\n","      <td>35.669998</td>\n","      <td>28.270000</td>\n","      <td>101.099998</td>\n","      <td>154.899994</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-06</th>\n","      <td>41.930000</td>\n","      <td>35.740002</td>\n","      <td>28.299999</td>\n","      <td>99.900002</td>\n","      <td>152.289993</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-09</th>\n","      <td>40.799999</td>\n","      <td>35.209999</td>\n","      <td>27.020000</td>\n","      <td>95.500000</td>\n","      <td>146.179993</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-10</th>\n","      <td>40.970001</td>\n","      <td>34.910000</td>\n","      <td>26.860001</td>\n","      <td>93.760002</td>\n","      <td>145.779999</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4094 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec23479c-e490-4ccb-9264-665251a98c70')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ec23479c-e490-4ccb-9264-665251a98c70 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ec23479c-e490-4ccb-9264-665251a98c70');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["df2['iau종가'].plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"HUA0n3tZ7Exc","executionInfo":{"status":"ok","timestamp":1652069041163,"user_tz":-540,"elapsed":489,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"4659445c-3eaa-4abb-f5a7-5de84d939463"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f2c384f2c10>"]},"metadata":{},"execution_count":57},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df2['iau종가'].loc['2021-05-05']=34.04"],"metadata":{"id":"UDn44o82_D8w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4x6clsah_S1-","executionInfo":{"status":"ok","timestamp":1652069117560,"user_tz":-540,"elapsed":442,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"f1317280-4e16-470b-8c98-625f2fe04e54"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['ywo종가', 'iau종가', 'dbc종가', 'vnq종가', 'nsd종가', 'usdkr종가'], dtype='object')"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"5UDjSPJe6F3A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2['ywo로그']=pd.DataFrame(np.log(df2['ywo종가']) - np.log(df2['ywo종가'].shift(1)))\n","df2['iau로그']=pd.DataFrame(np.log(df2['iau종가']) - np.log(df2['iau종가'].shift(1)))\n","df2['dbc로그']=pd.DataFrame(np.log(df2['dbc종가']) - np.log(df2['dbc종가'].shift(1)))\n","df2['vnq로그']=pd.DataFrame(np.log(df2['vnq종가']) - np.log(df2['vnq종가'].shift(1)))\n","df2['nsd로그']=pd.DataFrame(np.log(df2['nsd종가']) - np.log(df2['nsd종가'].shift(1)))"],"metadata":{"id":"WCq02lh02Iq7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2=df2.dropna()"],"metadata":{"id":"aFTaQlbv9QBh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2=df2[['ywo로그', 'iau로그', 'dbc로그',\n","       'vnq로그', 'nsd로그']]"],"metadata":{"id":"qzn7x5cO9aob"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"TWeiwQmH9wND","executionInfo":{"status":"ok","timestamp":1652236423881,"user_tz":-540,"elapsed":520,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"b7716456-6bcd-4252-c9b6-eafb7d8a5a1a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               ywo로그     iau로그     dbc로그     vnq로그     nsd로그\n","Date                                                        \n","2006-02-07 -0.020597 -0.039284 -0.029352 -0.007896 -0.038929\n","2006-02-08  0.001063  0.004563 -0.004264 -0.004448  0.002936\n","2006-02-09  0.000303  0.024111  0.009358  0.004766 -0.016256\n","2006-02-10  0.001364 -0.024657 -0.018373  0.000950 -0.001491\n","2006-02-13 -0.022521 -0.021550 -0.015646  0.001424 -0.020350\n","...              ...       ...       ...       ...       ...\n","2022-05-04  0.009796  0.009819  0.030728  0.011425  0.014217\n","2022-05-05 -0.036947 -0.004196 -0.005292 -0.027030 -0.033019\n","2022-05-06 -0.013738  0.001961  0.001061 -0.011940 -0.016993\n","2022-05-09 -0.027320 -0.014940 -0.046284 -0.045043 -0.040948\n","2022-05-10  0.004158 -0.008557 -0.005939 -0.018388 -0.002740\n","\n","[4093 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-8a26de6d-68aa-4c31-b4de-e21fc33cd02b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2006-02-07</th>\n","      <td>-0.020597</td>\n","      <td>-0.039284</td>\n","      <td>-0.029352</td>\n","      <td>-0.007896</td>\n","      <td>-0.038929</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-08</th>\n","      <td>0.001063</td>\n","      <td>0.004563</td>\n","      <td>-0.004264</td>\n","      <td>-0.004448</td>\n","      <td>0.002936</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-09</th>\n","      <td>0.000303</td>\n","      <td>0.024111</td>\n","      <td>0.009358</td>\n","      <td>0.004766</td>\n","      <td>-0.016256</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-10</th>\n","      <td>0.001364</td>\n","      <td>-0.024657</td>\n","      <td>-0.018373</td>\n","      <td>0.000950</td>\n","      <td>-0.001491</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-13</th>\n","      <td>-0.022521</td>\n","      <td>-0.021550</td>\n","      <td>-0.015646</td>\n","      <td>0.001424</td>\n","      <td>-0.020350</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-04</th>\n","      <td>0.009796</td>\n","      <td>0.009819</td>\n","      <td>0.030728</td>\n","      <td>0.011425</td>\n","      <td>0.014217</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-05</th>\n","      <td>-0.036947</td>\n","      <td>-0.004196</td>\n","      <td>-0.005292</td>\n","      <td>-0.027030</td>\n","      <td>-0.033019</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-06</th>\n","      <td>-0.013738</td>\n","      <td>0.001961</td>\n","      <td>0.001061</td>\n","      <td>-0.011940</td>\n","      <td>-0.016993</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-09</th>\n","      <td>-0.027320</td>\n","      <td>-0.014940</td>\n","      <td>-0.046284</td>\n","      <td>-0.045043</td>\n","      <td>-0.040948</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-10</th>\n","      <td>0.004158</td>\n","      <td>-0.008557</td>\n","      <td>-0.005939</td>\n","      <td>-0.018388</td>\n","      <td>-0.002740</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4093 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a26de6d-68aa-4c31-b4de-e21fc33cd02b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8a26de6d-68aa-4c31-b4de-e21fc33cd02b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8a26de6d-68aa-4c31-b4de-e21fc33cd02b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["df2.to_csv('/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/모든로그수익률.xlsx')"],"metadata":{"id":"ZpGILPMdrB8O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rtn_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"mp5sJBxr-KSI","executionInfo":{"status":"ok","timestamp":1652236531520,"user_tz":-540,"elapsed":543,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"7e3ef58b-0b1a-4dec-afb2-5346ee00b260"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               단기채로그     중기채로그    코스피수익률     iau로그     dbc로그     vnq로그  \\\n","거래일                                                                      \n","2006-02-07  0.000085 -0.000366 -0.007001 -0.036524 -0.026592 -0.005135   \n","2006-02-08  0.000132  0.000654 -0.016109  0.007765 -0.001063 -0.001247   \n","2006-02-09  0.000194  0.002796  0.008106  0.026396  0.011643  0.007050   \n","2006-02-10  0.000145  0.000141  0.010215 -0.022076 -0.015791  0.003533   \n","2006-02-13  0.000438  0.000094 -0.010874 -0.019701 -0.013797  0.003273   \n","...              ...       ...       ...       ...       ...       ...   \n","2021-08-25 -0.000062  0.000378  0.002708 -0.010276  0.005384 -0.004213   \n","2021-08-26  0.000008  0.000898 -0.005826  0.001052 -0.008001  0.000257   \n","2021-08-27  0.000047 -0.000193  0.001715  0.019972  0.018296  0.016145   \n","2021-08-30  0.000131  0.000472  0.003278 -0.012070 -0.003799  0.002512   \n","2021-08-31  0.000078  0.000125  0.017366  0.005622 -0.001089  0.008301   \n","\n","               nsd로그  \n","거래일                   \n","2006-02-07 -0.036168  \n","2006-02-08  0.006138  \n","2006-02-09 -0.013972  \n","2006-02-10  0.001090  \n","2006-02-13 -0.018501  \n","...              ...  \n","2021-08-25  0.000474  \n","2021-08-26 -0.002524  \n","2021-08-27  0.017728  \n","2021-08-30 -0.004238  \n","2021-08-31  0.012211  \n","\n","[1955 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-c94ed285-b47b-4541-b29d-057d653ea352\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>코스피수익률</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","    <tr>\n","      <th>거래일</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2006-02-07</th>\n","      <td>0.000085</td>\n","      <td>-0.000366</td>\n","      <td>-0.007001</td>\n","      <td>-0.036524</td>\n","      <td>-0.026592</td>\n","      <td>-0.005135</td>\n","      <td>-0.036168</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-08</th>\n","      <td>0.000132</td>\n","      <td>0.000654</td>\n","      <td>-0.016109</td>\n","      <td>0.007765</td>\n","      <td>-0.001063</td>\n","      <td>-0.001247</td>\n","      <td>0.006138</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-09</th>\n","      <td>0.000194</td>\n","      <td>0.002796</td>\n","      <td>0.008106</td>\n","      <td>0.026396</td>\n","      <td>0.011643</td>\n","      <td>0.007050</td>\n","      <td>-0.013972</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-10</th>\n","      <td>0.000145</td>\n","      <td>0.000141</td>\n","      <td>0.010215</td>\n","      <td>-0.022076</td>\n","      <td>-0.015791</td>\n","      <td>0.003533</td>\n","      <td>0.001090</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-13</th>\n","      <td>0.000438</td>\n","      <td>0.000094</td>\n","      <td>-0.010874</td>\n","      <td>-0.019701</td>\n","      <td>-0.013797</td>\n","      <td>0.003273</td>\n","      <td>-0.018501</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-25</th>\n","      <td>-0.000062</td>\n","      <td>0.000378</td>\n","      <td>0.002708</td>\n","      <td>-0.010276</td>\n","      <td>0.005384</td>\n","      <td>-0.004213</td>\n","      <td>0.000474</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-26</th>\n","      <td>0.000008</td>\n","      <td>0.000898</td>\n","      <td>-0.005826</td>\n","      <td>0.001052</td>\n","      <td>-0.008001</td>\n","      <td>0.000257</td>\n","      <td>-0.002524</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-27</th>\n","      <td>0.000047</td>\n","      <td>-0.000193</td>\n","      <td>0.001715</td>\n","      <td>0.019972</td>\n","      <td>0.018296</td>\n","      <td>0.016145</td>\n","      <td>0.017728</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-30</th>\n","      <td>0.000131</td>\n","      <td>0.000472</td>\n","      <td>0.003278</td>\n","      <td>-0.012070</td>\n","      <td>-0.003799</td>\n","      <td>0.002512</td>\n","      <td>-0.004238</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-31</th>\n","      <td>0.000078</td>\n","      <td>0.000125</td>\n","      <td>0.017366</td>\n","      <td>0.005622</td>\n","      <td>-0.001089</td>\n","      <td>0.008301</td>\n","      <td>0.012211</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1955 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c94ed285-b47b-4541-b29d-057d653ea352')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c94ed285-b47b-4541-b29d-057d653ea352 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c94ed285-b47b-4541-b29d-057d653ea352');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["rtn_df.to_excel('/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/모든로그수익률.xlsx')"],"metadata":{"id":"G2T6Cg-tzlQF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rtn_df=rtn_df.reset_index()"],"metadata":{"id":"xOmlFHPCAyk-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-EKWrcdHA6cA","executionInfo":{"status":"ok","timestamp":1652069480645,"user_tz":-540,"elapsed":459,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"c73f8b52-cd59-4086-deb8-19c34ef68506"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['ywo종가', 'iau종가', 'dbc종가', 'vnq종가', 'nsd종가', 'usdkr종가', 'ywo로그',\n","       'iau로그', 'dbc로그', 'vnq로그', 'nsd로그'],\n","      dtype='object')"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["df3=df2[['ywo로그','iau로그', 'dbc로그', 'vnq로그', 'nsd로그']]\n","df3=df3.reset_index()\n","df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"aPj9tiRB113m","executionInfo":{"status":"ok","timestamp":1652069516198,"user_tz":-540,"elapsed":471,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"72fd5450-c195-47af-cf2a-03ac0085f96f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date     ywo로그     iau로그     dbc로그     vnq로그     nsd로그\n","0    2006-02-06       NaN       NaN       NaN       NaN       NaN\n","1    2006-02-07 -0.017837 -0.036524 -0.026592 -0.005135 -0.036168\n","2    2006-02-08  0.004264  0.007765 -0.001063 -0.001247  0.006138\n","3    2006-02-09  0.002589  0.026396  0.011643  0.007050 -0.013972\n","4    2006-02-10  0.003946 -0.022076 -0.015791  0.003533  0.001090\n","...         ...       ...       ...       ...       ...       ...\n","4058 2022-05-02 -0.009775 -0.026466  0.007440 -0.032146 -0.012031\n","4059 2022-05-03  0.010921  0.006160 -0.010715  0.015683  0.010649\n","4060 2022-05-04  0.005294  0.005317  0.026226  0.006923  0.009715\n","4061 2022-05-05 -0.044557 -0.011806 -0.012902 -0.034640 -0.040629\n","4062 2022-05-06 -0.000088  0.015610  0.014710  0.001709 -0.003343\n","\n","[4063 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-0d88a2d4-1b88-49f0-a30c-9388ea40f4a0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2006-02-06</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2006-02-07</td>\n","      <td>-0.017837</td>\n","      <td>-0.036524</td>\n","      <td>-0.026592</td>\n","      <td>-0.005135</td>\n","      <td>-0.036168</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2006-02-08</td>\n","      <td>0.004264</td>\n","      <td>0.007765</td>\n","      <td>-0.001063</td>\n","      <td>-0.001247</td>\n","      <td>0.006138</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2006-02-09</td>\n","      <td>0.002589</td>\n","      <td>0.026396</td>\n","      <td>0.011643</td>\n","      <td>0.007050</td>\n","      <td>-0.013972</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2006-02-10</td>\n","      <td>0.003946</td>\n","      <td>-0.022076</td>\n","      <td>-0.015791</td>\n","      <td>0.003533</td>\n","      <td>0.001090</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4058</th>\n","      <td>2022-05-02</td>\n","      <td>-0.009775</td>\n","      <td>-0.026466</td>\n","      <td>0.007440</td>\n","      <td>-0.032146</td>\n","      <td>-0.012031</td>\n","    </tr>\n","    <tr>\n","      <th>4059</th>\n","      <td>2022-05-03</td>\n","      <td>0.010921</td>\n","      <td>0.006160</td>\n","      <td>-0.010715</td>\n","      <td>0.015683</td>\n","      <td>0.010649</td>\n","    </tr>\n","    <tr>\n","      <th>4060</th>\n","      <td>2022-05-04</td>\n","      <td>0.005294</td>\n","      <td>0.005317</td>\n","      <td>0.026226</td>\n","      <td>0.006923</td>\n","      <td>0.009715</td>\n","    </tr>\n","    <tr>\n","      <th>4061</th>\n","      <td>2022-05-05</td>\n","      <td>-0.044557</td>\n","      <td>-0.011806</td>\n","      <td>-0.012902</td>\n","      <td>-0.034640</td>\n","      <td>-0.040629</td>\n","    </tr>\n","    <tr>\n","      <th>4062</th>\n","      <td>2022-05-06</td>\n","      <td>-0.000088</td>\n","      <td>0.015610</td>\n","      <td>0.014710</td>\n","      <td>0.001709</td>\n","      <td>-0.003343</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4063 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d88a2d4-1b88-49f0-a30c-9388ea40f4a0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0d88a2d4-1b88-49f0-a30c-9388ea40f4a0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0d88a2d4-1b88-49f0-a30c-9388ea40f4a0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["df3.columns=['거래일','ywo로그','iau로그', 'dbc로그', 'vnq로그', 'nsd로그']\n","df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"E2mSKv9-BEvB","executionInfo":{"status":"ok","timestamp":1652069541140,"user_tz":-540,"elapsed":466,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"674efdc1-a2fc-4eff-f331-a5dc41beea96"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            거래일     ywo로그     iau로그     dbc로그     vnq로그     nsd로그\n","0    2006-02-06       NaN       NaN       NaN       NaN       NaN\n","1    2006-02-07 -0.017837 -0.036524 -0.026592 -0.005135 -0.036168\n","2    2006-02-08  0.004264  0.007765 -0.001063 -0.001247  0.006138\n","3    2006-02-09  0.002589  0.026396  0.011643  0.007050 -0.013972\n","4    2006-02-10  0.003946 -0.022076 -0.015791  0.003533  0.001090\n","...         ...       ...       ...       ...       ...       ...\n","4058 2022-05-02 -0.009775 -0.026466  0.007440 -0.032146 -0.012031\n","4059 2022-05-03  0.010921  0.006160 -0.010715  0.015683  0.010649\n","4060 2022-05-04  0.005294  0.005317  0.026226  0.006923  0.009715\n","4061 2022-05-05 -0.044557 -0.011806 -0.012902 -0.034640 -0.040629\n","4062 2022-05-06 -0.000088  0.015610  0.014710  0.001709 -0.003343\n","\n","[4063 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-18c6739a-c249-4571-81dc-4754c9a61a51\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>거래일</th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2006-02-06</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2006-02-07</td>\n","      <td>-0.017837</td>\n","      <td>-0.036524</td>\n","      <td>-0.026592</td>\n","      <td>-0.005135</td>\n","      <td>-0.036168</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2006-02-08</td>\n","      <td>0.004264</td>\n","      <td>0.007765</td>\n","      <td>-0.001063</td>\n","      <td>-0.001247</td>\n","      <td>0.006138</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2006-02-09</td>\n","      <td>0.002589</td>\n","      <td>0.026396</td>\n","      <td>0.011643</td>\n","      <td>0.007050</td>\n","      <td>-0.013972</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2006-02-10</td>\n","      <td>0.003946</td>\n","      <td>-0.022076</td>\n","      <td>-0.015791</td>\n","      <td>0.003533</td>\n","      <td>0.001090</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4058</th>\n","      <td>2022-05-02</td>\n","      <td>-0.009775</td>\n","      <td>-0.026466</td>\n","      <td>0.007440</td>\n","      <td>-0.032146</td>\n","      <td>-0.012031</td>\n","    </tr>\n","    <tr>\n","      <th>4059</th>\n","      <td>2022-05-03</td>\n","      <td>0.010921</td>\n","      <td>0.006160</td>\n","      <td>-0.010715</td>\n","      <td>0.015683</td>\n","      <td>0.010649</td>\n","    </tr>\n","    <tr>\n","      <th>4060</th>\n","      <td>2022-05-04</td>\n","      <td>0.005294</td>\n","      <td>0.005317</td>\n","      <td>0.026226</td>\n","      <td>0.006923</td>\n","      <td>0.009715</td>\n","    </tr>\n","    <tr>\n","      <th>4061</th>\n","      <td>2022-05-05</td>\n","      <td>-0.044557</td>\n","      <td>-0.011806</td>\n","      <td>-0.012902</td>\n","      <td>-0.034640</td>\n","      <td>-0.040629</td>\n","    </tr>\n","    <tr>\n","      <th>4062</th>\n","      <td>2022-05-06</td>\n","      <td>-0.000088</td>\n","      <td>0.015610</td>\n","      <td>0.014710</td>\n","      <td>0.001709</td>\n","      <td>-0.003343</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4063 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18c6739a-c249-4571-81dc-4754c9a61a51')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-18c6739a-c249-4571-81dc-4754c9a61a51 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-18c6739a-c249-4571-81dc-4754c9a61a51');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["rtn_df=pd.merge(rtn_df,df3,on='거래일',how='outer')\n","rtn_df=rtn_df.set_index('거래일')\n","rtn_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"_qEYMo3ABK2g","executionInfo":{"status":"ok","timestamp":1652069801072,"user_tz":-540,"elapsed":19,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"d491032f-a5d8-42bb-d148-393905f90da2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               단기채로그     중기채로그     장기채로그    코스피수익률     ywo로그     iau로그  \\\n","거래일                                                                      \n","2003-01-02       NaN       NaN       NaN  0.000000       NaN       NaN   \n","2003-01-03  0.000131 -0.000606 -0.000262  0.040012       NaN       NaN   \n","2003-01-06  0.000540  0.000694  0.000645  0.008450       NaN       NaN   \n","2003-01-07  0.000259  0.001336  0.001335 -0.022004       NaN       NaN   \n","2003-01-08  0.000211  0.001148  0.001523 -0.000736       NaN       NaN   \n","...              ...       ...       ...       ...       ...       ...   \n","2022-02-02       NaN       NaN       NaN       NaN -0.003979  0.001028   \n","2022-03-01       NaN       NaN       NaN       NaN -0.010901  0.021340   \n","2022-03-09       NaN       NaN       NaN       NaN  0.025597 -0.029025   \n","2022-05-05       NaN       NaN       NaN       NaN -0.044557 -0.011806   \n","2022-05-06       NaN       NaN       NaN       NaN -0.000088  0.015610   \n","\n","               dbc로그     vnq로그     nsd로그  \n","거래일                                       \n","2003-01-02       NaN       NaN       NaN  \n","2003-01-03       NaN       NaN       NaN  \n","2003-01-06       NaN       NaN       NaN  \n","2003-01-07       NaN       NaN       NaN  \n","2003-01-08       NaN       NaN       NaN  \n","...              ...       ...       ...  \n","2022-02-02  0.001814  0.010496  0.010237  \n","2022-03-01  0.042215 -0.002495 -0.004016  \n","2022-03-09 -0.082121  0.015930  0.022656  \n","2022-05-05 -0.012902 -0.034640 -0.040629  \n","2022-05-06  0.014710  0.001709 -0.003343  \n","\n","[4982 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-3960e302-9341-4f59-8453-20a97c6af477\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>장기채로그</th>\n","      <th>코스피수익률</th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","    <tr>\n","      <th>거래일</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2003-01-02</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-03</th>\n","      <td>0.000131</td>\n","      <td>-0.000606</td>\n","      <td>-0.000262</td>\n","      <td>0.040012</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-06</th>\n","      <td>0.000540</td>\n","      <td>0.000694</td>\n","      <td>0.000645</td>\n","      <td>0.008450</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-07</th>\n","      <td>0.000259</td>\n","      <td>0.001336</td>\n","      <td>0.001335</td>\n","      <td>-0.022004</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2003-01-08</th>\n","      <td>0.000211</td>\n","      <td>0.001148</td>\n","      <td>0.001523</td>\n","      <td>-0.000736</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-02</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.003979</td>\n","      <td>0.001028</td>\n","      <td>0.001814</td>\n","      <td>0.010496</td>\n","      <td>0.010237</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.010901</td>\n","      <td>0.021340</td>\n","      <td>0.042215</td>\n","      <td>-0.002495</td>\n","      <td>-0.004016</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03-09</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.025597</td>\n","      <td>-0.029025</td>\n","      <td>-0.082121</td>\n","      <td>0.015930</td>\n","      <td>0.022656</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-05</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.044557</td>\n","      <td>-0.011806</td>\n","      <td>-0.012902</td>\n","      <td>-0.034640</td>\n","      <td>-0.040629</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-06</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.000088</td>\n","      <td>0.015610</td>\n","      <td>0.014710</td>\n","      <td>0.001709</td>\n","      <td>-0.003343</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4982 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3960e302-9341-4f59-8453-20a97c6af477')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3960e302-9341-4f59-8453-20a97c6af477 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3960e302-9341-4f59-8453-20a97c6af477');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["rtn_df=rtn_df.loc['2006-02-07':]"],"metadata":{"id":"NLM2IE_nCM4Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rtn_df=rtn_df.fillna(0)\n","rtn_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"DDyU6ODaB-s_","executionInfo":{"status":"ok","timestamp":1652069837389,"user_tz":-540,"elapsed":499,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"53d5f987-a525-4396-a6f2-a5a9e8edd665"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               단기채로그     중기채로그     장기채로그    코스피수익률     ywo로그     iau로그  \\\n","거래일                                                                      \n","2006-02-07  0.000085 -0.000366 -0.000645 -0.007001 -0.017837 -0.036524   \n","2006-02-08  0.000132  0.000654  0.000922 -0.016109  0.004264  0.007765   \n","2006-02-09  0.000194  0.002796  0.004726  0.008106  0.002589  0.026396   \n","2006-02-10  0.000145  0.000141  0.000403  0.010215  0.003946 -0.022076   \n","2006-02-13  0.000438  0.000094 -0.000358 -0.010874 -0.020672 -0.019701   \n","...              ...       ...       ...       ...       ...       ...   \n","2022-02-02  0.000000  0.000000  0.000000  0.000000 -0.003979  0.001028   \n","2022-03-01  0.000000  0.000000  0.000000  0.000000 -0.010901  0.021340   \n","2022-03-09  0.000000  0.000000  0.000000  0.000000  0.025597 -0.029025   \n","2022-05-05  0.000000  0.000000  0.000000  0.000000 -0.044557 -0.011806   \n","2022-05-06  0.000000  0.000000  0.000000  0.000000 -0.000088  0.015610   \n","\n","               dbc로그     vnq로그     nsd로그  \n","거래일                                       \n","2006-02-07 -0.026592 -0.005135 -0.036168  \n","2006-02-08 -0.001063 -0.001247  0.006138  \n","2006-02-09  0.011643  0.007050 -0.013972  \n","2006-02-10 -0.015791  0.003533  0.001090  \n","2006-02-13 -0.013797  0.003273 -0.018501  \n","...              ...       ...       ...  \n","2022-02-02  0.001814  0.010496  0.010237  \n","2022-03-01  0.042215 -0.002495 -0.004016  \n","2022-03-09 -0.082121  0.015930  0.022656  \n","2022-05-05 -0.012902 -0.034640 -0.040629  \n","2022-05-06  0.014710  0.001709 -0.003343  \n","\n","[4209 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-441fc1fe-73c3-4fca-bfb2-7cf5c5857ca4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>장기채로그</th>\n","      <th>코스피수익률</th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","    <tr>\n","      <th>거래일</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2006-02-07</th>\n","      <td>0.000085</td>\n","      <td>-0.000366</td>\n","      <td>-0.000645</td>\n","      <td>-0.007001</td>\n","      <td>-0.017837</td>\n","      <td>-0.036524</td>\n","      <td>-0.026592</td>\n","      <td>-0.005135</td>\n","      <td>-0.036168</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-08</th>\n","      <td>0.000132</td>\n","      <td>0.000654</td>\n","      <td>0.000922</td>\n","      <td>-0.016109</td>\n","      <td>0.004264</td>\n","      <td>0.007765</td>\n","      <td>-0.001063</td>\n","      <td>-0.001247</td>\n","      <td>0.006138</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-09</th>\n","      <td>0.000194</td>\n","      <td>0.002796</td>\n","      <td>0.004726</td>\n","      <td>0.008106</td>\n","      <td>0.002589</td>\n","      <td>0.026396</td>\n","      <td>0.011643</td>\n","      <td>0.007050</td>\n","      <td>-0.013972</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-10</th>\n","      <td>0.000145</td>\n","      <td>0.000141</td>\n","      <td>0.000403</td>\n","      <td>0.010215</td>\n","      <td>0.003946</td>\n","      <td>-0.022076</td>\n","      <td>-0.015791</td>\n","      <td>0.003533</td>\n","      <td>0.001090</td>\n","    </tr>\n","    <tr>\n","      <th>2006-02-13</th>\n","      <td>0.000438</td>\n","      <td>0.000094</td>\n","      <td>-0.000358</td>\n","      <td>-0.010874</td>\n","      <td>-0.020672</td>\n","      <td>-0.019701</td>\n","      <td>-0.013797</td>\n","      <td>0.003273</td>\n","      <td>-0.018501</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-02</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.003979</td>\n","      <td>0.001028</td>\n","      <td>0.001814</td>\n","      <td>0.010496</td>\n","      <td>0.010237</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03-01</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.010901</td>\n","      <td>0.021340</td>\n","      <td>0.042215</td>\n","      <td>-0.002495</td>\n","      <td>-0.004016</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03-09</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.025597</td>\n","      <td>-0.029025</td>\n","      <td>-0.082121</td>\n","      <td>0.015930</td>\n","      <td>0.022656</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-05</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.044557</td>\n","      <td>-0.011806</td>\n","      <td>-0.012902</td>\n","      <td>-0.034640</td>\n","      <td>-0.040629</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05-06</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.000088</td>\n","      <td>0.015610</td>\n","      <td>0.014710</td>\n","      <td>0.001709</td>\n","      <td>-0.003343</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4209 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-441fc1fe-73c3-4fca-bfb2-7cf5c5857ca4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-441fc1fe-73c3-4fca-bfb2-7cf5c5857ca4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-441fc1fe-73c3-4fca-bfb2-7cf5c5857ca4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["# 월간 수익률 정도의 스케일로 변환한다\n","xc_train = xc_train.astype('float32') *100\n","xf_train = xf_train.astype('float32') *100\n","xc_test = xc_test.astype('float32') *100\n","xf_test = xf_test.astype('float32') *100\n","\n","N_TIME = xc_train.shape[1]\n","N_FUTURE = xf_train.shape[1]\n","N_STOCKS = xf_train.shape[2]\n","\n","# 학습 데이터는 shuffling 한다.\n","xc_train, xf_train = shuffle(xc_train, xf_train)\n","\n","# Markowitz Network를 생성한다.\n","# over confidence를 제어할 조절 변수 정의\n","GAMMA_CONST = 0.001\n","REG_CONST = 0.1\n","SAVE_MODEL = 'data/3-1.MPN_LSTM.h5'\n","\n","# 최적 포트폴리오를 구축할 목표 함수를 정의한다.\n","# Markowitz Network에서는 이 함수를 loss로 이용한다. max(objective) = min(-objective)\n","# y_pred = 마코비츠 네트워크의 출력이 전달된다. (keras 내부 기능)\n","# y_true = model.fit()에서 전달된 N_FUTURE일 후의 수익률 (xf_train)이 들어온다.\n","def markowitz_objective(y_true, y_pred):\n","    W = y_pred      # 마코비츠 네트워크의 출력\n","    xf_rtn = y_true\n","    W = tf.expand_dims(W, axis = 1)   # W = (None, 1, 50)\n","    R = tf.expand_dims(tf.reduce_mean(xf_rtn, axis = 1), axis = 2) # R = (None, 50, 1)\n","    C = tfp.stats.covariance(xf_rtn, sample_axis=1)\n","\n","    rtn = tf.matmul(W, R)  \n","    vol = tf.matmul(W, tf.matmul(C, tf.transpose(W, perm = [0, 2, 1]))) * GAMMA_CONST\n","    reg = tf.reduce_sum(tf.square(W), axis = -1) * REG_CONST\n","    objective = rtn - vol - reg\n","    \n","    return -tf.reduce_sum(objective, axis=0)\n","\n","# LSTM으로 Markowitz 모델을 생성한다.\n","xc_input = Input(batch_shape = (None, N_TIME, N_STOCKS))\n","h_lstm = LSTM(8#, dropout = 0.3\n","              )(xc_input)\n","y_output = Dense(N_STOCKS, activation='linear')(h_lstm)  # linear projection\n","\n","# 특정 종목을 과도하게 매수하는 것을 방지하기 위해 위에서 tanh를 사용했다. \n","# (over confidence 방지용). REG_CONST를 적용했기 때문에 이미 고려된 사항이지만, \n","# 안전을 위해 추가했다. ex : [-3, 0.4, 0.2, +20] --> [-0.995, 0.380, 0.197, 1.0]\n","\n","# 마코비츠의 최적 weights\n","with tf.device(\"/device:GPU:0\"):\n","    y_output = Activation('softmax')(y_output)\n","\n","    model = Model(xc_input, y_output)\n","    model.compile(loss = markowitz_objective, \n","                optimizer = Adam(learning_rate = 1e-5))\n","    stop = EarlyStopping(patience=10, monitor='val_loss')\n","\n","\n","    model.summary()\n","\n","    # MPN을 학습하고 결과를 저장한다.\n","    hist = model.fit(xc_train, xf_train, epochs=150, batch_size = 64, \n","                    validation_data = (xc_test, xf_test))\n","    model.save(SAVE_MODEL)\n","\n","# loss trajectory를 확인한다.\n","plt.figure(figsize=(8, 5))\n","plt.plot(hist.history['loss'], label='Train loss')\n","plt.plot(hist.history['val_loss'], label='Test loss')\n","plt.legend()\n","plt.show()\n","\n","plt.figure(figsize=(8, 5))\n","plt.plot(np.negative(hist.history['loss']), label='Train loss')\n","plt.plot(np.negative(hist.history['val_loss']), label='Test loss')\n","plt.legend()\n","plt.show()\n","\n","# 최적 포트폴리오 결과 확인용 코드\n","def check_w(n = 0):\n","    plt.figure(figsize=(8, 4))\n","    y_pred = model.predict(xc_test[n].reshape(1, N_TIME, N_STOCKS))[0]\n","    plt.bar(np.arange(N_STOCKS), y_pred, alpha = 0.7)\n","    plt.show()\n","    \n","check_w(0)\n","check_w(200)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"DYFMcH81sJrx","executionInfo":{"status":"error","timestamp":1652084478262,"user_tz":-540,"elapsed":44284,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"f8e5a88a-45ec-481c-9383-85cec774d8e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_21\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_22 (InputLayer)       [(None, 60, 8)]           0         \n","                                                                 \n"," lstm_21 (LSTM)              (None, 8)                 544       \n","                                                                 \n"," dense_21 (Dense)            (None, 8)                 72        \n","                                                                 \n"," activation_21 (Activation)  (None, 8)                 0         \n","                                                                 \n","=================================================================\n","Total params: 616\n","Trainable params: 616\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/150\n","31/31 [==============================] - 2s 21ms/step - loss: -0.4142 - val_loss: -0.8633\n","Epoch 2/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4053 - val_loss: -0.8629\n","Epoch 3/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4276 - val_loss: -0.8625\n","Epoch 4/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4179 - val_loss: -0.8622\n","Epoch 5/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4213 - val_loss: -0.8619\n","Epoch 6/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4351 - val_loss: -0.8615\n","Epoch 7/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4257 - val_loss: -0.8611\n","Epoch 8/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4145 - val_loss: -0.8608\n","Epoch 9/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4214 - val_loss: -0.8603\n","Epoch 10/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4056 - val_loss: -0.8600\n","Epoch 11/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4176 - val_loss: -0.8597\n","Epoch 12/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4489 - val_loss: -0.8593\n","Epoch 13/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4252 - val_loss: -0.8588\n","Epoch 14/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4339 - val_loss: -0.8586\n","Epoch 15/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4383 - val_loss: -0.8581\n","Epoch 16/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4296 - val_loss: -0.8577\n","Epoch 17/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4190 - val_loss: -0.8574\n","Epoch 18/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4577 - val_loss: -0.8570\n","Epoch 19/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4404 - val_loss: -0.8567\n","Epoch 20/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4326 - val_loss: -0.8562\n","Epoch 21/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4489 - val_loss: -0.8557\n","Epoch 22/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4328 - val_loss: -0.8553\n","Epoch 23/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4396 - val_loss: -0.8551\n","Epoch 24/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4417 - val_loss: -0.8547\n","Epoch 25/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4705 - val_loss: -0.8543\n","Epoch 26/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4513 - val_loss: -0.8539\n","Epoch 27/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4723 - val_loss: -0.8535\n","Epoch 28/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4353 - val_loss: -0.8532\n","Epoch 29/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4512 - val_loss: -0.8528\n","Epoch 30/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4503 - val_loss: -0.8523\n","Epoch 31/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4456 - val_loss: -0.8519\n","Epoch 32/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4379 - val_loss: -0.8516\n","Epoch 33/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4684 - val_loss: -0.8512\n","Epoch 34/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4576 - val_loss: -0.8508\n","Epoch 35/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4528 - val_loss: -0.8503\n","Epoch 36/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4504 - val_loss: -0.8500\n","Epoch 37/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4326 - val_loss: -0.8495\n","Epoch 38/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4545 - val_loss: -0.8491\n","Epoch 39/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5082 - val_loss: -0.8489\n","Epoch 40/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4722 - val_loss: -0.8484\n","Epoch 41/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4486 - val_loss: -0.8480\n","Epoch 42/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4792 - val_loss: -0.8476\n","Epoch 43/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4617 - val_loss: -0.8470\n","Epoch 44/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4702 - val_loss: -0.8467\n","Epoch 45/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4693 - val_loss: -0.8464\n","Epoch 46/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4613 - val_loss: -0.8459\n","Epoch 47/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4688 - val_loss: -0.8455\n","Epoch 48/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4448 - val_loss: -0.8451\n","Epoch 49/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4630 - val_loss: -0.8447\n","Epoch 50/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4634 - val_loss: -0.8443\n","Epoch 51/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4570 - val_loss: -0.8438\n","Epoch 52/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4680 - val_loss: -0.8436\n","Epoch 53/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4732 - val_loss: -0.8430\n","Epoch 54/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4765 - val_loss: -0.8426\n","Epoch 55/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4858 - val_loss: -0.8423\n","Epoch 56/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4742 - val_loss: -0.8417\n","Epoch 57/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4767 - val_loss: -0.8413\n","Epoch 58/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4601 - val_loss: -0.8409\n","Epoch 59/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4916 - val_loss: -0.8407\n","Epoch 60/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4934 - val_loss: -0.8400\n","Epoch 61/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4748 - val_loss: -0.8396\n","Epoch 62/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4710 - val_loss: -0.8392\n","Epoch 63/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4752 - val_loss: -0.8388\n","Epoch 64/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4906 - val_loss: -0.8384\n","Epoch 65/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4845 - val_loss: -0.8380\n","Epoch 66/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4942 - val_loss: -0.8376\n","Epoch 67/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4808 - val_loss: -0.8372\n","Epoch 68/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4731 - val_loss: -0.8367\n","Epoch 69/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4859 - val_loss: -0.8363\n","Epoch 70/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4979 - val_loss: -0.8358\n","Epoch 71/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4905 - val_loss: -0.8353\n","Epoch 72/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4917 - val_loss: -0.8349\n","Epoch 73/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5048 - val_loss: -0.8345\n","Epoch 74/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5116 - val_loss: -0.8341\n","Epoch 75/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4981 - val_loss: -0.8335\n","Epoch 76/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5174 - val_loss: -0.8332\n","Epoch 77/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4936 - val_loss: -0.8327\n","Epoch 78/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5086 - val_loss: -0.8323\n","Epoch 79/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5315 - val_loss: -0.8318\n","Epoch 80/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5114 - val_loss: -0.8314\n","Epoch 81/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.4895 - val_loss: -0.8310\n","Epoch 82/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5142 - val_loss: -0.8305\n","Epoch 83/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5239 - val_loss: -0.8298\n","Epoch 84/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5077 - val_loss: -0.8296\n","Epoch 85/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.4946 - val_loss: -0.8292\n","Epoch 86/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5182 - val_loss: -0.8287\n","Epoch 87/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5166 - val_loss: -0.8282\n","Epoch 88/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5127 - val_loss: -0.8277\n","Epoch 89/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5483 - val_loss: -0.8272\n","Epoch 90/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5196 - val_loss: -0.8268\n","Epoch 91/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5233 - val_loss: -0.8263\n","Epoch 92/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5290 - val_loss: -0.8259\n","Epoch 93/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5359 - val_loss: -0.8255\n","Epoch 94/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5210 - val_loss: -0.8250\n","Epoch 95/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5179 - val_loss: -0.8246\n","Epoch 96/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5344 - val_loss: -0.8242\n","Epoch 97/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5284 - val_loss: -0.8235\n","Epoch 98/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5110 - val_loss: -0.8232\n","Epoch 99/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5320 - val_loss: -0.8226\n","Epoch 100/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5310 - val_loss: -0.8223\n","Epoch 101/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5447 - val_loss: -0.8217\n","Epoch 102/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5447 - val_loss: -0.8212\n","Epoch 103/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5090 - val_loss: -0.8208\n","Epoch 104/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5375 - val_loss: -0.8203\n","Epoch 105/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5457 - val_loss: -0.8198\n","Epoch 106/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5338 - val_loss: -0.8193\n","Epoch 107/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5399 - val_loss: -0.8187\n","Epoch 108/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5348 - val_loss: -0.8183\n","Epoch 109/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5342 - val_loss: -0.8179\n","Epoch 110/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5295 - val_loss: -0.8173\n","Epoch 111/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5292 - val_loss: -0.8169\n","Epoch 112/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5487 - val_loss: -0.8164\n","Epoch 113/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5405 - val_loss: -0.8159\n","Epoch 114/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5385 - val_loss: -0.8153\n","Epoch 115/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5612 - val_loss: -0.8149\n","Epoch 116/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5428 - val_loss: -0.8145\n","Epoch 117/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5508 - val_loss: -0.8139\n","Epoch 118/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5405 - val_loss: -0.8133\n","Epoch 119/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5683 - val_loss: -0.8128\n","Epoch 120/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5500 - val_loss: -0.8123\n","Epoch 121/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5425 - val_loss: -0.8118\n","Epoch 122/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5847 - val_loss: -0.8114\n","Epoch 123/150\n","31/31 [==============================] - 0s 8ms/step - loss: -0.5691 - val_loss: -0.8108\n","Epoch 124/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5596 - val_loss: -0.8102\n","Epoch 125/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5597 - val_loss: -0.8097\n","Epoch 126/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5617 - val_loss: -0.8093\n","Epoch 127/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5610 - val_loss: -0.8087\n","Epoch 128/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5495 - val_loss: -0.8082\n","Epoch 129/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5465 - val_loss: -0.8076\n","Epoch 130/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5473 - val_loss: -0.8071\n","Epoch 131/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5557 - val_loss: -0.8066\n","Epoch 132/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5632 - val_loss: -0.8059\n","Epoch 133/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5431 - val_loss: -0.8054\n","Epoch 134/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5690 - val_loss: -0.8050\n","Epoch 135/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5912 - val_loss: -0.8042\n","Epoch 136/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5726 - val_loss: -0.8039\n","Epoch 137/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5436 - val_loss: -0.8034\n","Epoch 138/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5593 - val_loss: -0.8027\n","Epoch 139/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5672 - val_loss: -0.8023\n","Epoch 140/150\n","31/31 [==============================] - 0s 6ms/step - loss: -0.5648 - val_loss: -0.8016\n","Epoch 141/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5605 - val_loss: -0.8012\n","Epoch 142/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5844 - val_loss: -0.8005\n","Epoch 143/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.6020 - val_loss: -0.7998\n","Epoch 144/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5924 - val_loss: -0.7994\n","Epoch 145/150\n","31/31 [==============================] - 0s 8ms/step - loss: -0.5959 - val_loss: -0.7989\n","Epoch 146/150\n","31/31 [==============================] - 0s 8ms/step - loss: -0.5881 - val_loss: -0.7985\n","Epoch 147/150\n","31/31 [==============================] - 0s 8ms/step - loss: -0.6147 - val_loss: -0.7977\n","Epoch 148/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5990 - val_loss: -0.7972\n","Epoch 149/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.6078 - val_loss: -0.7966\n","Epoch 150/150\n","31/31 [==============================] - 0s 7ms/step - loss: -0.5809 - val_loss: -0.7961\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"error","ename":"IndexError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-231-f9897827f15f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     84\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     85\u001b[0m \u001b[0mcheck_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 86\u001b[0;31m \u001b[0mcheck_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m200\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-231-f9897827f15f>\u001b[0m in \u001b[0;36mcheck_w\u001b[0;34m(n)\u001b[0m\n\u001b[1;32m     79\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcheck_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m     \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mxc_test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mN_TIME\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mN_STOCKS\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mN_STOCKS\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0.7\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIndexError\u001b[0m: index 200 is out of bounds for axis 0 with size 147"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x288 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["rtn_df=rtn_df.reset_index()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"gCLtPt9tCZ6W","executionInfo":{"status":"ok","timestamp":1652069903905,"user_tz":-540,"elapsed":6,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"2dcdf21a-f0c1-4a49-8ba8-fd8e6058a8d6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            거래일     단기채로그     중기채로그     장기채로그    코스피수익률     ywo로그     iau로그  \\\n","0    2006-02-07  0.000085 -0.000366 -0.000645 -0.007001 -0.017837 -0.036524   \n","1    2006-02-08  0.000132  0.000654  0.000922 -0.016109  0.004264  0.007765   \n","2    2006-02-09  0.000194  0.002796  0.004726  0.008106  0.002589  0.026396   \n","3    2006-02-10  0.000145  0.000141  0.000403  0.010215  0.003946 -0.022076   \n","4    2006-02-13  0.000438  0.000094 -0.000358 -0.010874 -0.020672 -0.019701   \n","...         ...       ...       ...       ...       ...       ...       ...   \n","4204 2022-02-02  0.000000  0.000000  0.000000  0.000000 -0.003979  0.001028   \n","4205 2022-03-01  0.000000  0.000000  0.000000  0.000000 -0.010901  0.021340   \n","4206 2022-03-09  0.000000  0.000000  0.000000  0.000000  0.025597 -0.029025   \n","4207 2022-05-05  0.000000  0.000000  0.000000  0.000000 -0.044557 -0.011806   \n","4208 2022-05-06  0.000000  0.000000  0.000000  0.000000 -0.000088  0.015610   \n","\n","         dbc로그     vnq로그     nsd로그  \n","0    -0.026592 -0.005135 -0.036168  \n","1    -0.001063 -0.001247  0.006138  \n","2     0.011643  0.007050 -0.013972  \n","3    -0.015791  0.003533  0.001090  \n","4    -0.013797  0.003273 -0.018501  \n","...        ...       ...       ...  \n","4204  0.001814  0.010496  0.010237  \n","4205  0.042215 -0.002495 -0.004016  \n","4206 -0.082121  0.015930  0.022656  \n","4207 -0.012902 -0.034640 -0.040629  \n","4208  0.014710  0.001709 -0.003343  \n","\n","[4209 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-fc7b0bcf-b5e8-4a2b-b9f2-64b8e76aa65e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>거래일</th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>장기채로그</th>\n","      <th>코스피수익률</th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2006-02-07</td>\n","      <td>0.000085</td>\n","      <td>-0.000366</td>\n","      <td>-0.000645</td>\n","      <td>-0.007001</td>\n","      <td>-0.017837</td>\n","      <td>-0.036524</td>\n","      <td>-0.026592</td>\n","      <td>-0.005135</td>\n","      <td>-0.036168</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2006-02-08</td>\n","      <td>0.000132</td>\n","      <td>0.000654</td>\n","      <td>0.000922</td>\n","      <td>-0.016109</td>\n","      <td>0.004264</td>\n","      <td>0.007765</td>\n","      <td>-0.001063</td>\n","      <td>-0.001247</td>\n","      <td>0.006138</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2006-02-09</td>\n","      <td>0.000194</td>\n","      <td>0.002796</td>\n","      <td>0.004726</td>\n","      <td>0.008106</td>\n","      <td>0.002589</td>\n","      <td>0.026396</td>\n","      <td>0.011643</td>\n","      <td>0.007050</td>\n","      <td>-0.013972</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2006-02-10</td>\n","      <td>0.000145</td>\n","      <td>0.000141</td>\n","      <td>0.000403</td>\n","      <td>0.010215</td>\n","      <td>0.003946</td>\n","      <td>-0.022076</td>\n","      <td>-0.015791</td>\n","      <td>0.003533</td>\n","      <td>0.001090</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2006-02-13</td>\n","      <td>0.000438</td>\n","      <td>0.000094</td>\n","      <td>-0.000358</td>\n","      <td>-0.010874</td>\n","      <td>-0.020672</td>\n","      <td>-0.019701</td>\n","      <td>-0.013797</td>\n","      <td>0.003273</td>\n","      <td>-0.018501</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4204</th>\n","      <td>2022-02-02</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.003979</td>\n","      <td>0.001028</td>\n","      <td>0.001814</td>\n","      <td>0.010496</td>\n","      <td>0.010237</td>\n","    </tr>\n","    <tr>\n","      <th>4205</th>\n","      <td>2022-03-01</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.010901</td>\n","      <td>0.021340</td>\n","      <td>0.042215</td>\n","      <td>-0.002495</td>\n","      <td>-0.004016</td>\n","    </tr>\n","    <tr>\n","      <th>4206</th>\n","      <td>2022-03-09</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.025597</td>\n","      <td>-0.029025</td>\n","      <td>-0.082121</td>\n","      <td>0.015930</td>\n","      <td>0.022656</td>\n","    </tr>\n","    <tr>\n","      <th>4207</th>\n","      <td>2022-05-05</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.044557</td>\n","      <td>-0.011806</td>\n","      <td>-0.012902</td>\n","      <td>-0.034640</td>\n","      <td>-0.040629</td>\n","    </tr>\n","    <tr>\n","      <th>4208</th>\n","      <td>2022-05-06</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.000088</td>\n","      <td>0.015610</td>\n","      <td>0.014710</td>\n","      <td>0.001709</td>\n","      <td>-0.003343</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4209 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc7b0bcf-b5e8-4a2b-b9f2-64b8e76aa65e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc7b0bcf-b5e8-4a2b-b9f2-64b8e76aa65e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc7b0bcf-b5e8-4a2b-b9f2-64b8e76aa65e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["rtn_df=rtn_df.sort_values(by=['거래일'], ascending=True)\n","rtn_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"3ttDgYZCCmvv","executionInfo":{"status":"ok","timestamp":1652069926774,"user_tz":-540,"elapsed":49,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"0627e95e-c576-435e-8f75-8d6393c609b6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            거래일     단기채로그     중기채로그     장기채로그    코스피수익률     ywo로그     iau로그  \\\n","0    2006-02-07  0.000085 -0.000366 -0.000645 -0.007001 -0.017837 -0.036524   \n","1    2006-02-08  0.000132  0.000654  0.000922 -0.016109  0.004264  0.007765   \n","2    2006-02-09  0.000194  0.002796  0.004726  0.008106  0.002589  0.026396   \n","3    2006-02-10  0.000145  0.000141  0.000403  0.010215  0.003946 -0.022076   \n","4    2006-02-13  0.000438  0.000094 -0.000358 -0.010874 -0.020672 -0.019701   \n","...         ...       ...       ...       ...       ...       ...       ...   \n","4027 2022-05-02  0.000143 -0.003332 -0.005720 -0.002824 -0.009775 -0.026466   \n","4028 2022-05-03  0.000032 -0.000973 -0.000892 -0.002604  0.010921  0.006160   \n","4029 2022-05-04  0.000084 -0.000864 -0.001120 -0.001079  0.005294  0.005317   \n","4207 2022-05-05  0.000000  0.000000  0.000000  0.000000 -0.044557 -0.011806   \n","4208 2022-05-06  0.000000  0.000000  0.000000  0.000000 -0.000088  0.015610   \n","\n","         dbc로그     vnq로그     nsd로그  \n","0    -0.026592 -0.005135 -0.036168  \n","1    -0.001063 -0.001247  0.006138  \n","2     0.011643  0.007050 -0.013972  \n","3    -0.015791  0.003533  0.001090  \n","4    -0.013797  0.003273 -0.018501  \n","...        ...       ...       ...  \n","4027  0.007440 -0.032146 -0.012031  \n","4028 -0.010715  0.015683  0.010649  \n","4029  0.026226  0.006923  0.009715  \n","4207 -0.012902 -0.034640 -0.040629  \n","4208  0.014710  0.001709 -0.003343  \n","\n","[4209 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-5852c704-fc8a-44c5-ad80-61a1687dc3d0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>거래일</th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>장기채로그</th>\n","      <th>코스피수익률</th>\n","      <th>ywo로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2006-02-07</td>\n","      <td>0.000085</td>\n","      <td>-0.000366</td>\n","      <td>-0.000645</td>\n","      <td>-0.007001</td>\n","      <td>-0.017837</td>\n","      <td>-0.036524</td>\n","      <td>-0.026592</td>\n","      <td>-0.005135</td>\n","      <td>-0.036168</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2006-02-08</td>\n","      <td>0.000132</td>\n","      <td>0.000654</td>\n","      <td>0.000922</td>\n","      <td>-0.016109</td>\n","      <td>0.004264</td>\n","      <td>0.007765</td>\n","      <td>-0.001063</td>\n","      <td>-0.001247</td>\n","      <td>0.006138</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2006-02-09</td>\n","      <td>0.000194</td>\n","      <td>0.002796</td>\n","      <td>0.004726</td>\n","      <td>0.008106</td>\n","      <td>0.002589</td>\n","      <td>0.026396</td>\n","      <td>0.011643</td>\n","      <td>0.007050</td>\n","      <td>-0.013972</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2006-02-10</td>\n","      <td>0.000145</td>\n","      <td>0.000141</td>\n","      <td>0.000403</td>\n","      <td>0.010215</td>\n","      <td>0.003946</td>\n","      <td>-0.022076</td>\n","      <td>-0.015791</td>\n","      <td>0.003533</td>\n","      <td>0.001090</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2006-02-13</td>\n","      <td>0.000438</td>\n","      <td>0.000094</td>\n","      <td>-0.000358</td>\n","      <td>-0.010874</td>\n","      <td>-0.020672</td>\n","      <td>-0.019701</td>\n","      <td>-0.013797</td>\n","      <td>0.003273</td>\n","      <td>-0.018501</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4027</th>\n","      <td>2022-05-02</td>\n","      <td>0.000143</td>\n","      <td>-0.003332</td>\n","      <td>-0.005720</td>\n","      <td>-0.002824</td>\n","      <td>-0.009775</td>\n","      <td>-0.026466</td>\n","      <td>0.007440</td>\n","      <td>-0.032146</td>\n","      <td>-0.012031</td>\n","    </tr>\n","    <tr>\n","      <th>4028</th>\n","      <td>2022-05-03</td>\n","      <td>0.000032</td>\n","      <td>-0.000973</td>\n","      <td>-0.000892</td>\n","      <td>-0.002604</td>\n","      <td>0.010921</td>\n","      <td>0.006160</td>\n","      <td>-0.010715</td>\n","      <td>0.015683</td>\n","      <td>0.010649</td>\n","    </tr>\n","    <tr>\n","      <th>4029</th>\n","      <td>2022-05-04</td>\n","      <td>0.000084</td>\n","      <td>-0.000864</td>\n","      <td>-0.001120</td>\n","      <td>-0.001079</td>\n","      <td>0.005294</td>\n","      <td>0.005317</td>\n","      <td>0.026226</td>\n","      <td>0.006923</td>\n","      <td>0.009715</td>\n","    </tr>\n","    <tr>\n","      <th>4207</th>\n","      <td>2022-05-05</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.044557</td>\n","      <td>-0.011806</td>\n","      <td>-0.012902</td>\n","      <td>-0.034640</td>\n","      <td>-0.040629</td>\n","    </tr>\n","    <tr>\n","      <th>4208</th>\n","      <td>2022-05-06</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.000088</td>\n","      <td>0.015610</td>\n","      <td>0.014710</td>\n","      <td>0.001709</td>\n","      <td>-0.003343</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4209 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5852c704-fc8a-44c5-ad80-61a1687dc3d0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5852c704-fc8a-44c5-ad80-61a1687dc3d0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5852c704-fc8a-44c5-ad80-61a1687dc3d0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["rtn_df=rtn_df.set_index('거래일')"],"metadata":{"id":"vQWvycjtCp89"},"execution_count":null,"outputs":[]}]}