{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"연습용1.ipynb의 사본_승희_0520_하락_0.00-0.02,0.09","provenance":[],"collapsed_sections":["mALEKSsEy85O","nX5ecKbgbalu","A047anhKb6Oh","m0rCDApfIr_6"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# IMPORT"],"metadata":{"id":"GZvXBMxtAuvB"}},{"cell_type":"code","execution_count":22,"metadata":{"id":"GODiobNZUnZo","executionInfo":{"status":"ok","timestamp":1653033343783,"user_tz":-540,"elapsed":3,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["import os\n","os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n","import numpy as np\n","import pickle\n","import tensorflow as tf\n","import tensorflow_probability as tfp\n","import matplotlib.pyplot as plt\n","from tensorflow.keras.layers import Input, LSTM, Dense, Activation\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.optimizers import Adam\n","from sklearn.utils import shuffle\n","from keras.models import Sequential\n","from keras.layers import Dense, LSTM\n","from keras import optimizers\n","from keras.callbacks import EarlyStopping, ModelCheckpoint"],"metadata":{"id":"eP3-orgFsG_a","executionInfo":{"status":"ok","timestamp":1653033346289,"user_tz":-540,"elapsed":3,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# 한글폰트 사용 in colab\n","%matplotlib inline  \n","\n","import matplotlib as mpl \n","import matplotlib.pyplot as plt \n","import matplotlib.font_manager as fm  \n","\n","!apt-get update -qq\n","!apt-get install fonts-nanum* -qq\n","\n","path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wf-N5pQ-9wwx","executionInfo":{"status":"ok","timestamp":1653033358193,"user_tz":-540,"elapsed":7943,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"366dc400-8d51-43df-c25e-af9b6bb1cac1"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["NanumBarunGothic\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_haNy6NFVMXD","executionInfo":{"status":"ok","timestamp":1653033364425,"user_tz":-540,"elapsed":4037,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"475b26dd-aca7-490b-cd69-56011ba077a9"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["# DATA LOAD"],"metadata":{"id":"RHTwRHyYAxpQ"}},{"cell_type":"code","source":["rtn_df=pd.read_csv(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/최종데이터셋.csv\")"],"metadata":{"id":"H-V5SmX7xz8d","executionInfo":{"status":"ok","timestamp":1653033367197,"user_tz":-540,"elapsed":424,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["df3=rtn_df[['Date','코스피']]\n","df3.Date=pd.to_datetime(df3.Date)\n","df3=df3.set_index('Date')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IWW8kAr3C5KT","executionInfo":{"status":"ok","timestamp":1653033370033,"user_tz":-540,"elapsed":537,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"2fafa21a-719d-4f44-ed83-98fab7a88ec7"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py:5516: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  self[name] = value\n"]}]},{"cell_type":"code","source":["rtn_df['Date']=pd.to_datetime(rtn_df['Date'])\n","rtn_df=rtn_df.set_index('Date')\n","rtn_df=rtn_df[['단기채로그', '중기채로그', 'ksp로그', 'iau로그', 'dbc로그', 'vnq로그', 'nsd로그']]"],"metadata":{"id":"mVgtVlFnyHFQ","executionInfo":{"status":"ok","timestamp":1653033373301,"user_tz":-540,"elapsed":410,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["# train, test 기간설정\n","\n","<pre>\n","하락장 : 2020-02-26 ~ 2020-04-06\n","상승장 : 2020-04-06 ~ 2020-06-26\n","1. MACD 하락 - 상승 : 2020-02-26 ~ 2020-06-26 \n","2. 종가 하락 - 상승 : 2020-02-26 ~ 2020-06-05\n","3. CLI 상승 & 주가 하락 : 2019-10-31 ~ [2019-11-01 : 2020-04-30] \n"," -- MACD 안전핀 장착 : [2019-11-01 : 2020-06-26] \n","4. CLI 하락 & : 주가 하락 \n","* train \n","down_2019=[:'2019-11-01']\n","down_2020=['2020-05-02':'2021-07-31']\n","* test\n","kospi_down=[2021-08-01 : ]\n"],"metadata":{"id":"cQOwyR9ZeWda"}},{"cell_type":"code","source":["# 하락장\n","rtn_df_train = rtn_df.loc[:'2019-10-31'] # Train set\n","rtn_df_test = rtn_df.loc['2019-09-06':'2020-04-06'] # Test set (using MA)"],"metadata":{"id":"lQA5pBCkQowj","executionInfo":{"status":"ok","timestamp":1653033376467,"user_tz":-540,"elapsed":433,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["# 상승장\n","rtn_df_train=rtn_df.loc[:'2019-10-31'] # Train set\n","rtn_df_test=rtn_df.loc['2020-02-11':'2021-07-31']  # Test set\n"],"metadata":{"id":"8bN2yuF54i4D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 최근하락장 \n","rtn_df_train=rtn_df.loc[:'2019-10-31'] # Train set\n","rtn_df_test=rtn_df.loc['2021-06-05':]  # Test set"],"metadata":{"id":"zHMuI1HzCrC5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 학습 데이터 생성"],"metadata":{"id":"rXzASH8oBFoU"}},{"cell_type":"code","source":["# Markowitz's Portfolio Network (MPN)을 이용해서 최적 포트폴리오를 구축한다.\n","#\n","# 1. 학습 데이터와 평가 데이터 생성 모듈.\n","#\n","# 참고 : https://blog.naver.com/chunjein/222492404960/\n","#        https://blog.naver.com/chunjein/222494724278\n","#        https://blog.naver.com/chunjein/222496640766\n","#\n","# 2021.08.27   blog.naver.com/chunjein (조성현)\n","# ------------------------------------------------------------------------\n","import pandas as pd\n","import numpy as np\n","import pickle\n","\n","\n","N_STOCKS = 7  # 포트폴리오를 구성할 주식 종목 개수\n","N_TIME = 20    # look back window size\n","N_FUTURE = 20  # 미래 20 기간의 최적 포트폴리오를 추정할 예정이다.\n","\n","\n","# 1. 학습과 performance-test에 사용할 데이터를 생성한다.\n","# --------------------------------------------------\n","# 수익률 sequence 데이터를 생성한다.\n","def make_sequence(x):\n","    T = N_TIME + N_FUTURE\n","    x_seq = np.expand_dims(np.array(x.iloc[0:T, :]), 0)\n","    \n","    for i in range(1, len(x) - T + 1):\n","        d = np.expand_dims(np.array(x.iloc[i:(i+T), :]), 0)\n","        x_seq = np.concatenate((x_seq, d))\n","        \n","    return x_seq\n","\n","# 학습 데이터와 시험 데이터를 생성한다. 시험 데이터는 향후 performance test용으로\n","# 사용한다. 학습 데이터 80%, 시험 데이터 20%\n","n = int(rtn_df.shape[0] * 0.9)\n","rtn_train = make_sequence(rtn_df_train)\n","rtn_test = make_sequence(rtn_df_test)   # 이 데이터는 학습에 사용하지 않는다.\n"," \n","print(\"# 수익률 sequence 데이터를 생성했습니다.\")\n","\n","# 2. 학습에 사용할 데이터를 생성한다.\n","# -------------------------------\n","# 다음 기간 (N_FUTURE 기간)을 학습/예측하도록 데이터를 구성한다.\n","xc_train = np.array([x[:N_TIME] for x in rtn_train])\n","xf_train = np.array([x[-N_FUTURE:] for x in rtn_train])\n","                     \n","xc_test = np.array([x[:N_TIME] for x in rtn_test])\n","xf_test = np.array([x[-N_FUTURE:] for x in rtn_test])\n","\n","# 4.performace_test.py에서 성과 차트를 그릴 때 x축 인덱스로 사용하기 위해\n","# xf_test[0][0] 위치부터 끝까지 날짜를 기록해 둔다.\n","test_date = rtn_df_test[N_TIME:].index\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y1khF2tqruF4","executionInfo":{"status":"ok","timestamp":1653033383218,"user_tz":-540,"elapsed":3160,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"3786c240-6c6d-4b7e-af0e-55e3c1ee6225"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["# 수익률 sequence 데이터를 생성했습니다.\n"]}]},{"cell_type":"markdown","source":["# 모델 학습"],"metadata":{"id":"7IXSKp4-BJiH"}},{"cell_type":"code","source":["# random seed 값 고정\n","np.random.seed(3)\n","tf.random.set_seed(3)"],"metadata":{"id":"YxmTk4eri2Ul","executionInfo":{"status":"ok","timestamp":1653033384652,"user_tz":-540,"elapsed":2,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["# 월간 수익률 정도의 스케일로 변환한다\n","xc_train = xc_train.astype('float32') *100\n","xf_train = xf_train.astype('float32') *100\n","xc_test = xc_test.astype('float32') *100\n","xf_test = xf_test.astype('float32') *100\n","\n","\n","N_TIME = xc_train.shape[1]\n","N_FUTURE = xf_train.shape[1]\n","N_STOCKS = xf_train.shape[2]\n","\n","# 학습 데이터는 shuffling 한다.\n","#xc_train, xf_train = shuffle(xc_train, xf_train)\n","\n","# Markowitz Network를 생성한다.\n","# over confidence를 제어할 조절 변수 정의\n","GAMMA_CONST = 0.09\n","REG_CONST = 0.0\n","SAVE_MODEL = 'data/3-1.MPN_LSTM.h5'\n","\n","# 최적 포트폴리오를 구축할 목표 함수를 정의한다.\n","# Markowitz Network에서는 이 함수를 loss로 이용한다. max(objective) = min(-objective)\n","# y_pred = 마코비츠 네트워크의 출력이 전달된다. (keras 내부 기능)\n","# y_true = model.fit()에서 전달된 N_FUTURE일 후의 수익률 (xf_train)이 들어온다.\n","def markowitz_objective(y_true, y_pred):\n","    W = y_pred      # 마코비츠 네트워크의 출력\n","    xf_rtn = y_true\n","    W = tf.expand_dims(W, axis = 1)   # W = (None, 1, 50)\n","    R = tf.expand_dims(tf.reduce_mean(xf_rtn, axis = 1), axis = 2) # R = (None, 50, 1)\n","    C = tfp.stats.covariance(xf_rtn, sample_axis=1)\n","\n","    rtn = tf.matmul(W, R)  \n","    vol = tf.matmul(W, tf.matmul(C, tf.transpose(W, perm = [0, 2, 1]))) * GAMMA_CONST\n","    reg = tf.reduce_sum(tf.square(W), axis = -1) * REG_CONST\n","    objective = rtn - vol - reg\n","    \n","    return -tf.reduce_sum(objective, axis=0)\n","\n","\n","lstm = LSTM( units = 7, # units의 값은 layer 통일이 제일 효과적이다.\n","             input_shape=(N_TIME, N_STOCKS),  #(4980, 20, 5)  --> (20,5),    \n","             dropout=0.0,\n","             recurrent_dropout=0.0,\n","             return_sequences=False\n","      )\n","model = Sequential()\n","model.add( lstm )\n","model.add( Dense(N_STOCKS, activation='tanh') )\n","model.add(Activation('softmax'))\n","\n","\n","# 마코비츠의 최적 weights\n","with tf.device(\"/device:GPU:0\"):\n","    #y_output = Activation('softmax')(y_output)\n","\n","    \n","    model.compile(loss = markowitz_objective, \n","                optimizer = Adam(learning_rate = 1e-5),\n","                )\n","    stop = EarlyStopping(patience=10, monitor='val_loss')\n","\n","    model.summary()\n","\n","    # MPN을 학습하고 결과를 저장한다.\n","    hist = model.fit(xc_train, xf_train, epochs=1000, batch_size = 64, \n","                     #callbacks=[stop],\n","                    validation_data = (xc_test, xf_test))\n","    #model.save(SAVE_MODEL)\n","\n","# loss trajectory를 확인한다.\n","plt.figure(figsize=(8, 5))\n","plt.plot(hist.history['loss'], label='Train loss')\n","plt.plot(hist.history['val_loss'], label='Test loss')\n","plt.legend()\n","plt.show()\n","\n","plt.figure(figsize=(8, 5))\n","plt.plot(np.negative(hist.history['loss']), label='Train loss')\n","plt.plot(np.negative(hist.history['val_loss']), label='Test loss')\n","plt.legend()\n","plt.show()\n","\n","# 최적 포트폴리오 결과 확인용 코드\n","def check_w(n = 0):\n","    plt.figure(figsize=(8, 4))\n","    y_pred = model.predict(xc_test[n].reshape(1, N_TIME, N_STOCKS))[0]\n","    plt.bar(np.arange(N_STOCKS), y_pred, alpha = 0.7)\n","    plt.show()\n","    \n","check_w(0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Yqg7w_M3Yr2Q","outputId":"713f9549-1b77-45da-cbbb-68fcfccaf87b","executionInfo":{"status":"ok","timestamp":1653033777408,"user_tz":-540,"elapsed":387367,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," lstm_1 (LSTM)               (None, 7)                 420       \n","                                                                 \n"," dense_1 (Dense)             (None, 7)                 56        \n","                                                                 \n"," activation_1 (Activation)   (None, 7)                 0         \n","                                                                 \n","=================================================================\n","Total params: 476\n","Trainable params: 476\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/1000\n","55/55 [==============================] - 5s 26ms/step - loss: 1.9811 - val_loss: 8.8204\n","Epoch 2/1000\n","55/55 [==============================] - 1s 9ms/step - loss: 1.9763 - val_loss: 8.8120\n","Epoch 3/1000\n","55/55 [==============================] - 1s 9ms/step - loss: 1.9744 - val_loss: 8.8031\n","Epoch 4/1000\n","55/55 [==============================] - 0s 8ms/step - loss: 1.9600 - val_loss: 8.7944\n","Epoch 5/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.9523 - val_loss: 8.7858\n","Epoch 6/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9492 - val_loss: 8.7772\n","Epoch 7/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.9317 - val_loss: 8.7687\n","Epoch 8/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9414 - val_loss: 8.7599\n","Epoch 9/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9367 - val_loss: 8.7513\n","Epoch 10/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9285 - val_loss: 8.7432\n","Epoch 11/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9206 - val_loss: 8.7346\n","Epoch 12/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9260 - val_loss: 8.7261\n","Epoch 13/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.9059 - val_loss: 8.7174\n","Epoch 14/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9090 - val_loss: 8.7089\n","Epoch 15/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8953 - val_loss: 8.7006\n","Epoch 16/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.9004 - val_loss: 8.6921\n","Epoch 17/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8866 - val_loss: 8.6837\n","Epoch 18/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8696 - val_loss: 8.6755\n","Epoch 19/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8845 - val_loss: 8.6670\n","Epoch 20/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8534 - val_loss: 8.6586\n","Epoch 21/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8736 - val_loss: 8.6502\n","Epoch 22/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8512 - val_loss: 8.6418\n","Epoch 23/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8580 - val_loss: 8.6334\n","Epoch 24/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8423 - val_loss: 8.6250\n","Epoch 25/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8516 - val_loss: 8.6165\n","Epoch 26/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8391 - val_loss: 8.6085\n","Epoch 27/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8372 - val_loss: 8.5999\n","Epoch 28/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8265 - val_loss: 8.5917\n","Epoch 29/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8187 - val_loss: 8.5833\n","Epoch 30/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8196 - val_loss: 8.5750\n","Epoch 31/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8109 - val_loss: 8.5666\n","Epoch 32/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8157 - val_loss: 8.5582\n","Epoch 33/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.8060 - val_loss: 8.5499\n","Epoch 34/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.8005 - val_loss: 8.5417\n","Epoch 35/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.7964 - val_loss: 8.5332\n","Epoch 36/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7875 - val_loss: 8.5248\n","Epoch 37/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7780 - val_loss: 8.5166\n","Epoch 38/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7820 - val_loss: 8.5084\n","Epoch 39/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7730 - val_loss: 8.4999\n","Epoch 40/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7554 - val_loss: 8.4917\n","Epoch 41/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.7617 - val_loss: 8.4832\n","Epoch 42/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.7474 - val_loss: 8.4750\n","Epoch 43/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7544 - val_loss: 8.4667\n","Epoch 44/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.7328 - val_loss: 8.4584\n","Epoch 45/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.7390 - val_loss: 8.4498\n","Epoch 46/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7407 - val_loss: 8.4417\n","Epoch 47/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.7259 - val_loss: 8.4331\n","Epoch 48/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.7250 - val_loss: 8.4246\n","Epoch 49/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7283 - val_loss: 8.4163\n","Epoch 50/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7019 - val_loss: 8.4083\n","Epoch 51/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7023 - val_loss: 8.4000\n","Epoch 52/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7048 - val_loss: 8.3914\n","Epoch 53/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.7039 - val_loss: 8.3832\n","Epoch 54/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6980 - val_loss: 8.3749\n","Epoch 55/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6894 - val_loss: 8.3664\n","Epoch 56/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6772 - val_loss: 8.3582\n","Epoch 57/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6773 - val_loss: 8.3498\n","Epoch 58/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6704 - val_loss: 8.3414\n","Epoch 59/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6711 - val_loss: 8.3332\n","Epoch 60/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6596 - val_loss: 8.3247\n","Epoch 61/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6568 - val_loss: 8.3162\n","Epoch 62/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6524 - val_loss: 8.3079\n","Epoch 63/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6490 - val_loss: 8.2994\n","Epoch 64/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6462 - val_loss: 8.2911\n","Epoch 65/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6357 - val_loss: 8.2826\n","Epoch 66/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6198 - val_loss: 8.2742\n","Epoch 67/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6332 - val_loss: 8.2659\n","Epoch 68/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6178 - val_loss: 8.2571\n","Epoch 69/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6277 - val_loss: 8.2486\n","Epoch 70/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6142 - val_loss: 8.2403\n","Epoch 71/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6125 - val_loss: 8.2319\n","Epoch 72/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.6049 - val_loss: 8.2234\n","Epoch 73/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.6025 - val_loss: 8.2147\n","Epoch 74/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5791 - val_loss: 8.2062\n","Epoch 75/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5917 - val_loss: 8.1977\n","Epoch 76/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5813 - val_loss: 8.1893\n","Epoch 77/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5790 - val_loss: 8.1808\n","Epoch 78/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5709 - val_loss: 8.1721\n","Epoch 79/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5617 - val_loss: 8.1636\n","Epoch 80/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5655 - val_loss: 8.1551\n","Epoch 81/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5576 - val_loss: 8.1468\n","Epoch 82/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5537 - val_loss: 8.1381\n","Epoch 83/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5511 - val_loss: 8.1293\n","Epoch 84/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5504 - val_loss: 8.1206\n","Epoch 85/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5382 - val_loss: 8.1123\n","Epoch 86/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5396 - val_loss: 8.1035\n","Epoch 87/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5339 - val_loss: 8.0947\n","Epoch 88/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5214 - val_loss: 8.0858\n","Epoch 89/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5070 - val_loss: 8.0776\n","Epoch 90/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4935 - val_loss: 8.0685\n","Epoch 91/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5010 - val_loss: 8.0597\n","Epoch 92/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.5104 - val_loss: 8.0509\n","Epoch 93/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.5067 - val_loss: 8.0422\n","Epoch 94/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4976 - val_loss: 8.0335\n","Epoch 95/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4868 - val_loss: 8.0248\n","Epoch 96/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4874 - val_loss: 8.0158\n","Epoch 97/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4782 - val_loss: 8.0070\n","Epoch 98/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4689 - val_loss: 7.9978\n","Epoch 99/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4723 - val_loss: 7.9894\n","Epoch 100/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4544 - val_loss: 7.9801\n","Epoch 101/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4622 - val_loss: 7.9714\n","Epoch 102/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4608 - val_loss: 7.9625\n","Epoch 103/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4524 - val_loss: 7.9533\n","Epoch 104/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4453 - val_loss: 7.9442\n","Epoch 105/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4469 - val_loss: 7.9349\n","Epoch 106/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4367 - val_loss: 7.9261\n","Epoch 107/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4210 - val_loss: 7.9171\n","Epoch 108/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4129 - val_loss: 7.9078\n","Epoch 109/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4248 - val_loss: 7.8984\n","Epoch 110/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.4172 - val_loss: 7.8894\n","Epoch 111/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4088 - val_loss: 7.8802\n","Epoch 112/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.4026 - val_loss: 7.8707\n","Epoch 113/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3962 - val_loss: 7.8619\n","Epoch 114/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3946 - val_loss: 7.8525\n","Epoch 115/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.3952 - val_loss: 7.8433\n","Epoch 116/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.3843 - val_loss: 7.8337\n","Epoch 117/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3857 - val_loss: 7.8242\n","Epoch 118/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3739 - val_loss: 7.8146\n","Epoch 119/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3719 - val_loss: 7.8054\n","Epoch 120/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.3733 - val_loss: 7.7959\n","Epoch 121/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.3718 - val_loss: 7.7863\n","Epoch 122/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3632 - val_loss: 7.7769\n","Epoch 123/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3577 - val_loss: 7.7670\n","Epoch 124/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3516 - val_loss: 7.7578\n","Epoch 125/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3394 - val_loss: 7.7480\n","Epoch 126/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3365 - val_loss: 7.7383\n","Epoch 127/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3300 - val_loss: 7.7288\n","Epoch 128/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3284 - val_loss: 7.7192\n","Epoch 129/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3213 - val_loss: 7.7091\n","Epoch 130/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3204 - val_loss: 7.6989\n","Epoch 131/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3108 - val_loss: 7.6897\n","Epoch 132/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.3024 - val_loss: 7.6795\n","Epoch 133/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2976 - val_loss: 7.6696\n","Epoch 134/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.3015 - val_loss: 7.6597\n","Epoch 135/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2935 - val_loss: 7.6497\n","Epoch 136/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2876 - val_loss: 7.6401\n","Epoch 137/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2894 - val_loss: 7.6297\n","Epoch 138/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2813 - val_loss: 7.6194\n","Epoch 139/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2669 - val_loss: 7.6099\n","Epoch 140/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2690 - val_loss: 7.5994\n","Epoch 141/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2574 - val_loss: 7.5891\n","Epoch 142/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2646 - val_loss: 7.5788\n","Epoch 143/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2620 - val_loss: 7.5684\n","Epoch 144/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2543 - val_loss: 7.5583\n","Epoch 145/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2450 - val_loss: 7.5478\n","Epoch 146/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2398 - val_loss: 7.5376\n","Epoch 147/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2328 - val_loss: 7.5269\n","Epoch 148/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2336 - val_loss: 7.5164\n","Epoch 149/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2274 - val_loss: 7.5059\n","Epoch 150/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2181 - val_loss: 7.4954\n","Epoch 151/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.2146 - val_loss: 7.4851\n","Epoch 152/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2193 - val_loss: 7.4741\n","Epoch 153/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2001 - val_loss: 7.4638\n","Epoch 154/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.2057 - val_loss: 7.4526\n","Epoch 155/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1981 - val_loss: 7.4422\n","Epoch 156/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1936 - val_loss: 7.4312\n","Epoch 157/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.1876 - val_loss: 7.4204\n","Epoch 158/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1848 - val_loss: 7.4093\n","Epoch 159/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1862 - val_loss: 7.3985\n","Epoch 160/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1662 - val_loss: 7.3878\n","Epoch 161/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1688 - val_loss: 7.3764\n","Epoch 162/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1654 - val_loss: 7.3653\n","Epoch 163/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1659 - val_loss: 7.3542\n","Epoch 164/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1561 - val_loss: 7.3432\n","Epoch 165/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1591 - val_loss: 7.3319\n","Epoch 166/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1485 - val_loss: 7.3209\n","Epoch 167/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1374 - val_loss: 7.3097\n","Epoch 168/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1331 - val_loss: 7.2984\n","Epoch 169/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.1207 - val_loss: 7.2870\n","Epoch 170/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.1220 - val_loss: 7.2759\n","Epoch 171/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.1142 - val_loss: 7.2641\n","Epoch 172/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.1123 - val_loss: 7.2529\n","Epoch 173/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.1129 - val_loss: 7.2413\n","Epoch 174/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.1062 - val_loss: 7.2294\n","Epoch 175/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0946 - val_loss: 7.2182\n","Epoch 176/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0832 - val_loss: 7.2071\n","Epoch 177/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.0774 - val_loss: 7.1950\n","Epoch 178/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0893 - val_loss: 7.1831\n","Epoch 179/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.0787 - val_loss: 7.1715\n","Epoch 180/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.0788 - val_loss: 7.1601\n","Epoch 181/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0738 - val_loss: 7.1482\n","Epoch 182/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.0520 - val_loss: 7.1365\n","Epoch 183/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0443 - val_loss: 7.1248\n","Epoch 184/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0465 - val_loss: 7.1130\n","Epoch 185/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0450 - val_loss: 7.1009\n","Epoch 186/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.0413 - val_loss: 7.0892\n","Epoch 187/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0353 - val_loss: 7.0768\n","Epoch 188/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0238 - val_loss: 7.0649\n","Epoch 189/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0278 - val_loss: 7.0527\n","Epoch 190/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0109 - val_loss: 7.0407\n","Epoch 191/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 1.0087 - val_loss: 7.0280\n","Epoch 192/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.0103 - val_loss: 7.0160\n","Epoch 193/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 1.0029 - val_loss: 7.0039\n","Epoch 194/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9967 - val_loss: 6.9916\n","Epoch 195/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.9970 - val_loss: 6.9793\n","Epoch 196/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.9902 - val_loss: 6.9668\n","Epoch 197/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9832 - val_loss: 6.9544\n","Epoch 198/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.9792 - val_loss: 6.9420\n","Epoch 199/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.9743 - val_loss: 6.9295\n","Epoch 200/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9590 - val_loss: 6.9166\n","Epoch 201/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9598 - val_loss: 6.9041\n","Epoch 202/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9585 - val_loss: 6.8913\n","Epoch 203/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9576 - val_loss: 6.8786\n","Epoch 204/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9493 - val_loss: 6.8660\n","Epoch 205/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.9478 - val_loss: 6.8532\n","Epoch 206/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9393 - val_loss: 6.8402\n","Epoch 207/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9300 - val_loss: 6.8273\n","Epoch 208/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.9200 - val_loss: 6.8142\n","Epoch 209/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9227 - val_loss: 6.8014\n","Epoch 210/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.9127 - val_loss: 6.7883\n","Epoch 211/1000\n","55/55 [==============================] - 1s 10ms/step - loss: 0.9133 - val_loss: 6.7755\n","Epoch 212/1000\n","55/55 [==============================] - 1s 10ms/step - loss: 0.9032 - val_loss: 6.7624\n","Epoch 213/1000\n","55/55 [==============================] - 0s 7ms/step - loss: 0.8989 - val_loss: 6.7489\n","Epoch 214/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8826 - val_loss: 6.7360\n","Epoch 215/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8884 - val_loss: 6.7227\n","Epoch 216/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.8776 - val_loss: 6.7091\n","Epoch 217/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8742 - val_loss: 6.6961\n","Epoch 218/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8769 - val_loss: 6.6822\n","Epoch 219/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8556 - val_loss: 6.6693\n","Epoch 220/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8637 - val_loss: 6.6554\n","Epoch 221/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8620 - val_loss: 6.6423\n","Epoch 222/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.8515 - val_loss: 6.6290\n","Epoch 223/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8411 - val_loss: 6.6150\n","Epoch 224/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8455 - val_loss: 6.6015\n","Epoch 225/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8310 - val_loss: 6.5877\n","Epoch 226/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.8248 - val_loss: 6.5744\n","Epoch 227/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.8208 - val_loss: 6.5603\n","Epoch 228/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8230 - val_loss: 6.5467\n","Epoch 229/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8160 - val_loss: 6.5329\n","Epoch 230/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8044 - val_loss: 6.5191\n","Epoch 231/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.8032 - val_loss: 6.5048\n","Epoch 232/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7924 - val_loss: 6.4913\n","Epoch 233/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7894 - val_loss: 6.4766\n","Epoch 234/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7869 - val_loss: 6.4628\n","Epoch 235/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7790 - val_loss: 6.4489\n","Epoch 236/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7865 - val_loss: 6.4341\n","Epoch 237/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.7748 - val_loss: 6.4206\n","Epoch 238/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.7717 - val_loss: 6.4060\n","Epoch 239/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7609 - val_loss: 6.3922\n","Epoch 240/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7479 - val_loss: 6.3779\n","Epoch 241/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7507 - val_loss: 6.3633\n","Epoch 242/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7445 - val_loss: 6.3492\n","Epoch 243/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7389 - val_loss: 6.3341\n","Epoch 244/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7320 - val_loss: 6.3204\n","Epoch 245/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7294 - val_loss: 6.3055\n","Epoch 246/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7153 - val_loss: 6.2909\n","Epoch 247/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7163 - val_loss: 6.2760\n","Epoch 248/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7173 - val_loss: 6.2614\n","Epoch 249/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.7074 - val_loss: 6.2470\n","Epoch 250/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6991 - val_loss: 6.2323\n","Epoch 251/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.6936 - val_loss: 6.2176\n","Epoch 252/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6908 - val_loss: 6.2027\n","Epoch 253/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6859 - val_loss: 6.1874\n","Epoch 254/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6706 - val_loss: 6.1728\n","Epoch 255/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6728 - val_loss: 6.1577\n","Epoch 256/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.6643 - val_loss: 6.1433\n","Epoch 257/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6620 - val_loss: 6.1282\n","Epoch 258/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6544 - val_loss: 6.1132\n","Epoch 259/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.6479 - val_loss: 6.0978\n","Epoch 260/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6434 - val_loss: 6.0831\n","Epoch 261/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6347 - val_loss: 6.0674\n","Epoch 262/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6313 - val_loss: 6.0524\n","Epoch 263/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6232 - val_loss: 6.0370\n","Epoch 264/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6269 - val_loss: 6.0215\n","Epoch 265/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6203 - val_loss: 6.0064\n","Epoch 266/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6085 - val_loss: 5.9910\n","Epoch 267/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.6079 - val_loss: 5.9753\n","Epoch 268/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5974 - val_loss: 5.9599\n","Epoch 269/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.6014 - val_loss: 5.9442\n","Epoch 270/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5945 - val_loss: 5.9283\n","Epoch 271/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5820 - val_loss: 5.9131\n","Epoch 272/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5760 - val_loss: 5.8977\n","Epoch 273/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5686 - val_loss: 5.8819\n","Epoch 274/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5621 - val_loss: 5.8660\n","Epoch 275/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.5602 - val_loss: 5.8501\n","Epoch 276/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5624 - val_loss: 5.8340\n","Epoch 277/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5459 - val_loss: 5.8184\n","Epoch 278/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5463 - val_loss: 5.8023\n","Epoch 279/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5398 - val_loss: 5.7866\n","Epoch 280/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5376 - val_loss: 5.7707\n","Epoch 281/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5392 - val_loss: 5.7549\n","Epoch 282/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5240 - val_loss: 5.7382\n","Epoch 283/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5223 - val_loss: 5.7224\n","Epoch 284/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5152 - val_loss: 5.7067\n","Epoch 285/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5134 - val_loss: 5.6898\n","Epoch 286/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.5072 - val_loss: 5.6732\n","Epoch 287/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4985 - val_loss: 5.6578\n","Epoch 288/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4985 - val_loss: 5.6414\n","Epoch 289/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4929 - val_loss: 5.6245\n","Epoch 290/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4834 - val_loss: 5.6086\n","Epoch 291/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.4863 - val_loss: 5.5917\n","Epoch 292/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4780 - val_loss: 5.5755\n","Epoch 293/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4659 - val_loss: 5.5592\n","Epoch 294/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4600 - val_loss: 5.5429\n","Epoch 295/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4616 - val_loss: 5.5265\n","Epoch 296/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4617 - val_loss: 5.5101\n","Epoch 297/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4436 - val_loss: 5.4934\n","Epoch 298/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4454 - val_loss: 5.4768\n","Epoch 299/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4341 - val_loss: 5.4601\n","Epoch 300/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4320 - val_loss: 5.4437\n","Epoch 301/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4286 - val_loss: 5.4269\n","Epoch 302/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4212 - val_loss: 5.4102\n","Epoch 303/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4153 - val_loss: 5.3938\n","Epoch 304/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4100 - val_loss: 5.3767\n","Epoch 305/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.4098 - val_loss: 5.3601\n","Epoch 306/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.4025 - val_loss: 5.3438\n","Epoch 307/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3846 - val_loss: 5.3269\n","Epoch 308/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3976 - val_loss: 5.3101\n","Epoch 309/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3823 - val_loss: 5.2930\n","Epoch 310/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3743 - val_loss: 5.2762\n","Epoch 311/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3782 - val_loss: 5.2596\n","Epoch 312/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.3719 - val_loss: 5.2425\n","Epoch 313/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3636 - val_loss: 5.2260\n","Epoch 314/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3555 - val_loss: 5.2092\n","Epoch 315/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3566 - val_loss: 5.1922\n","Epoch 316/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3503 - val_loss: 5.1754\n","Epoch 317/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3468 - val_loss: 5.1589\n","Epoch 318/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3420 - val_loss: 5.1421\n","Epoch 319/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3359 - val_loss: 5.1247\n","Epoch 320/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3229 - val_loss: 5.1086\n","Epoch 321/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3267 - val_loss: 5.0911\n","Epoch 322/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3217 - val_loss: 5.0742\n","Epoch 323/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3052 - val_loss: 5.0578\n","Epoch 324/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3106 - val_loss: 5.0402\n","Epoch 325/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2985 - val_loss: 5.0240\n","Epoch 326/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.3054 - val_loss: 5.0069\n","Epoch 327/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2987 - val_loss: 4.9898\n","Epoch 328/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2848 - val_loss: 4.9736\n","Epoch 329/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2840 - val_loss: 4.9565\n","Epoch 330/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2843 - val_loss: 4.9392\n","Epoch 331/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2821 - val_loss: 4.9223\n","Epoch 332/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2635 - val_loss: 4.9060\n","Epoch 333/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2702 - val_loss: 4.8887\n","Epoch 334/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2699 - val_loss: 4.8716\n","Epoch 335/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2611 - val_loss: 4.8553\n","Epoch 336/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2488 - val_loss: 4.8378\n","Epoch 337/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2550 - val_loss: 4.8211\n","Epoch 338/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2398 - val_loss: 4.8046\n","Epoch 339/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2359 - val_loss: 4.7878\n","Epoch 340/1000\n","55/55 [==============================] - 0s 5ms/step - loss: 0.2365 - val_loss: 4.7712\n","Epoch 341/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2365 - val_loss: 4.7540\n","Epoch 342/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2320 - val_loss: 4.7370\n","Epoch 343/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2234 - val_loss: 4.7204\n","Epoch 344/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2219 - val_loss: 4.7031\n","Epoch 345/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2102 - val_loss: 4.6869\n","Epoch 346/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2081 - val_loss: 4.6705\n","Epoch 347/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2043 - val_loss: 4.6532\n","Epoch 348/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.2017 - val_loss: 4.6367\n","Epoch 349/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1931 - val_loss: 4.6201\n","Epoch 350/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1957 - val_loss: 4.6033\n","Epoch 351/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1941 - val_loss: 4.5869\n","Epoch 352/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1896 - val_loss: 4.5696\n","Epoch 353/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1832 - val_loss: 4.5540\n","Epoch 354/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1787 - val_loss: 4.5377\n","Epoch 355/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1750 - val_loss: 4.5209\n","Epoch 356/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1635 - val_loss: 4.5047\n","Epoch 357/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1665 - val_loss: 4.4885\n","Epoch 358/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1564 - val_loss: 4.4720\n","Epoch 359/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1556 - val_loss: 4.4555\n","Epoch 360/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1536 - val_loss: 4.4391\n","Epoch 361/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1441 - val_loss: 4.4230\n","Epoch 362/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1476 - val_loss: 4.4070\n","Epoch 363/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1390 - val_loss: 4.3912\n","Epoch 364/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1390 - val_loss: 4.3748\n","Epoch 365/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1340 - val_loss: 4.3591\n","Epoch 366/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1264 - val_loss: 4.3430\n","Epoch 367/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1150 - val_loss: 4.3274\n","Epoch 368/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1221 - val_loss: 4.3109\n","Epoch 369/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1154 - val_loss: 4.2957\n","Epoch 370/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1079 - val_loss: 4.2795\n","Epoch 371/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1069 - val_loss: 4.2638\n","Epoch 372/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0973 - val_loss: 4.2488\n","Epoch 373/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0972 - val_loss: 4.2332\n","Epoch 374/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.1005 - val_loss: 4.2164\n","Epoch 375/1000\n","55/55 [==============================] - 0s 7ms/step - loss: 0.0912 - val_loss: 4.2015\n","Epoch 376/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0899 - val_loss: 4.1862\n","Epoch 377/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0828 - val_loss: 4.1716\n","Epoch 378/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0795 - val_loss: 4.1554\n","Epoch 379/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0768 - val_loss: 4.1403\n","Epoch 380/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0730 - val_loss: 4.1253\n","Epoch 381/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0671 - val_loss: 4.1096\n","Epoch 382/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0619 - val_loss: 4.0951\n","Epoch 383/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0616 - val_loss: 4.0798\n","Epoch 384/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0585 - val_loss: 4.0646\n","Epoch 385/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0529 - val_loss: 4.0498\n","Epoch 386/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0523 - val_loss: 4.0346\n","Epoch 387/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0478 - val_loss: 4.0199\n","Epoch 388/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0461 - val_loss: 4.0052\n","Epoch 389/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0426 - val_loss: 3.9902\n","Epoch 390/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0420 - val_loss: 3.9760\n","Epoch 391/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0355 - val_loss: 3.9607\n","Epoch 392/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0308 - val_loss: 3.9463\n","Epoch 393/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0275 - val_loss: 3.9319\n","Epoch 394/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0195 - val_loss: 3.9177\n","Epoch 395/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0061 - val_loss: 3.9027\n","Epoch 396/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0128 - val_loss: 3.8890\n","Epoch 397/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0132 - val_loss: 3.8744\n","Epoch 398/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0086 - val_loss: 3.8599\n","Epoch 399/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0045 - val_loss: 3.8464\n","Epoch 400/1000\n","55/55 [==============================] - 0s 6ms/step - loss: 0.0062 - val_loss: 3.8318\n","Epoch 401/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0035 - val_loss: 3.8186\n","Epoch 402/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -7.2103e-04 - val_loss: 3.8044\n","Epoch 403/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0056 - val_loss: 3.7904\n","Epoch 404/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0095 - val_loss: 3.7771\n","Epoch 405/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0158 - val_loss: 3.7627\n","Epoch 406/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0166 - val_loss: 3.7494\n","Epoch 407/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0192 - val_loss: 3.7356\n","Epoch 408/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0259 - val_loss: 3.7227\n","Epoch 409/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0279 - val_loss: 3.7092\n","Epoch 410/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0315 - val_loss: 3.6952\n","Epoch 411/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0314 - val_loss: 3.6819\n","Epoch 412/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0395 - val_loss: 3.6691\n","Epoch 413/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0436 - val_loss: 3.6560\n","Epoch 414/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0398 - val_loss: 3.6431\n","Epoch 415/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0464 - val_loss: 3.6295\n","Epoch 416/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0473 - val_loss: 3.6168\n","Epoch 417/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0529 - val_loss: 3.6038\n","Epoch 418/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0499 - val_loss: 3.5908\n","Epoch 419/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0593 - val_loss: 3.5787\n","Epoch 420/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0590 - val_loss: 3.5657\n","Epoch 421/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0618 - val_loss: 3.5536\n","Epoch 422/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0633 - val_loss: 3.5407\n","Epoch 423/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0755 - val_loss: 3.5282\n","Epoch 424/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0702 - val_loss: 3.5158\n","Epoch 425/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0769 - val_loss: 3.5036\n","Epoch 426/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0771 - val_loss: 3.4917\n","Epoch 427/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0836 - val_loss: 3.4791\n","Epoch 428/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0858 - val_loss: 3.4670\n","Epoch 429/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0876 - val_loss: 3.4551\n","Epoch 430/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0899 - val_loss: 3.4432\n","Epoch 431/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0960 - val_loss: 3.4314\n","Epoch 432/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0962 - val_loss: 3.4190\n","Epoch 433/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.0998 - val_loss: 3.4072\n","Epoch 434/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1041 - val_loss: 3.3954\n","Epoch 435/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1046 - val_loss: 3.3844\n","Epoch 436/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1028 - val_loss: 3.3729\n","Epoch 437/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1077 - val_loss: 3.3607\n","Epoch 438/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1119 - val_loss: 3.3496\n","Epoch 439/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1152 - val_loss: 3.3381\n","Epoch 440/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1182 - val_loss: 3.3268\n","Epoch 441/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1239 - val_loss: 3.3161\n","Epoch 442/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1246 - val_loss: 3.3041\n","Epoch 443/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1240 - val_loss: 3.2926\n","Epoch 444/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1339 - val_loss: 3.2824\n","Epoch 445/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1382 - val_loss: 3.2713\n","Epoch 446/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1357 - val_loss: 3.2609\n","Epoch 447/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1436 - val_loss: 3.2497\n","Epoch 448/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1376 - val_loss: 3.2392\n","Epoch 449/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1405 - val_loss: 3.2286\n","Epoch 450/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1423 - val_loss: 3.2181\n","Epoch 451/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1545 - val_loss: 3.2076\n","Epoch 452/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1550 - val_loss: 3.1969\n","Epoch 453/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1514 - val_loss: 3.1869\n","Epoch 454/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1560 - val_loss: 3.1764\n","Epoch 455/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1604 - val_loss: 3.1667\n","Epoch 456/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1617 - val_loss: 3.1564\n","Epoch 457/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1642 - val_loss: 3.1458\n","Epoch 458/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1653 - val_loss: 3.1364\n","Epoch 459/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1671 - val_loss: 3.1262\n","Epoch 460/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1730 - val_loss: 3.1164\n","Epoch 461/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1774 - val_loss: 3.1067\n","Epoch 462/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1719 - val_loss: 3.0965\n","Epoch 463/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1759 - val_loss: 3.0878\n","Epoch 464/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1756 - val_loss: 3.0776\n","Epoch 465/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.1802 - val_loss: 3.0682\n","Epoch 466/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.1860 - val_loss: 3.0588\n","Epoch 467/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1883 - val_loss: 3.0495\n","Epoch 468/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1903 - val_loss: 3.0399\n","Epoch 469/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1985 - val_loss: 3.0308\n","Epoch 470/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1948 - val_loss: 3.0220\n","Epoch 471/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1962 - val_loss: 3.0125\n","Epoch 472/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.1988 - val_loss: 3.0031\n","Epoch 473/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2030 - val_loss: 2.9945\n","Epoch 474/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2088 - val_loss: 2.9858\n","Epoch 475/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2045 - val_loss: 2.9762\n","Epoch 476/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2088 - val_loss: 2.9678\n","Epoch 477/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2119 - val_loss: 2.9592\n","Epoch 478/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2111 - val_loss: 2.9507\n","Epoch 479/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2100 - val_loss: 2.9424\n","Epoch 480/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2178 - val_loss: 2.9337\n","Epoch 481/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2288 - val_loss: 2.9254\n","Epoch 482/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2209 - val_loss: 2.9163\n","Epoch 483/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2310 - val_loss: 2.9082\n","Epoch 484/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2249 - val_loss: 2.9001\n","Epoch 485/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2305 - val_loss: 2.8923\n","Epoch 486/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2336 - val_loss: 2.8836\n","Epoch 487/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2310 - val_loss: 2.8759\n","Epoch 488/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2370 - val_loss: 2.8678\n","Epoch 489/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2367 - val_loss: 2.8601\n","Epoch 490/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2438 - val_loss: 2.8516\n","Epoch 491/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2437 - val_loss: 2.8437\n","Epoch 492/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2482 - val_loss: 2.8359\n","Epoch 493/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2466 - val_loss: 2.8283\n","Epoch 494/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2479 - val_loss: 2.8208\n","Epoch 495/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2480 - val_loss: 2.8133\n","Epoch 496/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2496 - val_loss: 2.8056\n","Epoch 497/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2566 - val_loss: 2.7976\n","Epoch 498/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2523 - val_loss: 2.7905\n","Epoch 499/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2600 - val_loss: 2.7837\n","Epoch 500/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2614 - val_loss: 2.7764\n","Epoch 501/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2559 - val_loss: 2.7689\n","Epoch 502/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2637 - val_loss: 2.7616\n","Epoch 503/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2668 - val_loss: 2.7545\n","Epoch 504/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2681 - val_loss: 2.7472\n","Epoch 505/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2676 - val_loss: 2.7407\n","Epoch 506/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2671 - val_loss: 2.7335\n","Epoch 507/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2732 - val_loss: 2.7269\n","Epoch 508/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2744 - val_loss: 2.7197\n","Epoch 509/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2745 - val_loss: 2.7128\n","Epoch 510/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2784 - val_loss: 2.7058\n","Epoch 511/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2818 - val_loss: 2.6993\n","Epoch 512/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2888 - val_loss: 2.6929\n","Epoch 513/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2855 - val_loss: 2.6859\n","Epoch 514/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2855 - val_loss: 2.6793\n","Epoch 515/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2892 - val_loss: 2.6735\n","Epoch 516/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2979 - val_loss: 2.6667\n","Epoch 517/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2922 - val_loss: 2.6606\n","Epoch 518/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2934 - val_loss: 2.6541\n","Epoch 519/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.2980 - val_loss: 2.6478\n","Epoch 520/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2942 - val_loss: 2.6414\n","Epoch 521/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.2999 - val_loss: 2.6355\n","Epoch 522/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3007 - val_loss: 2.6294\n","Epoch 523/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3046 - val_loss: 2.6233\n","Epoch 524/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3061 - val_loss: 2.6172\n","Epoch 525/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.3099 - val_loss: 2.6107\n","Epoch 526/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3067 - val_loss: 2.6053\n","Epoch 527/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3032 - val_loss: 2.5991\n","Epoch 528/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3156 - val_loss: 2.5935\n","Epoch 529/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3166 - val_loss: 2.5878\n","Epoch 530/1000\n","55/55 [==============================] - 1s 9ms/step - loss: -0.3160 - val_loss: 2.5819\n","Epoch 531/1000\n","55/55 [==============================] - 1s 13ms/step - loss: -0.3198 - val_loss: 2.5762\n","Epoch 532/1000\n","55/55 [==============================] - 0s 9ms/step - loss: -0.3201 - val_loss: 2.5707\n","Epoch 533/1000\n","55/55 [==============================] - 1s 10ms/step - loss: -0.3195 - val_loss: 2.5645\n","Epoch 534/1000\n","55/55 [==============================] - 1s 12ms/step - loss: -0.3258 - val_loss: 2.5591\n","Epoch 535/1000\n","55/55 [==============================] - 0s 8ms/step - loss: -0.3247 - val_loss: 2.5542\n","Epoch 536/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3266 - val_loss: 2.5482\n","Epoch 537/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3219 - val_loss: 2.5423\n","Epoch 538/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3300 - val_loss: 2.5376\n","Epoch 539/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3296 - val_loss: 2.5321\n","Epoch 540/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3328 - val_loss: 2.5269\n","Epoch 541/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3347 - val_loss: 2.5219\n","Epoch 542/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3365 - val_loss: 2.5161\n","Epoch 543/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3368 - val_loss: 2.5113\n","Epoch 544/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3414 - val_loss: 2.5062\n","Epoch 545/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3402 - val_loss: 2.5010\n","Epoch 546/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3404 - val_loss: 2.4958\n","Epoch 547/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3461 - val_loss: 2.4909\n","Epoch 548/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3418 - val_loss: 2.4858\n","Epoch 549/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3468 - val_loss: 2.4814\n","Epoch 550/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.3493 - val_loss: 2.4761\n","Epoch 551/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3552 - val_loss: 2.4716\n","Epoch 552/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3476 - val_loss: 2.4662\n","Epoch 553/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3535 - val_loss: 2.4615\n","Epoch 554/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3522 - val_loss: 2.4573\n","Epoch 555/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3541 - val_loss: 2.4527\n","Epoch 556/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.3508 - val_loss: 2.4474\n","Epoch 557/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3672 - val_loss: 2.4434\n","Epoch 558/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3619 - val_loss: 2.4389\n","Epoch 559/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3625 - val_loss: 2.4342\n","Epoch 560/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3608 - val_loss: 2.4297\n","Epoch 561/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3682 - val_loss: 2.4249\n","Epoch 562/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3671 - val_loss: 2.4211\n","Epoch 563/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3665 - val_loss: 2.4162\n","Epoch 564/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3709 - val_loss: 2.4121\n","Epoch 565/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3719 - val_loss: 2.4077\n","Epoch 566/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3735 - val_loss: 2.4037\n","Epoch 567/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3714 - val_loss: 2.3989\n","Epoch 568/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3720 - val_loss: 2.3946\n","Epoch 569/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3753 - val_loss: 2.3908\n","Epoch 570/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3779 - val_loss: 2.3865\n","Epoch 571/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3815 - val_loss: 2.3820\n","Epoch 572/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3763 - val_loss: 2.3781\n","Epoch 573/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3819 - val_loss: 2.3742\n","Epoch 574/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3837 - val_loss: 2.3703\n","Epoch 575/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3834 - val_loss: 2.3661\n","Epoch 576/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3842 - val_loss: 2.3620\n","Epoch 577/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3886 - val_loss: 2.3583\n","Epoch 578/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3884 - val_loss: 2.3543\n","Epoch 579/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3942 - val_loss: 2.3504\n","Epoch 580/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3909 - val_loss: 2.3465\n","Epoch 581/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3950 - val_loss: 2.3429\n","Epoch 582/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.3941 - val_loss: 2.3390\n","Epoch 583/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3954 - val_loss: 2.3353\n","Epoch 584/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3951 - val_loss: 2.3314\n","Epoch 585/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3982 - val_loss: 2.3280\n","Epoch 586/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.3979 - val_loss: 2.3241\n","Epoch 587/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4026 - val_loss: 2.3204\n","Epoch 588/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4049 - val_loss: 2.3170\n","Epoch 589/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4048 - val_loss: 2.3132\n","Epoch 590/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4014 - val_loss: 2.3097\n","Epoch 591/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4088 - val_loss: 2.3062\n","Epoch 592/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4057 - val_loss: 2.3026\n","Epoch 593/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4052 - val_loss: 2.2991\n","Epoch 594/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4056 - val_loss: 2.2964\n","Epoch 595/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4101 - val_loss: 2.2925\n","Epoch 596/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4100 - val_loss: 2.2888\n","Epoch 597/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4152 - val_loss: 2.2858\n","Epoch 598/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4116 - val_loss: 2.2821\n","Epoch 599/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4149 - val_loss: 2.2792\n","Epoch 600/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4171 - val_loss: 2.2757\n","Epoch 601/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4143 - val_loss: 2.2728\n","Epoch 602/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4183 - val_loss: 2.2692\n","Epoch 603/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4160 - val_loss: 2.2666\n","Epoch 604/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4160 - val_loss: 2.2631\n","Epoch 605/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4184 - val_loss: 2.2597\n","Epoch 606/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4203 - val_loss: 2.2565\n","Epoch 607/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4255 - val_loss: 2.2537\n","Epoch 608/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4239 - val_loss: 2.2506\n","Epoch 609/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4256 - val_loss: 2.2478\n","Epoch 610/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4315 - val_loss: 2.2447\n","Epoch 611/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4290 - val_loss: 2.2413\n","Epoch 612/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4276 - val_loss: 2.2382\n","Epoch 613/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4331 - val_loss: 2.2354\n","Epoch 614/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4298 - val_loss: 2.2324\n","Epoch 615/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4331 - val_loss: 2.2296\n","Epoch 616/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4326 - val_loss: 2.2271\n","Epoch 617/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4322 - val_loss: 2.2241\n","Epoch 618/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4398 - val_loss: 2.2213\n","Epoch 619/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4407 - val_loss: 2.2183\n","Epoch 620/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4375 - val_loss: 2.2154\n","Epoch 621/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4384 - val_loss: 2.2129\n","Epoch 622/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4427 - val_loss: 2.2097\n","Epoch 623/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4384 - val_loss: 2.2073\n","Epoch 624/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4445 - val_loss: 2.2042\n","Epoch 625/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4419 - val_loss: 2.2017\n","Epoch 626/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4434 - val_loss: 2.1991\n","Epoch 627/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4439 - val_loss: 2.1965\n","Epoch 628/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4449 - val_loss: 2.1938\n","Epoch 629/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4558 - val_loss: 2.1909\n","Epoch 630/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4452 - val_loss: 2.1887\n","Epoch 631/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4453 - val_loss: 2.1859\n","Epoch 632/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4486 - val_loss: 2.1832\n","Epoch 633/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4535 - val_loss: 2.1811\n","Epoch 634/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4518 - val_loss: 2.1783\n","Epoch 635/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4580 - val_loss: 2.1757\n","Epoch 636/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4533 - val_loss: 2.1734\n","Epoch 637/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4535 - val_loss: 2.1711\n","Epoch 638/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4588 - val_loss: 2.1682\n","Epoch 639/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4594 - val_loss: 2.1660\n","Epoch 640/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4513 - val_loss: 2.1637\n","Epoch 641/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4591 - val_loss: 2.1614\n","Epoch 642/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4556 - val_loss: 2.1586\n","Epoch 643/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4613 - val_loss: 2.1567\n","Epoch 644/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4597 - val_loss: 2.1544\n","Epoch 645/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4604 - val_loss: 2.1517\n","Epoch 646/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4620 - val_loss: 2.1498\n","Epoch 647/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4632 - val_loss: 2.1474\n","Epoch 648/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4640 - val_loss: 2.1452\n","Epoch 649/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4673 - val_loss: 2.1428\n","Epoch 650/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4654 - val_loss: 2.1405\n","Epoch 651/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4648 - val_loss: 2.1387\n","Epoch 652/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4676 - val_loss: 2.1364\n","Epoch 653/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4660 - val_loss: 2.1341\n","Epoch 654/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4682 - val_loss: 2.1318\n","Epoch 655/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4757 - val_loss: 2.1298\n","Epoch 656/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4723 - val_loss: 2.1275\n","Epoch 657/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4778 - val_loss: 2.1254\n","Epoch 658/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4737 - val_loss: 2.1236\n","Epoch 659/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4731 - val_loss: 2.1215\n","Epoch 660/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4729 - val_loss: 2.1195\n","Epoch 661/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4752 - val_loss: 2.1177\n","Epoch 662/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4792 - val_loss: 2.1153\n","Epoch 663/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4718 - val_loss: 2.1135\n","Epoch 664/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4777 - val_loss: 2.1115\n","Epoch 665/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4809 - val_loss: 2.1094\n","Epoch 666/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4791 - val_loss: 2.1073\n","Epoch 667/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4788 - val_loss: 2.1054\n","Epoch 668/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4811 - val_loss: 2.1038\n","Epoch 669/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4821 - val_loss: 2.1015\n","Epoch 670/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4834 - val_loss: 2.0993\n","Epoch 671/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4831 - val_loss: 2.0973\n","Epoch 672/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4846 - val_loss: 2.0958\n","Epoch 673/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4849 - val_loss: 2.0939\n","Epoch 674/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4866 - val_loss: 2.0923\n","Epoch 675/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4861 - val_loss: 2.0906\n","Epoch 676/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4860 - val_loss: 2.0882\n","Epoch 677/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4922 - val_loss: 2.0867\n","Epoch 678/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4859 - val_loss: 2.0849\n","Epoch 679/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4883 - val_loss: 2.0832\n","Epoch 680/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4931 - val_loss: 2.0813\n","Epoch 681/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4956 - val_loss: 2.0797\n","Epoch 682/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4936 - val_loss: 2.0777\n","Epoch 683/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4973 - val_loss: 2.0760\n","Epoch 684/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4948 - val_loss: 2.0742\n","Epoch 685/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4940 - val_loss: 2.0725\n","Epoch 686/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4970 - val_loss: 2.0707\n","Epoch 687/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4996 - val_loss: 2.0692\n","Epoch 688/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4972 - val_loss: 2.0679\n","Epoch 689/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.4992 - val_loss: 2.0659\n","Epoch 690/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5007 - val_loss: 2.0643\n","Epoch 691/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5015 - val_loss: 2.0625\n","Epoch 692/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5017 - val_loss: 2.0610\n","Epoch 693/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.4984 - val_loss: 2.0595\n","Epoch 694/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5009 - val_loss: 2.0579\n","Epoch 695/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5015 - val_loss: 2.0564\n","Epoch 696/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5061 - val_loss: 2.0545\n","Epoch 697/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5029 - val_loss: 2.0531\n","Epoch 698/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5030 - val_loss: 2.0514\n","Epoch 699/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5052 - val_loss: 2.0497\n","Epoch 700/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5090 - val_loss: 2.0487\n","Epoch 701/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5072 - val_loss: 2.0471\n","Epoch 702/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5084 - val_loss: 2.0455\n","Epoch 703/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5137 - val_loss: 2.0442\n","Epoch 704/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5112 - val_loss: 2.0423\n","Epoch 705/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5080 - val_loss: 2.0412\n","Epoch 706/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5152 - val_loss: 2.0398\n","Epoch 707/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5133 - val_loss: 2.0382\n","Epoch 708/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5173 - val_loss: 2.0365\n","Epoch 709/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5108 - val_loss: 2.0353\n","Epoch 710/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5194 - val_loss: 2.0340\n","Epoch 711/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5141 - val_loss: 2.0325\n","Epoch 712/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5176 - val_loss: 2.0313\n","Epoch 713/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5158 - val_loss: 2.0298\n","Epoch 714/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5194 - val_loss: 2.0285\n","Epoch 715/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5205 - val_loss: 2.0273\n","Epoch 716/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5201 - val_loss: 2.0257\n","Epoch 717/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5187 - val_loss: 2.0245\n","Epoch 718/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5195 - val_loss: 2.0233\n","Epoch 719/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5170 - val_loss: 2.0220\n","Epoch 720/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5228 - val_loss: 2.0205\n","Epoch 721/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5219 - val_loss: 2.0194\n","Epoch 722/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5192 - val_loss: 2.0182\n","Epoch 723/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5240 - val_loss: 2.0169\n","Epoch 724/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5228 - val_loss: 2.0155\n","Epoch 725/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5226 - val_loss: 2.0144\n","Epoch 726/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5217 - val_loss: 2.0132\n","Epoch 727/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5243 - val_loss: 2.0120\n","Epoch 728/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5250 - val_loss: 2.0106\n","Epoch 729/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5248 - val_loss: 2.0097\n","Epoch 730/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5272 - val_loss: 2.0084\n","Epoch 731/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5294 - val_loss: 2.0070\n","Epoch 732/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5310 - val_loss: 2.0058\n","Epoch 733/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5307 - val_loss: 2.0049\n","Epoch 734/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5291 - val_loss: 2.0039\n","Epoch 735/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5269 - val_loss: 2.0029\n","Epoch 736/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5288 - val_loss: 2.0013\n","Epoch 737/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5279 - val_loss: 2.0004\n","Epoch 738/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5336 - val_loss: 1.9993\n","Epoch 739/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5292 - val_loss: 1.9979\n","Epoch 740/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5344 - val_loss: 1.9970\n","Epoch 741/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5357 - val_loss: 1.9961\n","Epoch 742/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5375 - val_loss: 1.9950\n","Epoch 743/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5339 - val_loss: 1.9937\n","Epoch 744/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5370 - val_loss: 1.9928\n","Epoch 745/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5363 - val_loss: 1.9922\n","Epoch 746/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5386 - val_loss: 1.9905\n","Epoch 747/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5388 - val_loss: 1.9898\n","Epoch 748/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5381 - val_loss: 1.9889\n","Epoch 749/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5369 - val_loss: 1.9878\n","Epoch 750/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5380 - val_loss: 1.9867\n","Epoch 751/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5373 - val_loss: 1.9856\n","Epoch 752/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5392 - val_loss: 1.9847\n","Epoch 753/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5377 - val_loss: 1.9837\n","Epoch 754/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5413 - val_loss: 1.9827\n","Epoch 755/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5404 - val_loss: 1.9819\n","Epoch 756/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5431 - val_loss: 1.9811\n","Epoch 757/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5398 - val_loss: 1.9801\n","Epoch 758/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5437 - val_loss: 1.9791\n","Epoch 759/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5440 - val_loss: 1.9780\n","Epoch 760/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5464 - val_loss: 1.9774\n","Epoch 761/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5476 - val_loss: 1.9764\n","Epoch 762/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5480 - val_loss: 1.9754\n","Epoch 763/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5460 - val_loss: 1.9745\n","Epoch 764/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5476 - val_loss: 1.9734\n","Epoch 765/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5438 - val_loss: 1.9726\n","Epoch 766/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5496 - val_loss: 1.9719\n","Epoch 767/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5476 - val_loss: 1.9712\n","Epoch 768/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5499 - val_loss: 1.9702\n","Epoch 769/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5473 - val_loss: 1.9694\n","Epoch 770/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5514 - val_loss: 1.9687\n","Epoch 771/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5492 - val_loss: 1.9678\n","Epoch 772/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5518 - val_loss: 1.9669\n","Epoch 773/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5501 - val_loss: 1.9661\n","Epoch 774/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5544 - val_loss: 1.9653\n","Epoch 775/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5494 - val_loss: 1.9643\n","Epoch 776/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5535 - val_loss: 1.9634\n","Epoch 777/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5540 - val_loss: 1.9630\n","Epoch 778/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5567 - val_loss: 1.9622\n","Epoch 779/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5543 - val_loss: 1.9610\n","Epoch 780/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5559 - val_loss: 1.9603\n","Epoch 781/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5546 - val_loss: 1.9599\n","Epoch 782/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5575 - val_loss: 1.9591\n","Epoch 783/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5579 - val_loss: 1.9586\n","Epoch 784/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5573 - val_loss: 1.9574\n","Epoch 785/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5576 - val_loss: 1.9569\n","Epoch 786/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5591 - val_loss: 1.9562\n","Epoch 787/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5572 - val_loss: 1.9553\n","Epoch 788/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5652 - val_loss: 1.9549\n","Epoch 789/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5604 - val_loss: 1.9542\n","Epoch 790/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5602 - val_loss: 1.9533\n","Epoch 791/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5596 - val_loss: 1.9527\n","Epoch 792/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5687 - val_loss: 1.9522\n","Epoch 793/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5623 - val_loss: 1.9516\n","Epoch 794/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5670 - val_loss: 1.9508\n","Epoch 795/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5618 - val_loss: 1.9503\n","Epoch 796/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5644 - val_loss: 1.9495\n","Epoch 797/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5681 - val_loss: 1.9493\n","Epoch 798/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5671 - val_loss: 1.9484\n","Epoch 799/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5664 - val_loss: 1.9477\n","Epoch 800/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5672 - val_loss: 1.9471\n","Epoch 801/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5645 - val_loss: 1.9467\n","Epoch 802/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5677 - val_loss: 1.9459\n","Epoch 803/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5693 - val_loss: 1.9456\n","Epoch 804/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5688 - val_loss: 1.9447\n","Epoch 805/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5724 - val_loss: 1.9439\n","Epoch 806/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5711 - val_loss: 1.9435\n","Epoch 807/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5720 - val_loss: 1.9430\n","Epoch 808/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5688 - val_loss: 1.9421\n","Epoch 809/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5701 - val_loss: 1.9414\n","Epoch 810/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5737 - val_loss: 1.9414\n","Epoch 811/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5719 - val_loss: 1.9408\n","Epoch 812/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5723 - val_loss: 1.9401\n","Epoch 813/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5775 - val_loss: 1.9394\n","Epoch 814/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5723 - val_loss: 1.9392\n","Epoch 815/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5732 - val_loss: 1.9388\n","Epoch 816/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5771 - val_loss: 1.9380\n","Epoch 817/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5763 - val_loss: 1.9375\n","Epoch 818/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5760 - val_loss: 1.9368\n","Epoch 819/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5770 - val_loss: 1.9362\n","Epoch 820/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5757 - val_loss: 1.9360\n","Epoch 821/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5786 - val_loss: 1.9354\n","Epoch 822/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5748 - val_loss: 1.9351\n","Epoch 823/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5784 - val_loss: 1.9342\n","Epoch 824/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5789 - val_loss: 1.9340\n","Epoch 825/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5816 - val_loss: 1.9335\n","Epoch 826/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5793 - val_loss: 1.9328\n","Epoch 827/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5804 - val_loss: 1.9323\n","Epoch 828/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5820 - val_loss: 1.9319\n","Epoch 829/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5763 - val_loss: 1.9315\n","Epoch 830/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5805 - val_loss: 1.9310\n","Epoch 831/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5870 - val_loss: 1.9308\n","Epoch 832/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5805 - val_loss: 1.9303\n","Epoch 833/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5830 - val_loss: 1.9298\n","Epoch 834/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5835 - val_loss: 1.9294\n","Epoch 835/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5819 - val_loss: 1.9287\n","Epoch 836/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5815 - val_loss: 1.9283\n","Epoch 837/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5835 - val_loss: 1.9279\n","Epoch 838/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5905 - val_loss: 1.9272\n","Epoch 839/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5869 - val_loss: 1.9269\n","Epoch 840/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5876 - val_loss: 1.9264\n","Epoch 841/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5867 - val_loss: 1.9260\n","Epoch 842/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5856 - val_loss: 1.9257\n","Epoch 843/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5851 - val_loss: 1.9253\n","Epoch 844/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5896 - val_loss: 1.9248\n","Epoch 845/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5893 - val_loss: 1.9242\n","Epoch 846/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5953 - val_loss: 1.9241\n","Epoch 847/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5896 - val_loss: 1.9236\n","Epoch 848/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5920 - val_loss: 1.9230\n","Epoch 849/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5952 - val_loss: 1.9229\n","Epoch 850/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5937 - val_loss: 1.9226\n","Epoch 851/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5941 - val_loss: 1.9221\n","Epoch 852/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5951 - val_loss: 1.9214\n","Epoch 853/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5914 - val_loss: 1.9212\n","Epoch 854/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5944 - val_loss: 1.9208\n","Epoch 855/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5927 - val_loss: 1.9204\n","Epoch 856/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5946 - val_loss: 1.9201\n","Epoch 857/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5934 - val_loss: 1.9198\n","Epoch 858/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5987 - val_loss: 1.9192\n","Epoch 859/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5993 - val_loss: 1.9187\n","Epoch 860/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5999 - val_loss: 1.9185\n","Epoch 861/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6002 - val_loss: 1.9183\n","Epoch 862/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5983 - val_loss: 1.9175\n","Epoch 863/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5959 - val_loss: 1.9171\n","Epoch 864/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6000 - val_loss: 1.9169\n","Epoch 865/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.5976 - val_loss: 1.9165\n","Epoch 866/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.5984 - val_loss: 1.9163\n","Epoch 867/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6013 - val_loss: 1.9158\n","Epoch 868/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6010 - val_loss: 1.9153\n","Epoch 869/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6047 - val_loss: 1.9150\n","Epoch 870/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6004 - val_loss: 1.9148\n","Epoch 871/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6039 - val_loss: 1.9143\n","Epoch 872/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6049 - val_loss: 1.9139\n","Epoch 873/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6033 - val_loss: 1.9136\n","Epoch 874/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6037 - val_loss: 1.9132\n","Epoch 875/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6037 - val_loss: 1.9132\n","Epoch 876/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6082 - val_loss: 1.9125\n","Epoch 877/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6042 - val_loss: 1.9126\n","Epoch 878/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6043 - val_loss: 1.9120\n","Epoch 879/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6062 - val_loss: 1.9119\n","Epoch 880/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6089 - val_loss: 1.9118\n","Epoch 881/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6093 - val_loss: 1.9115\n","Epoch 882/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6079 - val_loss: 1.9107\n","Epoch 883/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6081 - val_loss: 1.9101\n","Epoch 884/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6097 - val_loss: 1.9103\n","Epoch 885/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6086 - val_loss: 1.9101\n","Epoch 886/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6078 - val_loss: 1.9095\n","Epoch 887/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6119 - val_loss: 1.9093\n","Epoch 888/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6117 - val_loss: 1.9089\n","Epoch 889/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6122 - val_loss: 1.9086\n","Epoch 890/1000\n","55/55 [==============================] - 0s 8ms/step - loss: -0.6122 - val_loss: 1.9085\n","Epoch 891/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6176 - val_loss: 1.9081\n","Epoch 892/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6141 - val_loss: 1.9078\n","Epoch 893/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6112 - val_loss: 1.9077\n","Epoch 894/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6140 - val_loss: 1.9071\n","Epoch 895/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6169 - val_loss: 1.9069\n","Epoch 896/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6165 - val_loss: 1.9068\n","Epoch 897/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6190 - val_loss: 1.9064\n","Epoch 898/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6164 - val_loss: 1.9062\n","Epoch 899/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6185 - val_loss: 1.9058\n","Epoch 900/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6181 - val_loss: 1.9056\n","Epoch 901/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6210 - val_loss: 1.9054\n","Epoch 902/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6200 - val_loss: 1.9050\n","Epoch 903/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6177 - val_loss: 1.9049\n","Epoch 904/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6216 - val_loss: 1.9045\n","Epoch 905/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6183 - val_loss: 1.9043\n","Epoch 906/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6199 - val_loss: 1.9042\n","Epoch 907/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6232 - val_loss: 1.9038\n","Epoch 908/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6228 - val_loss: 1.9038\n","Epoch 909/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6234 - val_loss: 1.9032\n","Epoch 910/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6240 - val_loss: 1.9029\n","Epoch 911/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6256 - val_loss: 1.9032\n","Epoch 912/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6256 - val_loss: 1.9027\n","Epoch 913/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6233 - val_loss: 1.9026\n","Epoch 914/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6211 - val_loss: 1.9021\n","Epoch 915/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6276 - val_loss: 1.9021\n","Epoch 916/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6250 - val_loss: 1.9020\n","Epoch 917/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6237 - val_loss: 1.9016\n","Epoch 918/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6302 - val_loss: 1.9014\n","Epoch 919/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6282 - val_loss: 1.9011\n","Epoch 920/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6279 - val_loss: 1.9009\n","Epoch 921/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6291 - val_loss: 1.9008\n","Epoch 922/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6285 - val_loss: 1.9005\n","Epoch 923/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6274 - val_loss: 1.9007\n","Epoch 924/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6316 - val_loss: 1.8999\n","Epoch 925/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6310 - val_loss: 1.9000\n","Epoch 926/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6324 - val_loss: 1.9000\n","Epoch 927/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6303 - val_loss: 1.8995\n","Epoch 928/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6328 - val_loss: 1.8994\n","Epoch 929/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6312 - val_loss: 1.8993\n","Epoch 930/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6329 - val_loss: 1.8988\n","Epoch 931/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6378 - val_loss: 1.8990\n","Epoch 932/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6316 - val_loss: 1.8985\n","Epoch 933/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6369 - val_loss: 1.8987\n","Epoch 934/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6339 - val_loss: 1.8983\n","Epoch 935/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6334 - val_loss: 1.8983\n","Epoch 936/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6367 - val_loss: 1.8978\n","Epoch 937/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6368 - val_loss: 1.8976\n","Epoch 938/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6391 - val_loss: 1.8975\n","Epoch 939/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6350 - val_loss: 1.8979\n","Epoch 940/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6356 - val_loss: 1.8974\n","Epoch 941/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6364 - val_loss: 1.8972\n","Epoch 942/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6387 - val_loss: 1.8967\n","Epoch 943/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6371 - val_loss: 1.8965\n","Epoch 944/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6375 - val_loss: 1.8967\n","Epoch 945/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6405 - val_loss: 1.8963\n","Epoch 946/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6425 - val_loss: 1.8960\n","Epoch 947/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6455 - val_loss: 1.8962\n","Epoch 948/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6434 - val_loss: 1.8959\n","Epoch 949/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6444 - val_loss: 1.8956\n","Epoch 950/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6428 - val_loss: 1.8955\n","Epoch 951/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6423 - val_loss: 1.8954\n","Epoch 952/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6471 - val_loss: 1.8949\n","Epoch 953/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6430 - val_loss: 1.8948\n","Epoch 954/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6447 - val_loss: 1.8949\n","Epoch 955/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6486 - val_loss: 1.8947\n","Epoch 956/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6442 - val_loss: 1.8947\n","Epoch 957/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6438 - val_loss: 1.8941\n","Epoch 958/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6518 - val_loss: 1.8942\n","Epoch 959/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6463 - val_loss: 1.8942\n","Epoch 960/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6463 - val_loss: 1.8940\n","Epoch 961/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6455 - val_loss: 1.8936\n","Epoch 962/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6487 - val_loss: 1.8936\n","Epoch 963/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6503 - val_loss: 1.8933\n","Epoch 964/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6507 - val_loss: 1.8929\n","Epoch 965/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6491 - val_loss: 1.8928\n","Epoch 966/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6496 - val_loss: 1.8926\n","Epoch 967/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6536 - val_loss: 1.8928\n","Epoch 968/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6527 - val_loss: 1.8925\n","Epoch 969/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6488 - val_loss: 1.8919\n","Epoch 970/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6515 - val_loss: 1.8918\n","Epoch 971/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6526 - val_loss: 1.8918\n","Epoch 972/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6554 - val_loss: 1.8917\n","Epoch 973/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6555 - val_loss: 1.8913\n","Epoch 974/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6552 - val_loss: 1.8911\n","Epoch 975/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6547 - val_loss: 1.8911\n","Epoch 976/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6563 - val_loss: 1.8909\n","Epoch 977/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6559 - val_loss: 1.8907\n","Epoch 978/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6546 - val_loss: 1.8904\n","Epoch 979/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6547 - val_loss: 1.8904\n","Epoch 980/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6578 - val_loss: 1.8900\n","Epoch 981/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6557 - val_loss: 1.8897\n","Epoch 982/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6583 - val_loss: 1.8895\n","Epoch 983/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6585 - val_loss: 1.8894\n","Epoch 984/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6614 - val_loss: 1.8893\n","Epoch 985/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6608 - val_loss: 1.8890\n","Epoch 986/1000\n","55/55 [==============================] - 0s 6ms/step - loss: -0.6595 - val_loss: 1.8886\n","Epoch 987/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6607 - val_loss: 1.8884\n","Epoch 988/1000\n","55/55 [==============================] - 0s 8ms/step - loss: -0.6622 - val_loss: 1.8882\n","Epoch 989/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6626 - val_loss: 1.8883\n","Epoch 990/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6632 - val_loss: 1.8880\n","Epoch 991/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6704 - val_loss: 1.8876\n","Epoch 992/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6631 - val_loss: 1.8876\n","Epoch 993/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6616 - val_loss: 1.8874\n","Epoch 994/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6652 - val_loss: 1.8872\n","Epoch 995/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6702 - val_loss: 1.8867\n","Epoch 996/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6662 - val_loss: 1.8868\n","Epoch 997/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6673 - val_loss: 1.8866\n","Epoch 998/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6644 - val_loss: 1.8864\n","Epoch 999/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6656 - val_loss: 1.8861\n","Epoch 1000/1000\n","55/55 [==============================] - 0s 7ms/step - loss: -0.6662 - val_loss: 1.8863\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAegAAAD4CAYAAAAn8XUjAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAR8ElEQVR4nO3df6zdd13H8efLts5a6IV0FxLEbjJxyLZsCXdmVpCbzpDY4OI/pmbLCBaoGBtIME4DiRkm84J/zISI4JUmDVCBFROydEGLJeO2dKO7mOkKjChhy5Boek03mg7WjL3943yrZ3d33NPee3o+Pff5SG52P7/O3p9s7avfH/fTVBWSJKktPzXqAiRJ0gsZ0JIkNciAliSpQQa0JEkNMqAlSWrQ+lEX0O/yyy+vK6+8ctRlSJJ0UXz9619fqKrJpcaaCugrr7yS+fn5UZchSdJFkeTxFxvzFrckSQ0yoCVJapABLUlSgwxoSZIaZEBLktQgA1qSpAYZ0JIkNciAliSpQQa0JEkNGugksSR7gNuAAH9VVZ/rG9sKfAx4Ob3A/0hV/X2SaWAf8Fg39T+q6p2rVvkA3rHvoYv5r1t1e99+46hLkCSNyLIBneQqYBdwE3AZcDzJoao61U3ZALy7qp5I8lLg20k+043tq6o7h1C3JEljbZBb3NuBe6vqbFWdBuaAbecGq+o7VfVE13w1cLKqqmvfluRoki8meeOqVi5J0hgb5Bb3JLDQ117o+p4nyaeAHcDbuq65qnptN3YdcDDJ9VX15KJ1u4HdAFu3bj3vDUiSNI4GCegzwERfewI4tXhSVd2eZAswl+Rfq+p7fWOPJDkBvAb4l0XrZoFZgKmpqUIXzGfukjQ+BrnFfRjYkWRdko3ANDCfZDNAkuu7Z88Ap4GzwEuSXJNkfTfnCnrh/Ohqb0CSpHG07BV0VZ1IchA4BhRwN72Q3gncQu8lsc904b0J+HRVPZrkd4C9SZ7pPmpXVT09hD1IkjR2Bvoxq6qaAWYWde/vxuaBty6x5gBwYKUFSpK0FnlQiSRJDTKgJUlqkAEtSVKDDGhJkhpkQEuS1CADWpKkBhnQkiQ1yICWJKlBBrQkSQ0yoCVJapABLUlSgwxoSZIaZEBLktQgA1qSpAYZ0JIkNciAliSpQQa0JEkNMqAlSWqQAS1JUoMMaEmSGmRAS5LUoIECOsmeJA8keTDJzkVjW5Pcl+RYN35r178hyWySI0nmklw7jA1IkjSO1i83IclVwC7gJuAy4HiSQ1V1qpuyAXh3VT2R5KXAt5N8BrgdeLaq3pTkBmAW2DaUXUiSNGYGuYLeDtxbVWer6jQwR1/QVtV3quqJrvlq4GRVFXAzcE8352FgS5JNq1q9JEljapCAngQW+toLXd/zJPkUcBR4/3mu251kPsn8yZMnB61bkqSxNkhAnwEm+toTwKnFk6rqduCXgL9M8urzWDdbVVNVNTU5+YL8liRpTRokoA8DO5KsS7IRmAbmk2wGSHJ99+wZ4DRwFnhJt+6Wbs7V9J5HP7XK9UuSNJaWfUmsqk4kOQgcAwq4m15I76QXwBuAz3ThvQn4dFU9muRxYG+SI0CAdw1nC5IkjZ9lAxqgqmaAmUXd+7uxeeCtS6z5IXDrSguUJGkt8qASSZIaZEBLktQgA1qSpAYZ0JIkNciAliSpQQa0JEkNMqAlSWqQAS1JUoMMaEmSGmRAS5LUIANakqQGGdCSJDXIgJYkqUEGtCRJDTKgJUlqkAEtSVKDDGhJkhpkQEuS1CADWpKkBhnQkiQ1yICWJKlBAwV0kj1JHkjyYJKdi8Ymk+xP8rUk80n2dP3TSR5Lcn/39YlhbECSpHG0frkJSa4CdgE3AZcBx5McqqpT3ZRXADNVdSLJRuC7ST7aje2rqjuHULckSWNtkCvo7cC9VXW2qk4Dc8C2c4NV9Y2qOtE1twDfq6rq2rclOZrki0neuKqVS5I0xpa9ggYmgYW+9kLX9zxJNgGfBN7Zdc1V1Wu7seuAg0mur6onF63bDewG2Lp163lvQJKkcTTIFfQZYKKvPQGc6p+Q5KXA54EPVtXDAFX13LnxqnoEOAG8ZvGHV9VsVU1V1dTk5AtyX5KkNWmQgD4M7EiyrnvGPA3MJ9kMkGQC+ALw4ar6yrlFSa5Jsr77/gp64fzoKtcvSdJYWvYWd/fy10HgGFDA3fRCeidwC/AB4HXAnUnOLbsNeD2wN8kzXd+uqnp6VauXJGlMDfIMmqqaAWYWde/vxu4A7lhi2YHuS5IknScPKpEkqUEGtCRJDTKgJUlqkAEtSVKDDGhJkhpkQEuS1CADWpKkBhnQkiQ1yICWJKlBBrQkSQ0yoCVJapABLUlSgwxoSZIaZEBLktQgA1qSpAYZ0JIkNciAliSpQQa0JEkNMqAlSWqQAS1JUoMMaEmSGmRAS5LUoIECOsmeJA8keTDJzkVjk0n2J/lakvkke7r+DUlmkxxJMpfk2mFsQJKkcbR+uQlJrgJ2ATcBlwHHkxyqqlPdlFcAM1V1IslG4LtJPgrcDjxbVW9KcgMwC2wbyi4kSRozg1xBbwfuraqzVXUamKMvaKvqG1V1omtuAb5XVQXcDNzTzXkY2JJk0+IPT7K7u/KeP3ny5Aq3I0nSeBgkoCeBhb72Qtf3PF34fhJ45/msq6rZqpqqqqnJyRcMS5K0Jg0S0GeAib72BHCqf0KSlwKfBz7YXS0PtE6SJC1tkIA+DOxIsq57xjwNzCfZDJBkAvgC8OGq+sqidbd0c66m9zz6qdUsXpKkcbXsS2Ldy18HgWNAAXfTC+md9AL4A8DrgDuTnFt2G7AX2JvkCBDgXatdvCRJ42rZgAaoqhlgZlH3/m7sDuCOF1l664WXJknS2uVBJZIkNciAliSpQQa0JEkNMqAlSWqQAS1JUoMMaEmSGmRAS5LUIANakqQGGdCSJDXIgJYkqUEGtCRJDTKgJUlqkAEtSVKDDGhJkhpkQEuS1CADWpKkBhnQkiQ1yICWJKlBBrQkSQ0yoCVJapABLUlSgwYK6CR7kjyQ5MEkO5cYvzHJt5J8qK9vOsljSe7vvj6xmoVLkjTO1i83IclVwC7gJuAy4HiSQ1V1qm/aG4CPAa9atHxfVd25SrVKkrRmDHIFvR24t6rOVtVpYA7Y1j+hqj4O/GCJtbclOZrki0neuNSHJ9mdZD7J/MmTJ8+3fkmSxtKyV9DAJLDQ117o+pYzV1WvBUhyHXAwyfVV9WT/pKqaBWYBpqamaqCqJUkac4NcQZ8BJvraE8CpF5n7f6rqub7vHwFOAK853wIlSVqLBgnow8COJOuSbASmgfkkm3/SoiTXJFnffX8FvXB+dIX1SpK0Jix7i7uqTiQ5CBwDCribXkjvBG75CUtfD+xN8kzX3lVVT6+sXEmS1oZBnkFTVTPAzKLu/Yvm7FvUPgAcWElxkiStVR5UIklSgwxoSZIaZEBLktQgA1qSpAYZ0JIkNciAliSpQQa0JEkNMqAlSWqQAS1JUoMMaEmSGmRAS5LUIANakqQGGdCSJDXIgJYkqUEGtCRJDTKgJUlqkAEtSVKDDGhJkhpkQEuS1CADWpKkBhnQkiQ1aKCATrInyQNJHkyyc4nxG5N8K8mH+vo2JJlNciTJXJJrV7NwSZLG2frlJiS5CtgF3ARcBhxPcqiqTvVNewPwMeBVfX23A89W1ZuS3ADMAttWrXJJksbYIFfQ24F7q+psVZ0G5lgUtFX1ceAHi9bdDNzTjT8MbEmyafGHJ9mdZD7J/MmTJy9kD5IkjZ1BAnoSWOhrL3R9q7KuqmaraqqqpiYnB/lYSZLG3yABfQaY6GtPAKdeZO5qrJMkac0bJKAPAzuSrEuyEZgG5pNsHmDdLQBJrqb3PPqplRQrSdJasexLYlV1IslB4BhQwN30QnonXQC/iL3A3iRHgADvWnG1kiStEcsGNEBVzQAzi7r3L5qzb1H7h8CtKylOkqS1yoNKJElqkAEtSVKDDGhJkhpkQEuS1CADWpKkBhnQkiQ1yICWJKlBA/0ctKTRese+h0ZdworsffuNoy5BuuR4BS1JUoMMaEmSGmRAS5LUIANakqQGGdCSJDXIgJYkqUEGtCRJDTKgJUlqkAeV6JJ1KR/e4cEdkpbjFbQkSQ0yoCVJapABLUlSgwxoSZIaNFBAJ9mT5IEkDybZucT4XUmOdXOmu77pJI8lub/7+sQq1y5J0tha9i3uJFcBu4CbgMuA40kOVdWpbnw7cENVbUvyKuDLSa7tlu+rqjuHU7okjQd/IkFLGeTHrLYD91bVWeBskjlgG3BfN34zcACgqr6f5HHg6m7stiS/AZwG7qqqo6tavaSxdCkHFhhaP4n/bQc3SEBPAgt97YWur3/8gSXG56rqtQBJrgMOJrm+qp7s//Aku4HdAFu3bj3vDUiSNI4GeQZ9Bpjoa08Ap5Ybr6rnznVU1SPACeA1iz+8qmaraqqqpiYnJxcPS5K0Jg0S0IeBHUnWJdkITAPzSTb3jd8CkORyere3v53kmiTru/4r6IXzo6tcvyRJY2nZW9xVdSLJQeAYUMDd9EJ6J71gvg94S5Jj9AL/vVX1oySvB/Ymeab7qF1V9fQQ9iBJ0tgZ6CzuqpoBZhZ17+/GCnjPEmsO0L08JkmSzo8HlUiS1CADWpKkBhnQkiQ1yICWJKlBBrQkSQ0yoCVJapABLUlSgwxoSZIaZEBLktQgA1qSpAYZ0JIkNciAliSpQQa0JEkNMqAlSWqQAS1JUoMMaEmSGmRAS5LUIANakqQGGdCSJDXIgJYkqUEGtCRJDRoooJPsSfJAkgeT7Fxi/K4kx7o5013fhiSzSY4kmUty7SrXLknS2Fq/3IQkVwG7gJuAy4DjSQ5V1alufDtwQ1VtS/Iq4MtdGN8OPFtVb0pyAzALbBvWRiRJGieDXEFvB+6tqrNVdRqY4/lBezNwAKCqvg88Dlzd9d/T9T8MbEmyaRVrlyRpbKWqfvKE5P3AD6rqr7v2XcC/V9W+rj1LL8APdu39wN8B7wfeV1Unuv6vArdV1WOLPn83sLtrXg18e1V2dnFcDiyMuoiLaC3tdy3tFdzvuFtL+73U9npFVU0uNbDsLW7gDDDR154ATg0wvtw6AKpqlt7t70tOkvmqmhp1HRfLWtrvWtoruN9xt5b2O057HeQW92FgR5J1STYC08B8ks1947cAJLmc/78K7u+/mt7z6KdWt3xJksbTslfQVXUiyUHgGFDA3fRCeie9AL4PeEuSY/QC/71V9aMke4G9SY4AAd41nC1IkjR+BrnFTVXNADOLuvd3YwW8Z4k1PwRuXWmBjbskb82vwFra71raK7jfcbeW9js2e132JTFJknTxeZKYJEkNMqAlSWqQAX2Bljv+dJwkubo7yvWzo65l2JJsSvI3SY4neSjJX4y6pmFK8rIk9/T9v/y+Udc0bOn5UpJ9o65l2JI8meT+vq+XjLqmYUpyRZLD3e9XR5P8zKhrWgmfQV+A7vjTA/QdfwpsO3f86bhJ8jbgLPDbVfW7o65nmJL8HPALVXU0yU8B3wLeXFX/NeLShiLJK4EtVfXNJOvp7fdXq+pSOujhvCT5Q+AXgZdX1dtHXM5QJbm/qqZHXcfFkGQd8FXg96rqW0nWVdWPR13XSngFfWGWO/50rFTVJ4GxDKjFquo/q+po19xE7w8mT46wpKGqqv+uqm92zUngWXqHDI2lJFcCO4CPjLaSi+aa7i8rmkvyjlEXM2S/Se8Mjru6kyv/YMT1rNhAP2alF5jk+UfJLXR9GhPdn8Y/CfxxVf1o1PUMW5IP0Tty90+6H5EcO0lCL5jfQ+9Mh7XglVX1XJItwH1JHquqw6MuakheB/wyvb8H4jlgLslcVf3baMu6cF5BX5iBjjHVpSnJBuDTwGer6h9HXc/FUFV/Cvw88LYkvzLqeobk3cA/VdV3Rl3IxVJVz3X//B/gH4DrR1vRUP2Y3p3N01V1BvhnLvH9GtAXZqnjT7822pK0GpL8NPBZer/QPzfqeoatewHw3N2fp4GngJePsKRhuhH49e5lx48Db07yZyOuaWi6F6Ze1n2/Efgt4Mhoqxqqo8B09/vyeuDXgEdGXNOKeIv7Aix1/Om4vkS0Br2T3h+4tiT5/a7vj6rq66MraaieBf42yQTws/R+kzs02pKGo6p2nfs+yTTw9qr689FVNHSbgX3d45oNwCeq6qER1zQ0VfVQki8B88Az9O6APTzislbEt7glSWqQt7glSWqQAS1JUoMMaEmSGmRAS5LUIANakqQGGdCSJDXIgJYkqUEGtCRJDfpfSB/XNhtDetUAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# 백테스팅"],"metadata":{"id":"pmLV1BAiBPPB"}},{"cell_type":"code","source":["import os\n","os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n","\n","# Markowitz's Portfolio Network (MPN)을 이용해서 최적 포트폴리오를 구축한다.\n","import numpy as np\n","import pandas as pd\n","import pickle\n","import matplotlib.pyplot as plt\n","from tensorflow.keras.models import load_model\n","\n","\n","N_TIME = xc_test.shape[1]\n","N_FUTURE = xf_test.shape[1]\n","N_STOCKS = xf_test.shape[2]\n","\n","# 저장된 모델을 가져온다.\n","lstm_model = model\n","\n","# MPN을 이용해서 백 테스트를 수행한다.\n","# --------------------------------\n","lstm_value = [10000]   # portfolio의 초기 value\n","crp_value = [10000]   # CRP의 초기 value\n","w_crp = np.ones(N_STOCKS) / N_STOCKS   # CRP 비율 (균등 비율)\n","\n","w_hist_lstm = []\n","for i in range(0, xc_test.shape[0], N_FUTURE):\n","    # LSTM으로 W를 추정한다.\n","    x = xc_test[i][np.newaxis,:, :]\n","    w_lstm = lstm_model.predict(x)[0]\n","    w_hist_lstm.append(w_lstm)\n","    \n","    # 다음 기의 누적 수익률\n","    m_rtn = np.sum(xf_test[i]/100, axis = 0)\n","    \n","    # 누적 수익률과 w_prt (W)로 포트폴리오의 수익률을 계산한다.\n","    lstm_value.append(lstm_value[-1] * np.exp(np.dot(w_lstm, m_rtn)))\n","    crp_value.append(crp_value[-1] * np.exp(np.dot(w_crp, m_rtn)))\n","    \n","\n","print('\\nBack test를 완료했습니다.')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_NiqJc5xut8o","executionInfo":{"status":"ok","timestamp":1653033784704,"user_tz":-540,"elapsed":409,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"fa534ae2-6812-420d-d37e-d13df367d075"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Back test를 완료했습니다.\n"]}]},{"cell_type":"markdown","source":["# 포트폴리오 성과 평가"],"metadata":{"id":"9UIA48BWBSxO"}},{"cell_type":"code","source":["# 평가 시점의 날짜를 발췌한다.\n","idx = np.arange(0, len(test_date), N_FUTURE)\n","\n","# Markowitz 성과와 CRP 성과를 데이터 프레임에 기록해 둔다.\n","perf_df = pd.DataFrame({'crp':crp_value, \n","                        'lstm_markowitz':lstm_value\n","                        }, \n","                       index=test_date[idx])\n","\n","# S&P500 index와 포트폴리오 성과를 비교해 본다.\n","sp500 = pd.DataFrame(df3['코스피'])\n","\n","# 수익률을 계산해서 perf_df와 시작 위치를 맞춘다 (초기 value를 맞춘다).\n","sp500 = sp500[test_date[0]:]\n","sp_trans = lstm_value[0] / sp500['코스피'][0]\n","perf_df['kospi'] = sp500['코스피'] * sp_trans\n","\n","# S&P500 index (시장), CRP, 그리고 MPN의 성과를 비교한다.\n","p = perf_df.plot(figsize=(12, 7), style = '-o', fontsize=12)\n","p.legend(fontsize=12)\n","##그래프저장\n","plt.show()\n","\n","# weights history를 확인한다.\n","w_hist_lstm = np.array(w_hist_lstm)\n","\n","# 종목 이름을 읽어온다.\n","symbol = rtn_df.columns\n","\n","n = 7\n","plt.figure(figsize=(12, 4))\n","for i in range(n):\n","    plt.plot(w_hist_lstm[:, i], label=symbol[i])\n","plt.legend(loc='upper left')\n","plt.title('W history by LSTM')\n","plt.xticks(np.arange(0, 31), list(perf_df.index[1:]), rotation='vertical')\n","plt.show()\n","\n","# 포트폴리오 수익률, 위험, SR을 측정한다.\n","rp_df = perf_df.copy()\n","rp_df['crp_rtn'] = np.log(rp_df['crp']) - np.log(rp_df['crp'].shift(1))\n","rp_df['lstm_rtn'] = np.log(rp_df['lstm_markowitz']) - np.log(rp_df['lstm_markowitz'].shift(1))\n","rp_df['sp500_rtn'] = np.log(rp_df['kospi']) - np.log(rp_df['kospi'].shift(1))\n","rp_df = rp_df.dropna()\n","\n","# 포트폴리오 수익률 (연간)\n","rp = rp_df[['crp_rtn', 'lstm_rtn', 'sp500_rtn']].mean()\n","# 20일 = 약 1개월, 1년 = 12개월\n","rp*=12\n","print('\\n포트폴리오 수익률 (연간):')\n","print(rp)\n","\n","# 포트폴리오 위험 (연간 표준편차)\n","sp = rp_df[['crp_rtn', 'lstm_rtn', 'sp500_rtn']].std()\n","print('\\n포트폴리오 위험 (연간):')\n","print(sp)\n","\n","# Sharp ratio\n","print('\\nSharp Ratio :')\n","print(rp / sp)\n","\n","# 최적 포트폴리오 결과 확인용 코드 (참고용)\n","def check_w(n = 0):\n","    plt.figure(figsize=(14,5))\n","    x = xc_test[n][np.newaxis,:,:] * 20.0\n","    w_lstm = lstm_model.predict(x)[0]\n","    plt.bar(np.arange(N_STOCKS), w_lstm, alpha = 0.7)\n","    plt.xticks(np.arange(7), list(symbol), rotation='vertical')\n","    plt.title('W by LSTM')\n","    plt.show()\n","    \n","check_w(0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"naVGBd18uuh5","executionInfo":{"status":"ok","timestamp":1653033788376,"user_tz":-540,"elapsed":702,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"1e73b427-5fb6-46fd-fcce-76a8d74cf4c1"},"execution_count":34,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","포트폴리오 수익률 (연간):\n","crp_rtn     -0.370602\n","lstm_rtn    -0.129507\n","sp500_rtn   -0.454447\n","dtype: float64\n","\n","포트폴리오 위험 (연간):\n","crp_rtn      0.101395\n","lstm_rtn     0.039610\n","sp500_rtn    0.116896\n","dtype: float64\n","\n","Sharp Ratio :\n","crp_rtn     -3.655015\n","lstm_rtn    -3.269524\n","sp500_rtn   -3.887605\n","dtype: float64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1008x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## 가중치 DF 저장 (일자별)"],"metadata":{"id":"9Zb9tHKgA3nz"}},{"cell_type":"code","source":["w_hist_lstm = []\n","for i in range(0, xc_test.shape[0]):\n","    # LSTM으로 W를 추정한다.\n","    x = xc_test[i][np.newaxis,:, :]\n","    w_lstm = lstm_model.predict(x)[0]\n","    w_hist_lstm.append(w_lstm)\n"],"metadata":{"id":"TDJTia3vBRsq","executionInfo":{"status":"ok","timestamp":1653033797613,"user_tz":-540,"elapsed":4864,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["idx = np.arange(0, len(test_date))\n","date=test_date[idx]"],"metadata":{"id":"4u9dXy-iC71b","executionInfo":{"status":"ok","timestamp":1653033800451,"user_tz":-540,"elapsed":402,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["len(w_hist_lstm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"705O4nBqepTk","executionInfo":{"status":"ok","timestamp":1653033801884,"user_tz":-540,"elapsed":2,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"78edb6b5-8053-42c6-b1c8-cceb8f597114"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["111"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["W_df=pd.DataFrame(w_hist_lstm[:-1],columns=rtn_df.columns,index=list(date)[20:])\n","W_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"l9pAc7LmC26C","executionInfo":{"status":"ok","timestamp":1653033803905,"user_tz":-540,"elapsed":590,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"49dff14f-14e8-4492-e900-d784f191cb76"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               단기채로그     중기채로그     ksp로그     iau로그     dbc로그     vnq로그  \\\n","2019-11-01  0.355186  0.348467  0.062849  0.078690  0.050835  0.052047   \n","2019-11-04  0.353202  0.347743  0.061231  0.086695  0.049464  0.050826   \n","2019-11-05  0.352156  0.346115  0.059325  0.091626  0.049265  0.050576   \n","2019-11-06  0.354943  0.348307  0.059617  0.085308  0.049805  0.050893   \n","2019-11-07  0.355415  0.349859  0.060120  0.082692  0.049827  0.050998   \n","...              ...       ...       ...       ...       ...       ...   \n","2020-03-31  0.328516  0.298711  0.095885  0.129814  0.051415  0.048164   \n","2020-04-01  0.353026  0.337396  0.067385  0.089675  0.052082  0.050684   \n","2020-04-02  0.331487  0.314664  0.085214  0.126596  0.047261  0.047240   \n","2020-04-03  0.346991  0.339629  0.058950  0.109365  0.048167  0.048424   \n","2020-04-06  0.339450  0.330964  0.053708  0.133598  0.047326  0.047443   \n","\n","               nsd로그  \n","2019-11-01  0.051926  \n","2019-11-04  0.050840  \n","2019-11-05  0.050936  \n","2019-11-06  0.051127  \n","2019-11-07  0.051088  \n","...              ...  \n","2020-03-31  0.047496  \n","2020-04-01  0.049751  \n","2020-04-02  0.047536  \n","2020-04-03  0.048476  \n","2020-04-06  0.047511  \n","\n","[110 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-66c783d0-df1b-40d8-a910-0649b9fbb3d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>ksp로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-11-01</th>\n","      <td>0.355186</td>\n","      <td>0.348467</td>\n","      <td>0.062849</td>\n","      <td>0.078690</td>\n","      <td>0.050835</td>\n","      <td>0.052047</td>\n","      <td>0.051926</td>\n","    </tr>\n","    <tr>\n","      <th>2019-11-04</th>\n","      <td>0.353202</td>\n","      <td>0.347743</td>\n","      <td>0.061231</td>\n","      <td>0.086695</td>\n","      <td>0.049464</td>\n","      <td>0.050826</td>\n","      <td>0.050840</td>\n","    </tr>\n","    <tr>\n","      <th>2019-11-05</th>\n","      <td>0.352156</td>\n","      <td>0.346115</td>\n","      <td>0.059325</td>\n","      <td>0.091626</td>\n","      <td>0.049265</td>\n","      <td>0.050576</td>\n","      <td>0.050936</td>\n","    </tr>\n","    <tr>\n","      <th>2019-11-06</th>\n","      <td>0.354943</td>\n","      <td>0.348307</td>\n","      <td>0.059617</td>\n","      <td>0.085308</td>\n","      <td>0.049805</td>\n","      <td>0.050893</td>\n","      <td>0.051127</td>\n","    </tr>\n","    <tr>\n","      <th>2019-11-07</th>\n","      <td>0.355415</td>\n","      <td>0.349859</td>\n","      <td>0.060120</td>\n","      <td>0.082692</td>\n","      <td>0.049827</td>\n","      <td>0.050998</td>\n","      <td>0.051088</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-31</th>\n","      <td>0.328516</td>\n","      <td>0.298711</td>\n","      <td>0.095885</td>\n","      <td>0.129814</td>\n","      <td>0.051415</td>\n","      <td>0.048164</td>\n","      <td>0.047496</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-01</th>\n","      <td>0.353026</td>\n","      <td>0.337396</td>\n","      <td>0.067385</td>\n","      <td>0.089675</td>\n","      <td>0.052082</td>\n","      <td>0.050684</td>\n","      <td>0.049751</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-02</th>\n","      <td>0.331487</td>\n","      <td>0.314664</td>\n","      <td>0.085214</td>\n","      <td>0.126596</td>\n","      <td>0.047261</td>\n","      <td>0.047240</td>\n","      <td>0.047536</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-03</th>\n","      <td>0.346991</td>\n","      <td>0.339629</td>\n","      <td>0.058950</td>\n","      <td>0.109365</td>\n","      <td>0.048167</td>\n","      <td>0.048424</td>\n","      <td>0.048476</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-06</th>\n","      <td>0.339450</td>\n","      <td>0.330964</td>\n","      <td>0.053708</td>\n","      <td>0.133598</td>\n","      <td>0.047326</td>\n","      <td>0.047443</td>\n","      <td>0.047511</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>110 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66c783d0-df1b-40d8-a910-0649b9fbb3d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-66c783d0-df1b-40d8-a910-0649b9fbb3d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-66c783d0-df1b-40d8-a910-0649b9fbb3d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["W_df.to_csv(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/비중DF/하락/기간\"+str(perf_df.index[1])[:10]+\"-\"+str(perf_df.index[-1])[:10]+\"감마\"+str(GAMMA_CONST)+\"REG\"+str(REG_CONST)+\"가중치(일자별).csv\")\n"],"metadata":{"id":"1vVrrTal_DXH","executionInfo":{"status":"ok","timestamp":1653033809808,"user_tz":-540,"elapsed":402,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}}},"execution_count":40,"outputs":[]},{"cell_type":"markdown","source":["# 가중치 데이터 저장"],"metadata":{"id":"m0rCDApfIr_6"}},{"cell_type":"code","source":["W_df=pd.DataFrame(w_hist_lstm,columns=symbol,index=list(perf_df.index[1:]))\n","W_df.head()\n","W_df.to_csv(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/상승/비중DF/기간\"+str(perf_df.index[1])[:10]+\"-\"+str(perf_df.index[-1])[:10]+\"감마\"+str(GAMMA_CONST)+\"REG\"+str(REG_CONST)+\"가중치.csv\")\n"],"metadata":{"id":"nYDGXzwFSeAd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 타 펀드 비교(KB)"],"metadata":{"id":"gCBhQKGlWoHG"}},{"cell_type":"code","source":["kb=pd.read_excel(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/kb아무것도못하쥬.xlsx\")\n","kb.일자=pd.to_datetime(kb.일자)\n","kb=kb.set_index('일자')\n","#일자설정\n","kb=kb.loc[perf_df.index[0]:perf_df.index[-1]]\n","kb['금액']=10000\n","kb['수익률(%)']=kb['수익률(%)']*0.01\n","for i in range(1,kb.shape[0]):\n","    kb.iloc[i,1]=kb.iloc[i,0]*kb.iloc[i-1,1]+kb.iloc[i-1,1]\n","p_df=perf_df.copy()\n","p_df=p_df.reset_index()\n","kb=kb.reset_index()\n","grp=pd.merge(p_df,kb,left_on='Date',right_on='일자',how='outer')\n","grp=grp.set_index('Date')\n","grp=grp[['crp', 'lstm_markowitz', 'kospi', '금액']]\n","grp.columns=['crp', 'lstm_markowitz', 'kospi', 'KB펀드']\n","grp=grp.dropna()"],"metadata":{"id":"329Yj5IDSd06"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 타 펀드 비교 <미래에셋>"],"metadata":{"id":"NZLVULMeDGxu"}},{"cell_type":"code","source":["fa=pd.read_csv(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/미래에셋.csv\")\n","fa=fa.T\n","fa=fa.iloc[1:]\n","fa=fa.reset_index()\n","fa['index']=pd.to_datetime(fa['index'])\n","fa=fa.set_index('index')\n","fa.columns=['투자수익률','비교지수']\n","fa['미래에셋']=fa['투자수익률']*0.01*10000+10000\n","fa['미래에셋_pct']=fa['미래에셋'].pct_change(1)\n","#일자설정\n","fa=fa.loc[perf_df.index[0]:perf_df.index[-1]]\n","fa['미래에셋']=10000\n","for i in range(1,fa.shape[0]):\n","    fa.iloc[i,2]=fa.iloc[i,3]*fa.iloc[i-1,2]+fa.iloc[i-1,2]\n","fa=fa.reset_index()\n","fa['index']=pd.to_datetime(fa['index'])\n","grp=pd.merge(grp.reset_index(),fa[['index','미래에셋']],left_on='Date',right_on='index',how='outer')\n","grp=grp[['Date','lstm_markowitz','kospi','미래에셋','KB펀드']]\n","grp=grp.dropna()\n","grp=grp.set_index('Date')"],"metadata":{"id":"_aH8bfLQDKS8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 차트 이미지 저장"],"metadata":{"id":"Jv70FOK4LFEl"}},{"cell_type":"code","source":["p = grp.plot(figsize=(12, 7), style = '-o', fontsize=12)\n","p.legend(fontsize=12)\n","plt.savefig(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/차트/최근하락/기간\"+str(perf_df.index[1])[:10]+\"-\"+str(perf_df.index[-1])[:10]+\"감마\"+str(GAMMA_CONST)+\"REG\"+str(REG_CONST)+\"가중치.png\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"QSrfSH44fOa-","executionInfo":{"status":"ok","timestamp":1653030620894,"user_tz":-540,"elapsed":1345,"user":{"displayName":"sh Lee","userId":"03068058553184603346"}},"outputId":"85b6960b-785c-46de-8fa2-5fe131b17a6c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# 주식 전략 결합"],"metadata":{"id":"7xFPzQenXYwd"}},{"cell_type":"code","source":["log_df=pd.read_csv(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/최종데이터셋.csv\")"],"metadata":{"id":"I696VyCkZJPJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df['Date']=pd.to_datetime(log_df['Date'])"],"metadata":{"id":"SjrOpzBPZdgT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r_df=pd.read_csv(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/레버리지로그수익률.csv\")"],"metadata":{"id":"6d0HvfeAUyXU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r_df=r_df.fillna(0)"],"metadata":{"id":"aW9KiwmxVBRd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r_df['Unnamed: 0']=pd.to_datetime(r_df['Unnamed: 0'])\n","r_df.columns=['Date','레버리지기법']\n","r_df=r_df.set_index('Date')"],"metadata":{"id":"UmbsZBdrVEqW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r_df.loc[perf_df.index[0]:perf_df.index[-1]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"LQpyK8D3xtYW","executionInfo":{"status":"ok","timestamp":1653013804459,"user_tz":-540,"elapsed":376,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"85ae33f3-4642-4638-fa6e-e1efc3e81ac1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              레버리지기법\n","Date                \n","2019-11-29 -0.015485\n","2019-12-02 -0.002901\n","2019-12-03 -0.005283\n","2019-12-04 -0.004294\n","2019-12-05 -0.004628\n","...              ...\n","2020-03-18 -0.030767\n","2020-03-19 -0.050451\n","2020-03-20  0.039518\n","2020-03-23 -0.064183\n","2020-03-24  0.089087\n","\n","[78 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-32706d9e-58cf-4d78-a993-9be2d1d73138\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>레버리지기법</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-11-29</th>\n","      <td>-0.015485</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-02</th>\n","      <td>-0.002901</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-03</th>\n","      <td>-0.005283</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-04</th>\n","      <td>-0.004294</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-05</th>\n","      <td>-0.004628</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-18</th>\n","      <td>-0.030767</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-19</th>\n","      <td>-0.050451</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-20</th>\n","      <td>0.039518</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-23</th>\n","      <td>-0.064183</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-24</th>\n","      <td>0.089087</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>78 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32706d9e-58cf-4d78-a993-9be2d1d73138')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-32706d9e-58cf-4d78-a993-9be2d1d73138 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-32706d9e-58cf-4d78-a993-9be2d1d73138');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["log_df=pd.merge(log_df,r_df[['Date','레버리지기법']],on='Date',how='outer').dropna()"],"metadata":{"id":"NOSgkL8YbXy8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r_df = r_df.set_index('Date')"],"metadata":{"id":"od9aDxv6UR3r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df = log_df.set_index('Date')"],"metadata":{"id":"4g4lbQ-zqA0w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#비중 df\n","w_df=pd.DataFrame(w_hist_lstm,columns=symbol,index=list(perf_df.index[1:]))"],"metadata":{"id":"69JO-PUWcbPx","colab":{"base_uri":"https://localhost:8080/","height":450},"executionInfo":{"status":"error","timestamp":1653014110951,"user_tz":-540,"elapsed":389,"user":{"displayName":"우승우","userId":"11434178518191692095"}},"outputId":"e9128b42-5960-4e6b-c7c0-3512395a2ee5"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mcreate_block_manager_from_arrays\u001b[0;34m(arrays, names, axes, consolidate)\u001b[0m\n\u001b[1;32m   1773\u001b[0m         \u001b[0mblocks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_form_blocks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconsolidate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1774\u001b[0;31m         \u001b[0mmgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBlockManager\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mblocks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1775\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, blocks, axes, verify_integrity)\u001b[0m\n\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 914\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_verify_integrity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    915\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_verify_integrity\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    920\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mblock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mmgr_shape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 921\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mconstruction_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtot_items\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mblock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    922\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mtot_items\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Shape of passed values is (71, 7), indices imply (4, 7)","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-44-65e61a69243d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#비중 df\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mw_df\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mw_hist_lstm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msymbol\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mperf_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[1;32m    706\u001b[0m                         \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    707\u001b[0m                         \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 708\u001b[0;31m                         \u001b[0mtyp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmanager\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    709\u001b[0m                     )\n\u001b[1;32m    710\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36marrays_to_mgr\u001b[0;34m(arrays, arr_names, index, columns, dtype, verify_integrity, typ, consolidate)\u001b[0m\n\u001b[1;32m    134\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mtyp\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"block\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    135\u001b[0m         return create_block_manager_from_arrays(\n\u001b[0;32m--> 136\u001b[0;31m             \u001b[0marrays\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marr_names\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconsolidate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconsolidate\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    137\u001b[0m         )\n\u001b[1;32m    138\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mtyp\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"array\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mcreate_block_manager_from_arrays\u001b[0;34m(arrays, names, axes, consolidate)\u001b[0m\n\u001b[1;32m   1774\u001b[0m         \u001b[0mmgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBlockManager\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mblocks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1775\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1776\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mconstruction_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1777\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mconsolidate\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1778\u001b[0m         \u001b[0mmgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_consolidate_inplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Shape of passed values is (71, 7), indices imply (4, 7)"]}]},{"cell_type":"code","source":["w_df=w_df.reset_index()"],"metadata":{"id":"C9z1fJQAqc27"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["w_df.columns=['Date', '단기채w', '중기채w', 'kspw', 'iauw', 'dbcw', 'vnqw',\n","       'nsdw']\n","w_df.Date=pd.to_datetime(w_df.Date)"],"metadata":{"id":"01LSiKj4cnNh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df=pd.merge(log_df,w_df,on='Date',how='outer')"],"metadata":{"id":"O9cHPCp7dP4R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#기간별로 정렬\n","log_df=log_df.sort_values(by=['Date'], ascending=True)"],"metadata":{"id":"WynYnz4vdUS5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df=log_df.fillna(method='ffill').dropna()"],"metadata":{"id":"G6fGR8Fid4DP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df[['단기채로그', '중기채로그', 'ksp로그', 'iau로그', 'dbc로그', 'vnq로그', 'nsd로그','레버리지기법']]=log_df[['단기채로그', '중기채로그', 'ksp로그', 'iau로그', 'dbc로그', 'vnq로그', 'nsd로그','레버리지기법']].cumsum()"],"metadata":{"id":"OeSdx1ViePQu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df['금액']=log_df['금액']*log_df['단기채w']*np.exp(log_df['단기채로그'])+log_df['금액']*log_df['중기채w']*np.exp(log_df['중기채로그'])+log_df['금액']*log_df['iauw']*np.exp(log_df['iau로그'])+log_df['금액']*log_df['dbcw']*np.exp(log_df['dbc로그'])+log_df['금액']*log_df['vnqw']*np.exp(log_df['vnq로그'])+log_df['금액']*log_df['nsdw']*np.exp(log_df['nsd로그'])+log_df['금액']*log_df['kspw']*np.exp(log_df['ksp로그'])\n"],"metadata":{"id":"K7w1KvWVYFQs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eLrlhgvFjHRX","executionInfo":{"status":"ok","timestamp":1652665656808,"user_tz":-540,"elapsed":359,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"b3cea92b-bcf7-4196-8229-b262afcc70b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Date', 'crp', 'lstm_markowitz', 'kospi', '미래에셋', 'KB펀드', '단기채로그',\n","       '중기채로그', 'ksp로그', 'iau로그', 'dbc로그', 'vnq로그', 'nsd로그', '상승', '코스피',\n","       '레버리지기법', '단기채w', '중기채w', 'kspw', 'iauw', 'dbcw', 'vnqw', 'nsdw'],\n","      dtype='object')"]},"metadata":{},"execution_count":289}]},{"cell_type":"code","source":["log_df['금액']=10000"],"metadata":{"id":"KTkqJN9RYpyn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":678},"id":"UlueYcXbq0Yu","executionInfo":{"status":"ok","timestamp":1652667668535,"user_tz":-540,"elapsed":425,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"f1e4fe3d-6c69-4cd5-f199-8faf3a4eacc2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     index       Date     단기채로그     중기채로그     ksp로그     iau로그     dbc로그  \\\n","0     3436 2020-01-29  0.000055  0.000712  0.003925  0.004659 -0.004709   \n","1     3437 2020-01-30  0.000121  0.001354 -0.013282  0.005323 -0.013514   \n","2     3438 2020-01-31  0.000174  0.001314 -0.026870  0.011937 -0.021710   \n","3     3439 2020-02-03  0.000335  0.002022 -0.026932  0.004659 -0.040403   \n","4     3440 2020-02-04  0.000394  0.000961 -0.008684 -0.008710 -0.039006   \n","..     ...        ...       ...       ...       ...       ...       ...   \n","562   3996 2022-05-03  0.024343 -0.009579  0.221533  0.136900  0.626770   \n","563   3997 2022-05-04  0.024427 -0.010443  0.220454  0.146719  0.657498   \n","564   3998 2022-05-06  0.024537 -0.009443  0.208031  0.148680  0.658558   \n","565   3999 2022-05-09  0.024738 -0.007295  0.208031  0.133740  0.612274   \n","566   4000 2022-05-10  0.024801 -0.006621  0.189732  0.125183  0.606335   \n","\n","        vnq로그     nsd로그   상승          코스피    레버리지기법      단기채w      중기채w  \\\n","0   -0.003677  0.037094  1.0  2185.280029  0.016772  0.070550  0.061675   \n","1   -0.002940  0.042455  1.0  2148.000000 -0.005751  0.070550  0.061675   \n","2   -0.015214  0.046757  1.0  2119.010010 -0.008286  0.070550  0.061675   \n","3   -0.011919  0.058113  1.0  2118.879883 -0.010043  0.070550  0.061675   \n","4   -0.001679  0.065556  1.0  2157.899902  0.003297  0.070550  0.061675   \n","..        ...       ...  ...          ...       ...       ...       ...   \n","562  0.160364  0.302106  0.0  2680.459961  0.163253  0.263879  0.204511   \n","563  0.171790  0.316322  0.0  2677.570068  0.159386  0.263879  0.204511   \n","564  0.159849  0.299329  0.0  2644.510010  0.137692  0.263879  0.204511   \n","565  0.114806  0.258381  0.0  2644.510010  0.118379  0.263879  0.204511   \n","566  0.096418  0.255641  0.0  2596.560059  0.122988  0.263879  0.204511   \n","\n","         kspw      iauw      dbcw      vnqw      nsdw            금액  \n","0    0.064723  0.154777  0.057919  0.192750  0.397606  10039.325493  \n","1    0.064723  0.154777  0.057919  0.192750  0.397606   9868.058496  \n","2    0.064723  0.154777  0.057919  0.192750  0.397606   9734.876504  \n","3    0.064723  0.154777  0.057919  0.192750  0.397606   9734.278691  \n","4    0.064723  0.154777  0.057919  0.192750  0.397606   9913.539322  \n","..        ...       ...       ...       ...       ...           ...  \n","562  0.091360  0.088651  0.146297  0.118937  0.086365  12479.885875  \n","563  0.091360  0.088651  0.146297  0.118937  0.086365  12466.430897  \n","564  0.091360  0.088651  0.146297  0.118937  0.086365  12312.507405  \n","565  0.091360  0.088651  0.146297  0.118937  0.086365  12312.507405  \n","566  0.091360  0.088651  0.146297  0.118937  0.086365  12089.258437  \n","\n","[567 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-b3a82325-f3b0-4c0d-a747-9aba38e2715b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Date</th>\n","      <th>단기채로그</th>\n","      <th>중기채로그</th>\n","      <th>ksp로그</th>\n","      <th>iau로그</th>\n","      <th>dbc로그</th>\n","      <th>vnq로그</th>\n","      <th>nsd로그</th>\n","      <th>상승</th>\n","      <th>코스피</th>\n","      <th>레버리지기법</th>\n","      <th>단기채w</th>\n","      <th>중기채w</th>\n","      <th>kspw</th>\n","      <th>iauw</th>\n","      <th>dbcw</th>\n","      <th>vnqw</th>\n","      <th>nsdw</th>\n","      <th>금액</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3436</td>\n","      <td>2020-01-29</td>\n","      <td>0.000055</td>\n","      <td>0.000712</td>\n","      <td>0.003925</td>\n","      <td>0.004659</td>\n","      <td>-0.004709</td>\n","      <td>-0.003677</td>\n","      <td>0.037094</td>\n","      <td>1.0</td>\n","      <td>2185.280029</td>\n","      <td>0.016772</td>\n","      <td>0.070550</td>\n","      <td>0.061675</td>\n","      <td>0.064723</td>\n","      <td>0.154777</td>\n","      <td>0.057919</td>\n","      <td>0.192750</td>\n","      <td>0.397606</td>\n","      <td>10039.325493</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3437</td>\n","      <td>2020-01-30</td>\n","      <td>0.000121</td>\n","      <td>0.001354</td>\n","      <td>-0.013282</td>\n","      <td>0.005323</td>\n","      <td>-0.013514</td>\n","      <td>-0.002940</td>\n","      <td>0.042455</td>\n","      <td>1.0</td>\n","      <td>2148.000000</td>\n","      <td>-0.005751</td>\n","      <td>0.070550</td>\n","      <td>0.061675</td>\n","      <td>0.064723</td>\n","      <td>0.154777</td>\n","      <td>0.057919</td>\n","      <td>0.192750</td>\n","      <td>0.397606</td>\n","      <td>9868.058496</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3438</td>\n","      <td>2020-01-31</td>\n","      <td>0.000174</td>\n","      <td>0.001314</td>\n","      <td>-0.026870</td>\n","      <td>0.011937</td>\n","      <td>-0.021710</td>\n","      <td>-0.015214</td>\n","      <td>0.046757</td>\n","      <td>1.0</td>\n","      <td>2119.010010</td>\n","      <td>-0.008286</td>\n","      <td>0.070550</td>\n","      <td>0.061675</td>\n","      <td>0.064723</td>\n","      <td>0.154777</td>\n","      <td>0.057919</td>\n","      <td>0.192750</td>\n","      <td>0.397606</td>\n","      <td>9734.876504</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3439</td>\n","      <td>2020-02-03</td>\n","      <td>0.000335</td>\n","      <td>0.002022</td>\n","      <td>-0.026932</td>\n","      <td>0.004659</td>\n","      <td>-0.040403</td>\n","      <td>-0.011919</td>\n","      <td>0.058113</td>\n","      <td>1.0</td>\n","      <td>2118.879883</td>\n","      <td>-0.010043</td>\n","      <td>0.070550</td>\n","      <td>0.061675</td>\n","      <td>0.064723</td>\n","      <td>0.154777</td>\n","      <td>0.057919</td>\n","      <td>0.192750</td>\n","      <td>0.397606</td>\n","      <td>9734.278691</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3440</td>\n","      <td>2020-02-04</td>\n","      <td>0.000394</td>\n","      <td>0.000961</td>\n","      <td>-0.008684</td>\n","      <td>-0.008710</td>\n","      <td>-0.039006</td>\n","      <td>-0.001679</td>\n","      <td>0.065556</td>\n","      <td>1.0</td>\n","      <td>2157.899902</td>\n","      <td>0.003297</td>\n","      <td>0.070550</td>\n","      <td>0.061675</td>\n","      <td>0.064723</td>\n","      <td>0.154777</td>\n","      <td>0.057919</td>\n","      <td>0.192750</td>\n","      <td>0.397606</td>\n","      <td>9913.539322</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>562</th>\n","      <td>3996</td>\n","      <td>2022-05-03</td>\n","      <td>0.024343</td>\n","      <td>-0.009579</td>\n","      <td>0.221533</td>\n","      <td>0.136900</td>\n","      <td>0.626770</td>\n","      <td>0.160364</td>\n","      <td>0.302106</td>\n","      <td>0.0</td>\n","      <td>2680.459961</td>\n","      <td>0.163253</td>\n","      <td>0.263879</td>\n","      <td>0.204511</td>\n","      <td>0.091360</td>\n","      <td>0.088651</td>\n","      <td>0.146297</td>\n","      <td>0.118937</td>\n","      <td>0.086365</td>\n","      <td>12479.885875</td>\n","    </tr>\n","    <tr>\n","      <th>563</th>\n","      <td>3997</td>\n","      <td>2022-05-04</td>\n","      <td>0.024427</td>\n","      <td>-0.010443</td>\n","      <td>0.220454</td>\n","      <td>0.146719</td>\n","      <td>0.657498</td>\n","      <td>0.171790</td>\n","      <td>0.316322</td>\n","      <td>0.0</td>\n","      <td>2677.570068</td>\n","      <td>0.159386</td>\n","      <td>0.263879</td>\n","      <td>0.204511</td>\n","      <td>0.091360</td>\n","      <td>0.088651</td>\n","      <td>0.146297</td>\n","      <td>0.118937</td>\n","      <td>0.086365</td>\n","      <td>12466.430897</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>3998</td>\n","      <td>2022-05-06</td>\n","      <td>0.024537</td>\n","      <td>-0.009443</td>\n","      <td>0.208031</td>\n","      <td>0.148680</td>\n","      <td>0.658558</td>\n","      <td>0.159849</td>\n","      <td>0.299329</td>\n","      <td>0.0</td>\n","      <td>2644.510010</td>\n","      <td>0.137692</td>\n","      <td>0.263879</td>\n","      <td>0.204511</td>\n","      <td>0.091360</td>\n","      <td>0.088651</td>\n","      <td>0.146297</td>\n","      <td>0.118937</td>\n","      <td>0.086365</td>\n","      <td>12312.507405</td>\n","    </tr>\n","    <tr>\n","      <th>565</th>\n","      <td>3999</td>\n","      <td>2022-05-09</td>\n","      <td>0.024738</td>\n","      <td>-0.007295</td>\n","      <td>0.208031</td>\n","      <td>0.133740</td>\n","      <td>0.612274</td>\n","      <td>0.114806</td>\n","      <td>0.258381</td>\n","      <td>0.0</td>\n","      <td>2644.510010</td>\n","      <td>0.118379</td>\n","      <td>0.263879</td>\n","      <td>0.204511</td>\n","      <td>0.091360</td>\n","      <td>0.088651</td>\n","      <td>0.146297</td>\n","      <td>0.118937</td>\n","      <td>0.086365</td>\n","      <td>12312.507405</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>4000</td>\n","      <td>2022-05-10</td>\n","      <td>0.024801</td>\n","      <td>-0.006621</td>\n","      <td>0.189732</td>\n","      <td>0.125183</td>\n","      <td>0.606335</td>\n","      <td>0.096418</td>\n","      <td>0.255641</td>\n","      <td>0.0</td>\n","      <td>2596.560059</td>\n","      <td>0.122988</td>\n","      <td>0.263879</td>\n","      <td>0.204511</td>\n","      <td>0.091360</td>\n","      <td>0.088651</td>\n","      <td>0.146297</td>\n","      <td>0.118937</td>\n","      <td>0.086365</td>\n","      <td>12089.258437</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>567 rows × 20 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3a82325-f3b0-4c0d-a747-9aba38e2715b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b3a82325-f3b0-4c0d-a747-9aba38e2715b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b3a82325-f3b0-4c0d-a747-9aba38e2715b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":370}]},{"cell_type":"code","source":["log_df['금액']=log_df['금액']*np.exp(log_df['ksp로그'])\n"],"metadata":{"id":"ljFcodADeCDP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_df=log_df.reset_index()"],"metadata":{"id":"vyrfR5Nchfsk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["grp=pd.merge(grp.reset_index(),log_df[['Date','금액']],on='Date',how='outer').dropna()"],"metadata":{"id":"yJYxymd-hvxe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["p = grp[['lstm_markowitz', 'kospi', '미래에셋', 'KB펀드','금액']].plot(figsize=(12, 7), style = '-o', fontsize=12)\n","p.legend(fontsize=12)\n","plt.savefig(\"/content/gdrive/My Drive/FINAL TEAM/파이널프로젝트/비주식팀/Data/차트/기간\"+str(perf_df.index[1])[:10]+\"-\"+str(perf_df.index[-1])[:10]+\"감마\"+str(GAMMA_CONST)+\"REG\"+str(REG_CONST)+\"가중치.png\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"7HON8gFJhpC_","executionInfo":{"status":"ok","timestamp":1652667626700,"user_tz":-540,"elapsed":863,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"763445bc-0232-41f6-b691-bea76d236130"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["grp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"sINA1K4oquCo","executionInfo":{"status":"ok","timestamp":1652667884181,"user_tz":-540,"elapsed":399,"user":{"displayName":"sh c","userId":"16640771831008885630"}},"outputId":"a9df9b6c-f95b-4d6c-c4f5-df8662b8696a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     crp  lstm_markowitz         kospi          미래에셋  \\\n","Date                                                                   \n","2019-12-31  10000.000000    10000.000000  10000.000000  10000.000000   \n","2020-01-29  10036.938181    10224.825144   9943.622596   9629.564297   \n","2020-02-26  10005.999563    10295.900080   9449.872335   8954.842124   \n","2020-03-25   8402.684397     8137.672903   7757.124911   6931.557594   \n","2020-04-22   9057.310134     8708.347455   8628.001892   7832.951138   \n","2020-05-20   9362.758662     9051.162397   9053.406951   8273.064032   \n","2020-06-17   9824.690125     9496.075493   9742.364072   8539.424943   \n","2020-07-15   9957.452690     9693.330050  10019.156475   8721.114835   \n","2020-08-12  10371.504093    10128.862742  11067.859069   9440.818487   \n","2020-09-09  10292.450094    10063.904103  10810.586408   9187.687423   \n","2020-10-07  10275.134080     9984.177318  10861.230422   9319.103898   \n","2020-11-04  10237.541204     9981.092303  10726.451888   9218.557065   \n","2020-12-02  10597.367513    10321.319603  12176.077380  10275.180808   \n","2020-12-31  10894.766691    10518.663007  13075.075297  11180.984301   \n","2021-01-29  11152.962972    10823.820056  13542.570389  11487.916740   \n","2021-02-26  11372.913887    10954.044864  13709.747406  11794.849180   \n","2021-03-26  11325.681680    11101.501111  13837.428358  12222.614218   \n","2021-04-23  11839.313048    11778.345831  14474.785528  12817.957312   \n","2021-05-21  12021.770849    12011.649133  14362.575064  12713.000529   \n","2021-06-18  12277.632671    12309.262421  14869.976147  12985.535368   \n","2021-07-16  12426.582998    12415.465402  14910.837517  13082.554242   \n","2021-08-13  12453.489541    12646.145731  14430.238170  12573.646146   \n","2021-09-10  12541.492616    12927.108612  14223.064067  12628.329511   \n","2021-10-08  12507.212782    12833.097990  13451.974837  11965.073205   \n","2021-11-05  12761.542320    13370.005194  13510.991755  11899.805962   \n","2021-12-03  12483.723393    12989.070543  13506.714764  12004.762745   \n","2021-12-31  12894.858341    13492.275383  13549.122517  12262.303757   \n","2022-01-28  12169.251869    12293.796849  12118.926784  11074.263539   \n","2022-02-25  12386.036159    12415.628222  12179.991104  11158.934556   \n","2022-03-25  12836.006161    12819.592352  12422.156545  11382.959958   \n","2022-04-22  12913.432618    12896.716753  12307.171036  11360.028224   \n","\n","                    KB펀드  \n","Date                      \n","2019-12-31  10000.000000  \n","2020-01-29  10001.226413  \n","2020-02-26  10003.711958  \n","2020-03-25   9384.491606  \n","2020-04-22   9915.377562  \n","2020-05-20  10137.949590  \n","2020-06-17  10302.839218  \n","2020-07-15  10403.527375  \n","2020-08-12  10647.166535  \n","2020-09-09  10601.037559  \n","2020-10-07  10595.732142  \n","2020-11-04  10556.818433  \n","2020-12-02  10927.285521  \n","2020-12-31  11241.136501  \n","2021-01-29  11444.498132  \n","2021-02-26  11676.615631  \n","2021-03-26  11856.883786  \n","2021-04-23  12055.941048  \n","2021-05-21  12026.296586  \n","2021-06-18  12186.972527  \n","2021-07-16  12302.854271  \n","2021-08-13  12365.113572  \n","2021-09-10  12259.260034  \n","2021-10-08  12097.598061  \n","2021-11-05  12153.756683  \n","2021-12-03  12070.437716  \n","2021-12-31  12189.993461  \n","2022-01-28  11746.996099  \n","2022-02-25  11705.772804  \n","2022-03-25  11867.286281  \n","2022-04-22  11849.037618  "],"text/html":["\n","  <div id=\"df-020898d0-7d54-463b-8a28-5e5c205a679d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crp</th>\n","      <th>lstm_markowitz</th>\n","      <th>kospi</th>\n","      <th>미래에셋</th>\n","      <th>KB펀드</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-12-31</th>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>10036.938181</td>\n","      <td>10224.825144</td>\n","      <td>9943.622596</td>\n","      <td>9629.564297</td>\n","      <td>10001.226413</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>10005.999563</td>\n","      <td>10295.900080</td>\n","      <td>9449.872335</td>\n","      <td>8954.842124</td>\n","      <td>10003.711958</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-25</th>\n","      <td>8402.684397</td>\n","      <td>8137.672903</td>\n","      <td>7757.124911</td>\n","      <td>6931.557594</td>\n","      <td>9384.491606</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-22</th>\n","      <td>9057.310134</td>\n","      <td>8708.347455</td>\n","      <td>8628.001892</td>\n","      <td>7832.951138</td>\n","      <td>9915.377562</td>\n","    </tr>\n","    <tr>\n","      <th>2020-05-20</th>\n","      <td>9362.758662</td>\n","      <td>9051.162397</td>\n","      <td>9053.406951</td>\n","      <td>8273.064032</td>\n","      <td>10137.949590</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-17</th>\n","      <td>9824.690125</td>\n","      <td>9496.075493</td>\n","      <td>9742.364072</td>\n","      <td>8539.424943</td>\n","      <td>10302.839218</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-15</th>\n","      <td>9957.452690</td>\n","      <td>9693.330050</td>\n","      <td>10019.156475</td>\n","      <td>8721.114835</td>\n","      <td>10403.527375</td>\n","    </tr>\n","    <tr>\n","      <th>2020-08-12</th>\n","      <td>10371.504093</td>\n","      <td>10128.862742</td>\n","      <td>11067.859069</td>\n","      <td>9440.818487</td>\n","      <td>10647.166535</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-09</th>\n","      <td>10292.450094</td>\n","      <td>10063.904103</td>\n","      <td>10810.586408</td>\n","      <td>9187.687423</td>\n","      <td>10601.037559</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-07</th>\n","      <td>10275.134080</td>\n","      <td>9984.177318</td>\n","      <td>10861.230422</td>\n","      <td>9319.103898</td>\n","      <td>10595.732142</td>\n","    </tr>\n","    <tr>\n","      <th>2020-11-04</th>\n","      <td>10237.541204</td>\n","      <td>9981.092303</td>\n","      <td>10726.451888</td>\n","      <td>9218.557065</td>\n","      <td>10556.818433</td>\n","    </tr>\n","    <tr>\n","      <th>2020-12-02</th>\n","      <td>10597.367513</td>\n","      <td>10321.319603</td>\n","      <td>12176.077380</td>\n","      <td>10275.180808</td>\n","      <td>10927.285521</td>\n","    </tr>\n","    <tr>\n","      <th>2020-12-31</th>\n","      <td>10894.766691</td>\n","      <td>10518.663007</td>\n","      <td>13075.075297</td>\n","      <td>11180.984301</td>\n","      <td>11241.136501</td>\n","    </tr>\n","    <tr>\n","      <th>2021-01-29</th>\n","      <td>11152.962972</td>\n","      <td>10823.820056</td>\n","      <td>13542.570389</td>\n","      <td>11487.916740</td>\n","      <td>11444.498132</td>\n","    </tr>\n","    <tr>\n","      <th>2021-02-26</th>\n","      <td>11372.913887</td>\n","      <td>10954.044864</td>\n","      <td>13709.747406</td>\n","      <td>11794.849180</td>\n","      <td>11676.615631</td>\n","    </tr>\n","    <tr>\n","      <th>2021-03-26</th>\n","      <td>11325.681680</td>\n","      <td>11101.501111</td>\n","      <td>13837.428358</td>\n","      <td>12222.614218</td>\n","      <td>11856.883786</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-23</th>\n","      <td>11839.313048</td>\n","      <td>11778.345831</td>\n","      <td>14474.785528</td>\n","      <td>12817.957312</td>\n","      <td>12055.941048</td>\n","    </tr>\n","    <tr>\n","      <th>2021-05-21</th>\n","      <td>12021.770849</td>\n","      <td>12011.649133</td>\n","      <td>14362.575064</td>\n","      <td>12713.000529</td>\n","      <td>12026.296586</td>\n","    </tr>\n","    <tr>\n","      <th>2021-06-18</th>\n","      <td>12277.632671</td>\n","      <td>12309.262421</td>\n","      <td>14869.976147</td>\n","      <td>12985.535368</td>\n","      <td>12186.972527</td>\n","    </tr>\n","    <tr>\n","      <th>2021-07-16</th>\n","      <td>12426.582998</td>\n","      <td>12415.465402</td>\n","      <td>14910.837517</td>\n","      <td>13082.554242</td>\n","      <td>12302.854271</td>\n","    </tr>\n","    <tr>\n","      <th>2021-08-13</th>\n","      <td>12453.489541</td>\n","      <td>12646.145731</td>\n","      <td>14430.238170</td>\n","      <td>12573.646146</td>\n","      <td>12365.113572</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-10</th>\n","      <td>12541.492616</td>\n","      <td>12927.108612</td>\n","      <td>14223.064067</td>\n","      <td>12628.329511</td>\n","      <td>12259.260034</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-08</th>\n","      <td>12507.212782</td>\n","      <td>12833.097990</td>\n","      <td>13451.974837</td>\n","      <td>11965.073205</td>\n","      <td>12097.598061</td>\n","    </tr>\n","    <tr>\n","      <th>2021-11-05</th>\n","      <td>12761.542320</td>\n","      <td>13370.005194</td>\n","      <td>13510.991755</td>\n","      <td>11899.805962</td>\n","      <td>12153.756683</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-03</th>\n","      <td>12483.723393</td>\n","      <td>12989.070543</td>\n","      <td>13506.714764</td>\n","      <td>12004.762745</td>\n","      <td>12070.437716</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-31</th>\n","      <td>12894.858341</td>\n","      <td>13492.275383</td>\n","      <td>13549.122517</td>\n","      <td>12262.303757</td>\n","      <td>12189.993461</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-28</th>\n","      <td>12169.251869</td>\n","      <td>12293.796849</td>\n","      <td>12118.926784</td>\n","      <td>11074.263539</td>\n","      <td>11746.996099</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-25</th>\n","      <td>12386.036159</td>\n","      <td>12415.628222</td>\n","      <td>12179.991104</td>\n","      <td>11158.934556</td>\n","      <td>11705.772804</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03-25</th>\n","      <td>12836.006161</td>\n","      <td>12819.592352</td>\n","      <td>12422.156545</td>\n","      <td>11382.959958</td>\n","      <td>11867.286281</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-22</th>\n","      <td>12913.432618</td>\n","      <td>12896.716753</td>\n","      <td>12307.171036</td>\n","      <td>11360.028224</td>\n","      <td>11849.037618</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-020898d0-7d54-463b-8a28-5e5c205a679d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-020898d0-7d54-463b-8a28-5e5c205a679d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-020898d0-7d54-463b-8a28-5e5c205a679d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":378}]},{"cell_type":"code","source":[""],"metadata":{"id":"P3fcexDhb_Gm"},"execution_count":null,"outputs":[]}]}